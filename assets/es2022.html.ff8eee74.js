import{_ as c,r as o,o as l,c as i,a,b as n,d as s,e as p}from"./app.9195bff3.js";const u={},r=n("h1",{id:"es2022-\u5B78\u7FD2\u7B46\u8A18",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#es2022-\u5B78\u7FD2\u7B46\u8A18","aria-hidden":"true"},"#"),s(" ES2022 \u5B78\u7FD2\u7B46\u8A18")],-1),d=n("p",null,"\u96A8\u8457\u6642\u9593\u63A8\u9032\uFF0CES \u898F\u7BC4\u4E5F\u5728\u4E0D\u65B7\u63A8\u9673\u51FA\u65B0\uFF0C\u672C\u7BC7\u7D00\u9304 ES2022 \u7684\u5E7E\u500B\u503C\u5F97\u4F7F\u7528\u7684\u65B0\u8A9E\u6CD5\uFF5E\uFF08\u6709\u4E9B\u5176\u5BE6\u53BB\u5E74\u5C31\u5DF2\u7D93\u53EF\u4EE5\u4F7F\u7528\u4E86\uFF01\uFF01\uFF09",-1),k=n("h2",{id:"introduce",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduce","aria-hidden":"true"},"#"),s(" Introduce")],-1),v=n("h3",{id:"top-level-await",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#top-level-await","aria-hidden":"true"},"#"),s(" Top-level await")],-1),m={href:"https://github.com/tc39/proposal-top-level-await",target:"_blank",rel:"noopener noreferrer"},b=s("Proposal Link"),h=p(`<p>\u4EE5\u5F80\u5728\u5168\u5C40\u74B0\u5883\u4E26\u4E0D\u652F\u63F4\u4F7F\u7528 await\uFF0CES2022 \u5F8C\u5728\u700F\u89BD\u5668\u7AEF\u4F7F\u7528 esmodule \u6642\uFF0C\u5C07\u53EF\u5728 top level \u4F7F\u7528 await \u8A9E\u6CD5\uFF0C\u9700\u8981\u6CE8\u610F\u4F7F\u7528 top level await \u6703\u8B93\u4F9D\u8CF4\u7684 module \u7B49\u5F85\u5176\u57F7\u884C\u5B8C\u7562\uFF0C\u4F7F\u7528\u6642\u8981\u7279\u5225\u5C0F\u5FC3</p><p>\u4E0B\u9762\u7BC4\u4F8B\u6211\u5011\u5728 esmodule \u4E2D\u7684 <code>index.js</code> \u5F15\u5165 <code>a.js</code>\uFF0C\u4E26\u5728 <code>import</code> \u884C\u70BA\u7684\u524D\u5F8C print</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// a.js</span>
<span class="token keyword">const</span> <span class="token function-variable function">a</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// top level await</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token string">&#39;done&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start loading moduleA&#39;</span><span class="token punctuation">,</span> moduleA<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> moduleA <span class="token keyword">from</span> <span class="token string">&#39;./a.js&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;moduleA imported&#39;</span><span class="token punctuation">,</span> moduleA<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u7D42\u57F7\u884C\u7684\u9806\u5E8F\u6703\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// wait 4 seconds</span>
<span class="token comment">// start loading moduleA done</span>
<span class="token comment">// moduleA imported done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5118\u7BA1\u6211\u5011\u5728 <code>import</code> \u524D\u4F7F\u7528 console \u4E26\u5F15\u7528 moduleA \u8B8A\u6578\uFF0C\u5BE6\u969B\u57F7\u884C\u6642\uFF0C<code>import</code> \u52D5\u4F5C\u6703\u512A\u5148\u8655\u7406\u4F9D\u8CF4\uFF0C\u82E5\u5F15\u5165\u7684\u6A21\u7D44\u5177\u6709 top level await \u6642\uFF0C\u4E5F\u5C0E\u81F4 <code>index.js</code> \u767C\u751F\u57F7\u884C\u5EF6\u9072\uFF0C\u9019\u662F\u4F7F\u7528\u4E0A\u5FC5\u9808\u8981\u7279\u5225\u6CE8\u610F\u7684\uFF01\uFF01</p><p>\u5BE6\u6E2C\u5728\u6700\u65B0 chrome \u5DF2\u7D93\u53EF\u4EE5\u4F7F\u7528\uFF0C\u53EF\u4EE5\u770B\u5230\u82E5\u4E0D\u662F\u5728 <code>esmodule</code> \u4F7F\u7528 top level await \u6703\u5674\u932F\uFF1A <code>Uncaught SyntaxError: await is only valid in async functions and the top level bodies of modules</code></p><h3 id="array-at" tabindex="-1"><a class="header-anchor" href="#array-at" aria-hidden="true">#</a> Array.at()</h3>`,9),y={href:"https://github.com/tc39/proposal-relative-indexing-method",target:"_blank",rel:"noopener noreferrer"},g=s("Proposal Link"),w=p(`<p>\u4E00\u76F4\u4EE5\u4F86\u5728 js \u4E2D\u82E5\u8981\u53D6\u5F97\u6700\u5F8C\u4E00\u500B\u5143\u7D20\u6211\u5011\u6703\u4F7F\u7528 <code>arr[arr.length - 1]</code> \u9019\u7A2E\u65B9\u5F0F\uFF0C\u65E2\u4E0D\u76F4\u89BA\uFF0C\u53C8\u4E0D\u9999\uFF0C\u5E38\u5E38\u770B\u8457\u9694\u58C1 python \u5782\u6D8E\uFF0C\u4F46\u56E0\u70BA js \u7684 <code>[]</code> \u8A9E\u6CD5\u4E5F\u540C\u6642\u7528\u5728 object keys \u6AA2\u7D22\u4E0A\uFF0C\u8CBC\u5FC3\u7684\u5718\u968A\u4FBF\u7D66\u4E86\u4E00\u500B <code>at()</code> \u65B9\u6CD5\u8B93\u6211\u5011\u4E5F\u53EF\u4EE5\u9999\u5674\u5674\u7684\u62FF\u5230\u6700\u5F8C\u4E00\u500B\u5143\u7D20\u4E86\uFF0C\u5BE6\u6E2C\u6700\u65B0 chrome \u4E5F\u5DF2\u652F\u63F4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-hasown" tabindex="-1"><a class="header-anchor" href="#object-hasown" aria-hidden="true">#</a> Object.hasOwn</h3>`,3),f={href:"https://github.com/tc39/proposal-accessible-object-hasownproperty",target:"_blank",rel:"noopener noreferrer"},x=s("Proposal Link"),j=p(`<p><code>Object.prototype.hasOwnProperty</code> \u4E00\u76F4\u4EE5\u4F86\u88AB\u4EBA\u8A6C\u75C5\u540D\u5B50\u592A\u9577\u4E0D\u597D\u4F7F\u7528\uFF0C\u65B0\u7684\u8A9E\u6CD5\u5C07\u53EF\u76F4\u63A5\u5F9E <code>Object</code> \u4E2D\u4F7F\u7528 <code>hasOwn</code> \u8ABF\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="error-cause" tabindex="-1"><a class="header-anchor" href="#error-cause" aria-hidden="true">#</a> Error Cause</h3>`,3),_={href:"https://github.com/tc39/proposal-error-cause",target:"_blank",rel:"noopener noreferrer"},C=s("Proposal Link"),E=p(`<p>\u932F\u8AA4\u8655\u7406\u975E\u5E38\u91CD\u8981\uFF0C\u4F46\u6709\u6642\u6211\u5011\u7684\u5BA2\u88FD\u5316\u932F\u8AA4\u8655\u7406\u6703\u5C0E\u81F4\u8CC7\u8A0A\u50B3\u905E\u5931\u771F\u800C\u96E3\u4EE5\u6392\u67E5\u771F\u5BE6\u932F\u8AA4\u8A0A\u606F\uFF0C\u5E38\u898B\u932F\u8AA4\u8655\u7406\u65B9\u5F0F\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// x \u4E0D\u5B58\u5728</span>
<span class="token keyword">const</span> <span class="token function-variable function">a</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">b</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">c</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">myJob</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// throw err; // \u771F\u5BE6\u932F\u8AA4</span>
    <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&#39;something wrong!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62CB\u51FA\u5BA2\u88FD\u5316\u932F\u8AA4</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">myJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u5011\u6703\u5728\u51FD\u6578\u4E2D\u5305\u88F9 try catch \u8655\u7406\u672A\u77E5\u932F\u8AA4\uFF0C\u4E26\u8FD4\u56DE\u5BA2\u88FD\u5316\u7684\u8A0A\u606F\uFF0C\u4F46\u9019\u9EBC\u505A\u537B\u6703\u5C0E\u81F4\u539F\u672C\u7684\u932F\u8AA4\u5C64\u7D1A\u5931\u771F\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u771F\u5BE6\u7684\u932F\u8AA4</span>
<span class="token literal-property property">ReferenceError</span><span class="token operator">:</span> x is not defined
  at <span class="token function">a</span> <span class="token punctuation">(</span>xxxx<span class="token punctuation">)</span>
  at <span class="token function">b</span> <span class="token punctuation">(</span>xxxx<span class="token punctuation">)</span>
  at <span class="token function">c</span> <span class="token punctuation">(</span>xxxx<span class="token punctuation">)</span>
  at <span class="token function">myJob</span> <span class="token punctuation">(</span>xxxx<span class="token punctuation">)</span>
  at xxxx

<span class="token comment">// \u5BA2\u88FD\u5316\u932F\u8AA4</span>
<span class="token literal-property property">Error</span><span class="token operator">:</span> something wrong<span class="token operator">!</span>
  at <span class="token function">myJob</span> <span class="token punctuation">(</span>xxxx<span class="token punctuation">)</span>
  at xxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BE6\u969B\u767C\u751F\u932F\u8AA4\u7684\u4F4D\u7F6E\u662F\u5728 <code>a</code> \u65B9\u6CD5\u4E2D\uFF0C\u4F46\u6211\u5011\u7684\u5BA2\u88FD\u5316\u932F\u8AA4\u5C0E\u81F4\u5728\u4ED6\u4E4B\u524D\u7684\u8A0A\u606F\u88AB\u622A\u65B7\uFF0C\u5F9E\u800C\u53EF\u80FD\u5C0E\u81F4\u6392\u67E5\u932F\u8AA4\u56F0\u96E3\uFF0C\u4E5F\u56E0\u6B64\u6211\u5011\u6703\u5BE6\u4F5C\u5982\u4E0B\u7684\u65B9\u5F0F\u53BB\u4FDD\u7559\u539F\u59CB\u932F\u8AA4\u65B9\u4FBF\u9664\u932F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">myJob</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> myError <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;something wrong!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myError<span class="token punctuation">.</span>cause <span class="token operator">=</span> err<span class="token punctuation">;</span> <span class="token comment">// \u4FDD\u7559\u771F\u5BE6\u932F\u8AA4</span>
    <span class="token keyword">throw</span> myError<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">myJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D6\u5F97\u5BA2\u88FD\u5316\u932F\u8AA4</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>cause<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D6\u5F97\u771F\u5BE6\u932F\u8AA4</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u9019\u9EBC\u505A\u9084\u662F\u5F88\u591A\u9918\uFF0C\u7E3D\u4E0D\u80FD\u6BCF\u6B21\u8655\u7406\u90FD\u8981\u591A\u5BEB\u9019\u4E9B\uFF0C\u65B0\u7684\u63D0\u6848\u8B93\u6211\u5011\u80FD\u65B9\u4FBF\u5FEB\u901F\u7684\u505A\u9019\u4EF6\u4E8B\uFF0C\u53EA\u9700\u8981\u5728 ErrorConstructor \u4E2D\u63D0\u4F9B <code>{ cause: err }</code> \u5C31\u884C\uFF0C\u65B9\u4FBF\u53C8\u7F8E\u89C0\uFF5E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">myJob</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&#39;something wrong!&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">cause</span><span class="token operator">:</span> err <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="class-private-declarations" tabindex="-1"><a class="header-anchor" href="#class-private-declarations" aria-hidden="true">#</a> Class Private Declarations</h3>`,9),S={href:"https://github.com/tc39/proposal-private-declarations",target:"_blank",rel:"noopener noreferrer"},M=s("Proposal Link"),P=p(`<p>\u96D6\u7136\u5728 Typescript \u4E2D\u5DF2\u7D93\u6709 <code>private</code> \u8A9E\u6CD5\u8B93\u6211\u5011\u80FD\u66FF\u985E\u5225\u5B9A\u7FA9\u79C1\u6709\u5C6C\u6027\u3001\u65B9\u6CD5\uFF0C\u5728 pure js \u7576\u4E2D\u537B\u4E00\u76F4\u6C92\u6709\u4E00\u7A2E\u539F\u751F\u65B9\u5F0F\u505A\u5230\u9019\u4EF6\u4E8B\uFF0C\u4F46\u5728\u65B0\u7684\u63D0\u6848\u4E2D\uFF0C\u6211\u5011\u53EF\u4EE5\u900F\u904E\u4F7F\u7528 <code>#</code> \u958B\u982D\u6A19\u8A18\u6211\u5011\u7684\u79C1\u6709\u5C6C\u6027\u3001\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>
  #name <span class="token operator">=</span> <span class="token string">&#39;MyClass&#39;</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">#init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;init in private&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u62FF\u4F86\u505A\u985E\u578B\u6AA2\u67E5\u4E5F\u5F88\u65B9\u4FBF</span>
  <span class="token keyword">static</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> #name <span class="token keyword">in</span> obj <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>#name <span class="token operator">===</span> <span class="token string">&#39;MyClass&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> myInstance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myInstance<span class="token punctuation">.</span>#a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught SyntaxError: Private field &#39;#a&#39; must be declared in an enclosing class (at xxxx)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myInstance<span class="token punctuation">.</span><span class="token function">#init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught SyntaxError: Private field &#39;#init&#39; must be declared in an enclosing class (at xxxx)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>MyClass<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>myInstance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>MyClass<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="class-static-block" tabindex="-1"><a class="header-anchor" href="#class-static-block" aria-hidden="true">#</a> Class Static Block</h3>`,3),A={href:"https://github.com/tc39/proposal-class-static-block",target:"_blank",rel:"noopener noreferrer"},z=s("Proposal Link"),L=p(`<p>\u76EE\u524D\u7684 <code>static</code> \u8A9E\u6CD5\u50C5\u53EF\u7528\u4F5C\u55AE\u4E00\u975C\u614B\u5C6C\u6027\u3001\u65B9\u6CD5\u7684\u5B9A\u7FA9\u4E0A\uFF0C\u82E5\u975C\u614B\u5C6C\u6027\u5F7C\u6B64\u95DC\u806F\u4F9D\u8CF4\u6642\uFF0C\u5FC5\u9808\u62C9\u5230 class \u5916\u90E8\u9032\u884C\u5B9A\u7FA9\uFF0C\u5982\u4E0B\u9762\u9019\u7A2E\u65B9\u5F0F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// without static blocks:</span>
<span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> x <span class="token operator">=</span> <span class="token string">&#39;X&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">static</span> y<span class="token punctuation">;</span>
  <span class="token keyword">static</span> z<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">doSomethingWith</span><span class="token punctuation">(</span><span class="token constant">C</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token constant">C</span><span class="token punctuation">.</span>y <span class="token operator">=</span> obj<span class="token punctuation">.</span>y
  <span class="token constant">C</span><span class="token punctuation">.</span>z <span class="token operator">=</span> obj<span class="token punctuation">.</span>z<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
  <span class="token constant">C</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>
  <span class="token constant">C</span><span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u65B0\u7684\u63D0\u6848 <code>static block</code> \u975C\u614B\u5340\u584A\u7684\u8A71\uFF0C\u6211\u5011\u53EF\u4EE5\u5728\u4E00\u500B\u5340\u584A\u4E2D\u9032\u884C\u76F8\u95DC\u64CD\u4F5C\uFF0C\u9019\u4E9B\u975C\u614B\u5340\u584A\u4E5F\u540C\u6A23\u53EA\u6703\u57F7\u884C\u4E00\u6B21</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> x <span class="token operator">=</span> <span class="token string">&#39;X&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">static</span> y<span class="token punctuation">;</span>
  <span class="token keyword">static</span> z<span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">doSomethingWith</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> obj<span class="token punctuation">.</span>y<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>z <span class="token operator">=</span> obj<span class="token punctuation">.</span>z<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u8A9E\u6CD5\u4E5F\u9069\u7528\u5E38\u898B\u7684\u975C\u614B\u5C6C\u6027\u65B9\u6CD5\u7372\u53D6\u79C1\u6709\u5C6C\u6027\u5834\u666F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>
  #count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">static</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">.</span>#count<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> myClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>MyClass<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span>myClass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9019\u500B\u65B0\u8A9E\u6CD5\u4E5F\u8B93\u6211\u5011\u80FD\u5C07\u4E0A\u9762\u9019\u7A2E\u9700\u6C42\u6539\u5BEB\u5982\u4E0B\u9762\u9019\u6A23</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> getCount<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>
  #count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">static</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getCount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> obj<span class="token punctuation">.</span>#count<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> myClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getCount</span><span class="token punctuation">(</span>myClass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u611F\u8B1D\u5927\u5BB6\u6536\u770B\uFF0C\u4E0B\u6B21\u518D\u898B\u62C9\uFF5E</p>`,9);function O(I,J){const e=o("SocialBlock"),t=o("ExternalLinkIcon");return l(),i("div",null,[r,a(e,{hashtags:"javascript,es2022"}),d,k,v,n("ul",null,[n("li",null,[n("a",m,[b,a(t)])])]),h,n("ul",null,[n("li",null,[n("a",y,[g,a(t)])])]),w,n("ul",null,[n("li",null,[n("a",f,[x,a(t)])])]),j,n("ul",null,[n("li",null,[n("a",_,[C,a(t)])])]),E,n("ul",null,[n("li",null,[n("a",S,[M,a(t)])])]),P,n("ul",null,[n("li",null,[n("a",A,[z,a(t)])])]),L,a(e,{hashtags:"javascript,es2022"})])}var N=c(u,[["render",O],["__file","es2022.html.vue"]]);export{N as default};
