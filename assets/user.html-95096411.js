import{_ as p,r as o,o as c,c as u,d as n,e as s,a as t,f as e}from"./app-6147e6e2.js";const i={},l=n("h1",{id:"parse-user-object-章節",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parse-user-object-章節","aria-hidden":"true"},"#"),s(" Parse User Object 章節")],-1),r={href:"https://docs.parseplatform.org/js/guide/#users",target:"_blank",rel:"noopener noreferrer"},k=e(`<h2 id="property" tabindex="-1"><a class="header-anchor" href="#property" aria-hidden="true">#</a> Property</h2><ul><li>username(required).</li><li>password(required on signup).</li><li>email(optional).</li></ul><h2 id="sign-up" tabindex="-1"><a class="header-anchor" href="#sign-up" aria-hidden="true">#</a> Sign up</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;my name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;my pass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// other fields can be set just like with Parse.Object</span>
user<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;415-392-0202&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> user<span class="token punctuation">.</span><span class="token function">signUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="login" tabindex="-1"><a class="header-anchor" href="#login" aria-hidden="true">#</a> Login</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> Parse<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">logIn</span><span class="token punctuation">(</span><span class="token string">&quot;myname&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mypass&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">usePost</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Do stuff after successful login.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="current-user" tabindex="-1"><a class="header-anchor" href="#current-user" aria-hidden="true">#</a> Current User</h3>`,7),d={href:"https://docs.parseplatform.org/js/guide/#current-user",target:"_blank",rel:"noopener noreferrer"},v=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> currentUser <span class="token operator">=</span> Parse<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>currentUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do stuff with the user</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// show the signup or login page</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-current-user" tabindex="-1"><a class="header-anchor" href="#set-current-user" aria-hidden="true">#</a> Set Current User</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">become</span><span class="token punctuation">(</span><span class="token string">&quot;session-token-here&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// The current user is now set to user.</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="logout" tabindex="-1"><a class="header-anchor" href="#logout" aria-hidden="true">#</a> Logout</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">logOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> currentUser <span class="token operator">=</span> Parse<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// this will now be null</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="security-for-other-objects" tabindex="-1"><a class="header-anchor" href="#security-for-other-objects" aria-hidden="true">#</a> Security For Other Objects</h3><p>對物件添加安全性檢視條件，下面範例對新的 note 添加新創建限制為 current user 的 ACL</p><ul><li><code>Parse.ACL</code>: access control list</li><li>setReadAccess(targetObject, boolean)</li><li>setWriteAccess(targetObject, boolean)</li><li>setPublicReadAccess(boolean)</li><li>setPublicWriteAccess(boolean)</li></ul><h4 id="範例" tabindex="-1"><a class="header-anchor" href="#範例" aria-hidden="true">#</a> 範例</h4><ul><li>直接套用</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> Note <span class="token operator">=</span> Parse<span class="token punctuation">.</span>Object<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token string">&quot;Note&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> privateNote <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Note</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
privateNote<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;This note is private!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
privateNote<span class="token punctuation">.</span><span class="token function">setACL</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>ACL</span><span class="token punctuation">(</span>Parse<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
privateNote<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>細部添加對象物件</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> groupMessage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> groupACL <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>ACL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// userList is an array with the users we are sending this message to.</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> userList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  groupACL<span class="token punctuation">.</span><span class="token function">setReadAccess</span><span class="token punctuation">(</span>userList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  groupACL<span class="token punctuation">.</span><span class="token function">setWriteAccess</span><span class="token punctuation">(</span>userList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
groupMessage<span class="token punctuation">.</span><span class="token function">setACL</span><span class="token punctuation">(</span>groupACL<span class="token punctuation">)</span><span class="token punctuation">;</span>
groupMessage<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>複雜場景(新增 post，限制權限在當前用戶，並開放 read 權限公開)</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> publicPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> postACL <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>ACL</span><span class="token punctuation">(</span>Parse<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
postACL<span class="token punctuation">.</span><span class="token function">setPublicReadAccess</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
publicPost<span class="token punctuation">.</span><span class="token function">setACL</span><span class="token punctuation">(</span>postACL<span class="token punctuation">)</span><span class="token punctuation">;</span>
publicPost<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="linking-user" tabindex="-1"><a class="header-anchor" href="#linking-user" aria-hidden="true">#</a> Linking User</h3><p>Parse 可使用第三方驗證進行註冊用戶或登入，使用 <code>linkWith</code> 方法進行綁定、登入（若第一次呼叫會自動 create user，並返回 userInfo）</p>`,17),m={href:"https://docs.parseplatform.org/js/guide/#signing-up-and-logging-in",target:"_blank",rel:"noopener noreferrer"},h=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> myAuthData <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;12345678&#39;</span>  <span class="token comment">// Required field. Used to uniquely identify the linked account.</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> user<span class="token punctuation">.</span><span class="token function">linkWith</span><span class="token punctuation">(</span><span class="token string">&#39;providerName&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">authData</span><span class="token operator">:</span> myAuthData <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b={href:"https://docs.parseplatform.org/js/guide/#custom-authentication-module",target:"_blank",rel:"noopener noreferrer"},g=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> CustomAuth <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./CustomAuth&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParseServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">myAuth</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">module</span><span class="token operator">:</span> CustomAuth<span class="token punctuation">,</span>
      <span class="token literal-property property">option1</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">option2</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/parse&#39;</span><span class="token punctuation">,</span> api<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="query-進行-select-authdata-的問題" tabindex="-1"><a class="header-anchor" href="#query-進行-select-authdata-的問題" aria-hidden="true">#</a> query 進行 select authData 的問題</h4>`,2),f=n("code",null,"select",-1),y=n("code",null,"authData",-1),_=n("code",null,"query.select('authData')",-1),w={href:"https://github.com/parse-community/parse-server/pull/2081/files",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"_auth_data_xxxx",-1),q=n("code",null,"_auth_data_facebook",-1);function x(A,P){const a=o("ExternalLinkIcon");return c(),u("div",null,[l,n("ul",null,[n("li",null,[n("a",r,[s("Link"),t(a)])])]),k,n("ul",null,[n("li",null,[n("a",d,[s("Link"),t(a)])])]),v,n("ul",null,[n("li",null,[n("a",m,[s("Link"),t(a)])])]),h,n("p",null,[s("或是可以在 Parse Server 的 options 提供客製化的 user login module，詳情請"),n("a",b,[s("參考這邊"),t(a)])]),g,n("p",null,[s("另外需注意，如果要使用 "),f,s(" 取得 "),y,s(" 的話，不能直接 "),_,s("，因為 DB 裡不是存這個欄位名稱，需使用"),n("a",w,[s("這裡描述"),t(a)]),s("的 "),j,s("才能拿到，比如 "),q])])}const C=p(i,[["render",x],["__file","user.html.vue"]]);export{C as default};
