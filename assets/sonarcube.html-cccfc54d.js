import{_ as o,r,o as l,c as i,d as n,e as s,a as e,f as t}from"./app-6eac6164.js";const c={},p=n("h1",{id:"串接-sonarcube-筆記",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#串接-sonarcube-筆記","aria-hidden":"true"},"#"),s(" 串接 Sonarcube 筆記")],-1),u=n("p",null,"SonarQube 是一款基於 Java 開發的原始碼檢測與品質管理系統，因著 Java 的關係，Server 與 Client 都是跨平台的",-1),d=n("h2",{id:"install",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#install","aria-hidden":"true"},"#"),s(" Install")],-1),v={href:"https://docs.sonarqube.org/latest/setup/get-started-2-minutes/#Installing%20a%20local%20instance%20of%20SonarQube",target:"_blank",rel:"noopener noreferrer"},h=t(`<h3 id="docker-image" tabindex="-1"><a class="header-anchor" href="#docker-image" aria-hidden="true">#</a> docker image</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> sonarqube <span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_ES_BOOTSTRAP_CHECKS_DISABLE</span><span class="token operator">=</span>true <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 sonarqube:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),k={href:"http://localhost:9000",target:"_blank",rel:"noopener noreferrer"},b=n("h2",{id:"建立-sonarcube-專案",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#建立-sonarcube-專案","aria-hidden":"true"},"#"),s(" 建立 sonarcube 專案")],-1),m=n("p",null,"在 sonar 上建立 manual project",-1),_=n("ol",null,[n("li",null,"Create new project - manual"),n("li",null,"設定 Project key, Display name"),n("li",null,"產生一組 token 並妥善保存"),n("li",null,"執行分析專案，此步驟需下載 scanner")],-1),g=n("h2",{id:"下載-scanner",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下載-scanner","aria-hidden":"true"},"#"),s(" 下載 scanner")],-1),f={href:"https://docs.sonarqube.org/latest/analysis/scan/sonarscanner/",target:"_blank",rel:"noopener noreferrer"},y=n("h2",{id:"ci-串接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ci-串接","aria-hidden":"true"},"#"),s(" CI 串接")],-1),q={href:"https://docs.sonarqube.org/latest/analysis/jenkins/",target:"_blank",rel:"noopener noreferrer"},j=n("p",null,"以 Github 舉例",-1),x={href:"https://docs.sonarqube.org/latest/analysis/github-integration/",target:"_blank",rel:"noopener noreferrer"},E=t('<ol><li>創建 Github App 並安裝到目標專案的 Organization</li><li>設定 sonarcube 專案</li></ol><h3 id="webhooks" tabindex="-1"><a class="header-anchor" href="#webhooks" aria-hidden="true">#</a> Webhooks</h3><p>加入 PR Webhook</p><h3 id="pr-decoration" tabindex="-1"><a class="header-anchor" href="#pr-decoration" aria-hidden="true">#</a> PR Decoration</h3><p>sonar.com &gt; Your project &gt; Project Settings &gt; General Settings &gt; Pull Request Decoration</p><h3 id="quality-profiles" tabindex="-1"><a class="header-anchor" href="#quality-profiles" aria-hidden="true">#</a> Quality Profiles</h3><p>根據專案需求，在設定頁面裡的 <code>Quality Profiles</code> 加入對掃描的套用規範</p><ul><li>CSS: sonar way</li></ul><h2 id="設定-package-json-產生-coverage-report" tabindex="-1"><a class="header-anchor" href="#設定-package-json-產生-coverage-report" aria-hidden="true">#</a> 設定 package.json 產生 coverage report</h2>',9),R={href:"https://docs.sonarqube.org/latest/analysis/test-coverage/javascript-typescript-test-coverage/",target:"_blank",rel:"noopener noreferrer"},S=t(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test:ci&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jest --ci --collectCoverage&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="設定-sonar-project-properties" tabindex="-1"><a class="header-anchor" href="#設定-sonar-project-properties" aria-hidden="true">#</a> 設定 sonar-project.properties</h2>`,2),N=n("code",null,"sonar_login_token",-1),D={href:"https://docs.sonarqube.org/8.9/analysis/analysis-parameters/",target:"_blank",rel:"noopener noreferrer"},C=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">sonar.host.url</span><span class="token operator">=</span>	http://localhost:9000
<span class="token assign-left variable">sonar.login</span><span class="token operator">=</span>your_login_token
<span class="token assign-left variable">sonar.projectBaseDir</span><span class="token operator">=</span>./
<span class="token comment"># sonar 上的專案名稱</span>
<span class="token assign-left variable">sonar.projectKey</span><span class="token operator">=</span>your_project_name

<span class="token comment"># test coverage report 位置</span>
<span class="token assign-left variable">sonar.javascript.lcov.reportPaths</span><span class="token operator">=</span>coverage/lcov.info

<span class="token comment"># scanner 規則設定</span>
<span class="token assign-left variable">sonar.sources</span><span class="token operator">=</span>src
<span class="token assign-left variable">sonar.eslint.eslintconfigpath</span><span class="token operator">=</span>.eslintrc.js
<span class="token assign-left variable">sonar.typescript.tsconfigPath</span><span class="token operator">=</span>tsconfig.json
<span class="token assign-left variable">sonar.coverage.exclusions</span><span class="token operator">=</span>**/node_modules/**, **.spec.ts, **.test.ts, **.spec.js, **.test.js, **/*.html, **/next.config.js

<span class="token comment"># Encoding of the source code. Default is default system encoding</span>
<span class="token assign-left variable">sonar.sourceEncoding</span><span class="token operator">=</span>UTF-8

<span class="token comment"># 專案位置</span>
<span class="token assign-left variable">sonar.analysis.repoLink</span><span class="token operator">=</span>path_to_your_repository
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="設定-drone-yml" tabindex="-1"><a class="header-anchor" href="#設定-drone-yml" aria-hidden="true">#</a> 設定 drone.yml</h2><p>以下範例，配置 jest 產生 report，並接著執行 sonar scanner</p><blockquote><p>需要注意，因為 sonar scanner 會根據傳入的參數判斷是 push 或是 pull_request，如果傳入參數裡有 pull request 相關設定，即使是 null 值，一樣會被判定成 pull_request，這樣會導致實際 merge 進 main branch 時沒有被正確解析，而是被當成 pull_request 處理了，發生這問題時錯誤提示只會顯示</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>“master” branch has not been analyzed yet and you have multiple branches already
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),O={href:"https://community.sonarsource.com/t/main-branch-does-not-reflect-latest-analyses/63352",target:"_blank",rel:"noopener noreferrer"},T=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">kind</span><span class="token punctuation">:</span> pipeline
<span class="token key atrule">name</span><span class="token punctuation">:</span> default

<span class="token key atrule">trigger</span><span class="token punctuation">:</span>
  <span class="token key atrule">branch</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;precommit/*&quot;</span><span class="token punctuation">]</span>
  <span class="token key atrule">event</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;push&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pull_request&quot;</span><span class="token punctuation">]</span>

<span class="token key atrule">steps</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> prepare
    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">&quot;node:16.13.1&quot;</span>
    <span class="token key atrule">commands</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;npm run lint&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;npm run test:ci&quot;</span>

  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sonar<span class="token punctuation">-</span>scan
    <span class="token key atrule">image</span><span class="token punctuation">:</span> sonarsource/sonar<span class="token punctuation">-</span>scanner<span class="token punctuation">-</span>cli
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">SONAR_TOKEN</span><span class="token punctuation">:</span>
        <span class="token key atrule">from_secret</span><span class="token punctuation">:</span> sonar_login_token
    <span class="token key atrule">commands</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;if (echo $DRONE_TARGET_BRANCH$DRONE_PULL_REQUEST | grep -w $DRONE_TARGET_BRANCH); then sonar-scanner; else sonar-scanner -Dsonar.pullrequest.key=$DRONE_PULL_REQUEST -Dsonar.pullrequest.branch=$DRONE_SOURCE_BRANCH -Dsonar.pullrequest.base=$DRONE_TARGET_BRANCH; fi;&quot;</span>
    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> prepare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function A(P,B){const a=r("ExternalLinkIcon");return l(),i("div",null,[p,u,d,n("ul",null,[n("li",null,[n("a",v,[s("Link"),e(a)])])]),h,n("p",null,[s("前往 "),n("a",k,[s("http://localhost:9000"),e(a)]),s(" 開啟 Web 介面")]),b,m,_,g,n("p",null,[s("根據環境可以"),n("a",f,[s("在此"),e(a)]),s("下載不同的 scanner")]),y,n("ul",null,[n("li",null,[n("a",q,[s("Link"),e(a)])])]),j,n("ul",null,[n("li",null,[n("a",x,[s("Github integration"),e(a)])])]),E,n("ul",null,[n("li",null,[n("a",R,[s("javascript-typescript-test-coverage"),e(a)])])]),S,n("p",null,[s("建立專案後，需要產生一組 "),N,s(" 使用，並根據"),n("a",D,[s("這個教學"),e(a)]),s("進行 sonar 的 project 配置")]),C,n("p",null,[s("但實際上原因可能是參數會相關設定錯誤導致，可"),n("a",O,[s("參考這篇討論串"),e(a)])]),T])}const G=o(c,[["render",A],["__file","sonarcube.html.vue"]]);export{G as default};
