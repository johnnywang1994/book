import{_ as t,c as e,b as s,a as p,d as o,r as c,o as l}from"./app-DxoW7puS.js";const i={};function u(k,n){const a=c("SocialBlock");return l(),e("div",null,[n[0]||(n[0]=s("h1",{id:"用-socket-io-搭配-matterjs-製作一款-real-time-canvas-聊天室-文長慎入",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#用-socket-io-搭配-matterjs-製作一款-real-time-canvas-聊天室-文長慎入"},[s("span",null,"用 Socket.io 搭配 Matterjs 製作一款 Real-Time Canvas 聊天室（文長慎入）")])],-1)),p(a,{hashtags:"typescript,websocket,socket.io,matterjs,canvas"}),n[1]||(n[1]=o(`<p>hi 大家好，我是 Johnny，由於工作的關係，這幾個月下班都只想躺平耍廢，導致好久沒有寫技術分享的文章了，這一次想來分享最近突發奇想製作的一款迷你 Real-Time Canvas 聊天室，透過 Socket.io 結合 Matterjs 看看能碰撞出什麼新火花～</p><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>這次使用的技術包含之前製作<a href="https://maju-chatter.onrender.com/login?roomId=public" target="_blank" rel="noopener noreferrer">文字聊天室</a>(username: public, password: 0000)時使用的 <code>Socket.io</code>，還有製作<a href="https://johnnywang1994.github.io/p5-game/#/matter-mario" target="_blank" rel="noopener noreferrer">馬力歐遊戲</a>時的 <code>MatterJS</code>，本次目標是製作出一款能讓用戶加入聊天室，並建立 2D 人物角色在聊天室中能夠自由走動，並最終在角色頭上顯示文字的小遊戲</p><blockquote><p>警告！本篇涉及稍微偏應用層面的 MatterJS 使用，若對於 MatterJS 不是很有興趣建議跳過這篇ＸＤ</p></blockquote><h2 id="成果" tabindex="-1"><a class="header-anchor" href="#成果"><span>成果</span></a></h2><p>為避免文長內容過於單調，先把成果放在這邊，不想看一堆程式碼的可以直接<a href="https://majuchat.maju-web.club/" target="_blank" rel="noopener noreferrer">點我看成果</a>，由於本人經濟拮据，租不起效能比較好的 server 來跑，畫面可能會稍微卡頓還請各位看官們見諒 XD...</p><h2 id="backend-part" tabindex="-1"><a class="header-anchor" href="#backend-part"><span>Backend Part.</span></a></h2><p>首先我們從後端的 Socket server 開始著手，事先規劃好我們的 socket events 流程，有助於後續開發前端時的串接</p><h3 id="建立-server" tabindex="-1"><a class="header-anchor" href="#建立-server"><span>建立 server</span></a></h3><p>安裝 <code>express</code>, <code>socket.io</code>，建立一個 server</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// src/index.js</span></span>
<span class="line"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> Server <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;socket.io&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> isProd <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> io <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Server</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">cors</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">origin</span><span class="token operator">:</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// socket events 註冊在這裡</span></span>
<span class="line"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./controllers/socket&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span>io<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">NodeJS server on port: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="註冊-socket-events" tabindex="-1"><a class="header-anchor" href="#註冊-socket-events"><span>註冊 socket events</span></a></h3><p>由於邏輯都跟程式碼嚴重綁定，直接在 source code 裡添加說明～</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// src/controllers/socket.js</span></span>
<span class="line"><span class="token comment">// 假的 user</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">getAnonymousUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Anonymous-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>socket<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 偷懶，隨便先暫存 player 資料在記憶體裡，乖小孩不要學喔</span></span>
<span class="line"><span class="token keyword">const</span> cachedPlayers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">config</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">io</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// socket 連線</span></span>
<span class="line">  io<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;connection&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 取得指定 room 裡的所有連線</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token function-variable function">getRoomSet</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">room</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> socket<span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>room<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">allSockets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 初始化 user data</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token function-variable function">initUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      socket<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token function">getAnonymousUser</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      socket<span class="token punctuation">.</span>room <span class="token operator">=</span> data<span class="token punctuation">.</span>room<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;a user connected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 用戶離開、斷線時</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;disconnect&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>socket<span class="token punctuation">.</span>room<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> room <span class="token operator">=</span> socket<span class="token punctuation">.</span>room<span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// leave room</span></span>
<span class="line">        socket<span class="token punctuation">.</span><span class="token function">leave</span><span class="token punctuation">(</span>room<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// delete cached data in room</span></span>
<span class="line">        <span class="token keyword">delete</span> cachedPlayers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>room<span class="token punctuation">)</span><span class="token punctuation">[</span>socket<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">const</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">getRoomSet</span><span class="token punctuation">(</span>room<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// broadcast someone had leave</span></span>
<span class="line">        socket<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>room<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;get-leave&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">          size<span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">id</span><span class="token operator">:</span> socket<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 用戶第一次進入畫面連線成功後，加入對應房間</span></span>
<span class="line">    <span class="token comment">// 1. 通知房內所有人，人數改變</span></span>
<span class="line">    <span class="token comment">// 2. 通知新加入的用戶，server 準備完成，可以開始進一步初始化本地的 player data</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;join&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>room<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cachedPlayers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          cachedPlayers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>room<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        socket<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">const</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">getRoomSet</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// init and cache user data for socket</span></span>
<span class="line">        <span class="token function">initUser</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// broadcast room size to everyone in same room</span></span>
<span class="line">        io<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;new-join&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// send join ok message to new joined user in order to init it&#39;s App</span></span>
<span class="line">        socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;join-ok&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">roomPlayers</span><span class="token operator">:</span> cachedPlayers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>room<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 用戶本地 canvas 初始化後，會將 player data 送上來，並透過 socket 傳給房間裡的所有人</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;push-player&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;push-player&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>cachedPlayers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cachedPlayers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">[</span>data<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">;</span></span>
<span class="line">        socket<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id <span class="token operator">=</span> data<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;get-player&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 用戶更新人物位置時，將相關資料送上來並發送給房內所有人</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update-player&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;update-player&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>cachedPlayers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cachedPlayers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">[</span>data<span class="token punctuation">.</span>player<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>player<span class="token punctuation">;</span></span>
<span class="line">        socket<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id <span class="token operator">=</span> data<span class="token punctuation">.</span>player<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;get-update-player&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 用戶發出訊息給房內所有人</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;push-message&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;push-message&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span>room<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;get-message&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> config <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此就完成後端 socket events 的相關設定了！其實說多不多，說少也不少，接下來就開始處理最麻煩的前端部分吧</p><h2 id="frontend-part" tabindex="-1"><a class="header-anchor" href="#frontend-part"><span>Frontend Part.</span></a></h2><p>由於前端的部分真的有點複雜，我這邊只把部分源碼放上來說明</p><h3 id="usesocket-濃縮精華" tabindex="-1"><a class="header-anchor" href="#usesocket-濃縮精華"><span>useSocket 濃縮精華</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> io <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;socket.io-client&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Body <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;matter-js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Player <span class="token keyword">from</span> <span class="token string">&#39;@/lib/matter-js/player&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> setPlayerAnimation <span class="token keyword">from</span> <span class="token string">&#39;@/lib/players/setPlayerAnimation&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> useCreation <span class="token keyword">from</span> <span class="token string">&#39;./useCreation&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> socketEndpoint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../config&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> items <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../lib/matter-js/playground&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Player 物件的結構</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">PlayerItem</span> <span class="token punctuation">{</span></span>
<span class="line">  id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  imageKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  pos<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">    y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  size<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    w<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">    h<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  status<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  moving<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 建立 player 物件</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createPlayerItem</span><span class="token punctuation">(</span>player<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> PlayerItem <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    id<span class="token operator">:</span> player<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">    username<span class="token operator">:</span> player<span class="token punctuation">.</span>username<span class="token punctuation">,</span></span>
<span class="line">    imageKey<span class="token operator">:</span> player<span class="token punctuation">.</span>imageKey<span class="token punctuation">,</span></span>
<span class="line">    size<span class="token operator">:</span> player<span class="token punctuation">.</span>size<span class="token punctuation">,</span></span>
<span class="line">    pos<span class="token operator">:</span> player<span class="token punctuation">.</span>body<span class="token punctuation">.</span>position<span class="token punctuation">,</span></span>
<span class="line">    status<span class="token operator">:</span> player<span class="token punctuation">.</span>status<span class="token punctuation">,</span></span>
<span class="line">    moving<span class="token operator">:</span> player<span class="token punctuation">.</span>moving<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 本體！</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">useSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 透過 useCreation 讓 socket 連線始終保持唯一</span></span>
<span class="line">  <span class="token keyword">const</span> socket <span class="token operator">=</span> <span class="token function">useCreation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">io</span><span class="token punctuation">(</span>socketEndpoint<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 保存連線狀態</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isConnected<span class="token punctuation">,</span> setIsConnected<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 房間人數</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>roomSize<span class="token punctuation">,</span> setRoomSize<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 房內其他 player 的物件列表（純傳遞的資料）</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>roomPlayers<span class="token punctuation">,</span> setRoomPlayers<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> PlayerItem<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 用於 MatterJS 渲染的真實 render 物件（真實渲染物件）不包含當前 player 本人</span></span>
<span class="line">  <span class="token keyword">const</span> renderPlayersRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>Player<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// not include self</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>delay<span class="token punctuation">,</span> setDelay<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 工具狀態</span></span>
<span class="line">  <span class="token keyword">const</span> querys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> roomId <span class="token operator">=</span> querys<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;room&#39;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 初始化 roomPlayers，必須在 loader(載入圖片)後呼叫</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">initRoomPlayers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 本地第一次初始化（剛加入房間，還沒渲染其他用戶資料）</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>roomPlayers <span class="token operator">&amp;&amp;</span> renderPlayersRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>roomPlayers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 檢查是否為用戶本人 id，避免渲染自己第二次</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>player<span class="token punctuation">.</span>id <span class="token operator">!==</span> items<span class="token punctuation">.</span>player<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">onGetPlayer</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 初次連線上 socket，呼叫 join，初始化 server 端用戶資料</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">onConnect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">setIsConnected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;join&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      room<span class="token operator">:</span> roomId<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 斷線</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">onDisconnect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">setIsConnected</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 由外部傳入 initApp 的操作，回傳為 socket event &quot;join-ok&quot;</span></span>
<span class="line">  <span class="token comment">// 會在 server 初始化完成當前用戶資料時被呼叫</span></span>
<span class="line">  <span class="token comment">// 此步驟 server 會把目前 room 裡面的所有用戶資料傳給新加入的此用戶</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">initJoinOk</span> <span class="token operator">=</span> <span class="token punctuation">(</span>initApp<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> roomPlayers<span class="token operator">:</span> rp <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> roomPlayers<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> PlayerItem<span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;room cache&#39;</span><span class="token punctuation">,</span> rp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">setRoomPlayers</span><span class="token punctuation">(</span>rp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">initApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 當有其他新的用戶加入觸發 join 事件後，更新本地顯示的房內人數</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">onNewJoin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> size <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> size<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">setRoomSize</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 當有用戶離開房間時，更新房間人數，並將該用戶對應的 render 資料銷毀（從畫面上移除人物）</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">onGetLeave</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> size<span class="token punctuation">,</span> id <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> size<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">setRoomSize</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> renderPlayers <span class="token operator">=</span> renderPlayersRef<span class="token punctuation">.</span>current<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> targetIndex <span class="token operator">=</span> renderPlayers<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> player<span class="token punctuation">.</span>id <span class="token operator">==</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">[</span>targetPlayer<span class="token punctuation">]</span> <span class="token operator">=</span> renderPlayers<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>targetIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>targetPlayer<span class="token punctuation">)</span> targetPlayer<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    renderPlayersRef<span class="token punctuation">.</span>current <span class="token operator">=</span> renderPlayers<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 當有新用戶加入房間成功，並推送其 player 資料到房間</span></span>
<span class="line">  <span class="token comment">// 初始化並加入新的 render player 物件（把人物加入到 canvas 中）</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">onGetPlayer</span> <span class="token operator">=</span> <span class="token punctuation">(</span>newPlayer<span class="token operator">:</span> PlayerItem<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;new player&#39;</span><span class="token punctuation">,</span> newPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span></span>
<span class="line">      newPlayer<span class="token punctuation">.</span>username<span class="token punctuation">,</span></span>
<span class="line">      newPlayer<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span></span>
<span class="line">      newPlayer<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y<span class="token punctuation">,</span></span>
<span class="line">      newPlayer<span class="token punctuation">.</span>size<span class="token punctuation">.</span>w<span class="token punctuation">,</span></span>
<span class="line">      newPlayer<span class="token punctuation">.</span>size<span class="token punctuation">.</span>h<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    player<span class="token punctuation">.</span>id <span class="token operator">=</span> newPlayer<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line">    player<span class="token punctuation">.</span>status <span class="token operator">=</span> newPlayer<span class="token punctuation">.</span>status<span class="token punctuation">;</span></span>
<span class="line">    player<span class="token punctuation">.</span>moving <span class="token operator">=</span> newPlayer<span class="token punctuation">.</span>moving<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">setPlayerAnimation</span><span class="token punctuation">(</span>player<span class="token punctuation">,</span> newPlayer<span class="token punctuation">.</span>imageKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    player<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// save player</span></span>
<span class="line">    renderPlayersRef<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>renderPlayersRef<span class="token punctuation">.</span>current<span class="token punctuation">,</span> player<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 當其他用戶更新他們的 player 資料時，會同時帶著該用戶操作的時間戳記</span></span>
<span class="line">  <span class="token comment">// 1. 若用戶切換 moving 狀態為 true，紀錄該用戶實際開始操作的時間距離現在的時間差為 delayTime</span></span>
<span class="line">  <span class="token comment">// 2. 若用戶切換 moving 狀態為 false，紀錄用戶實際停止操作的時間距離現在的時間差，並將剛剛紀錄的時間相減，得到真實 delay 時間，避免人物移動距離偏差</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">onGetUpdatePlayer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> player<span class="token operator">:</span> updatePlayer<span class="token punctuation">,</span> time <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> player<span class="token operator">:</span> PlayerItem<span class="token punctuation">,</span> time<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;update-player&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> renderPlayers <span class="token operator">=</span> renderPlayersRef<span class="token punctuation">.</span>current<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> targetIndex <span class="token operator">=</span> renderPlayers<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> player<span class="token punctuation">.</span>id <span class="token operator">===</span> updatePlayer<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> targetPlayer <span class="token operator">=</span> renderPlayers<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>targetPlayer<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// other player start moving</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>updatePlayer<span class="token punctuation">.</span>moving <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// start delay time(+delay)</span></span>
<span class="line">        <span class="token function">setDelay</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        targetPlayer<span class="token punctuation">.</span>status <span class="token operator">=</span> updatePlayer<span class="token punctuation">.</span>status<span class="token punctuation">;</span></span>
<span class="line">        targetPlayer<span class="token punctuation">.</span>moving <span class="token operator">=</span> updatePlayer<span class="token punctuation">.</span>moving<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// end delay time(-delay)</span></span>
<span class="line">        <span class="token keyword">const</span> realDelay <span class="token operator">=</span> delay <span class="token operator">-</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          targetPlayer<span class="token punctuation">.</span>status <span class="token operator">=</span> updatePlayer<span class="token punctuation">.</span>status<span class="token punctuation">;</span></span>
<span class="line">          targetPlayer<span class="token punctuation">.</span>moving <span class="token operator">=</span> updatePlayer<span class="token punctuation">.</span>moving<span class="token punctuation">;</span></span>
<span class="line">          Body<span class="token punctuation">.</span><span class="token function">setPosition</span><span class="token punctuation">(</span>targetPlayer<span class="token punctuation">.</span>body<span class="token punctuation">,</span> updatePlayer<span class="token punctuation">.</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span> realDelay<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    renderPlayersRef<span class="token punctuation">.</span>current <span class="token operator">=</span> renderPlayers<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 當接收到用戶發送的 message</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">onGetMessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token punctuation">,</span> message <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">[</span>targetPlayer<span class="token punctuation">]</span> <span class="token operator">=</span> renderPlayersRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> player<span class="token punctuation">.</span>id <span class="token operator">===</span> id<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>targetPlayer<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      targetPlayer<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    socket<span class="token punctuation">,</span></span>
<span class="line">    isConnected<span class="token punctuation">,</span></span>
<span class="line">    roomSize<span class="token punctuation">,</span></span>
<span class="line">    roomPlayers<span class="token punctuation">,</span></span>
<span class="line">    renderPlayersRef<span class="token punctuation">,</span></span>
<span class="line">    delay<span class="token punctuation">,</span></span>
<span class="line">    initRoomPlayers<span class="token punctuation">,</span></span>
<span class="line">    onConnect<span class="token punctuation">,</span></span>
<span class="line">    onDisconnect<span class="token punctuation">,</span></span>
<span class="line">    onNewJoin<span class="token punctuation">,</span></span>
<span class="line">    initJoinOk<span class="token punctuation">,</span></span>
<span class="line">    onGetLeave<span class="token punctuation">,</span></span>
<span class="line">    onGetPlayer<span class="token punctuation">,</span></span>
<span class="line">    onGetUpdatePlayer<span class="token punctuation">,</span></span>
<span class="line">    onGetMessage<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> useSocket<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="player-物件" tabindex="-1"><a class="header-anchor" href="#player-物件"><span>Player 物件</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Events<span class="token punctuation">,</span> Body<span class="token punctuation">,</span> Composite <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;matter-js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> randomId <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/lib/random&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">&#39;./box&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> engine <span class="token keyword">from</span> <span class="token string">&#39;./engine&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./render&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> CustomRender <span class="token keyword">from</span> <span class="token string">&#39;./customRender&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ctx<span class="token punctuation">,</span> canvasConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./config&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> drawTextBG<span class="token punctuation">,</span> <span class="token punctuation">{</span> drawText <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../drawTextBg&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Player</span> <span class="token keyword">extends</span> <span class="token class-name">Box</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 設定人物在 Matterjs 中碰撞的 group</span></span>
<span class="line">      <span class="token literal-property property">collisionFilter</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">category</span><span class="token operator">:</span> canvasConfig<span class="token punctuation">.</span>categories<span class="token punctuation">.</span>player<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">mask</span><span class="token operator">:</span> canvasConfig<span class="token punctuation">.</span>categories<span class="token punctuation">.</span>default<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">render</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">fillStyle</span><span class="token operator">:</span> <span class="token string">&#39;transparent&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token function">randomId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;moveDown&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 人物狀態，透過 render 方法會根據當前 status 挑選對應的狀態渲染</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>animation <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// --</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>messageTimer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// --</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">onKeyDown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">onKeyUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">listenKeyDown</span><span class="token punctuation">(</span><span class="token parameter">handlerDown<span class="token punctuation">,</span> handlerUp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keydown&#39;</span><span class="token punctuation">,</span> handlerDown<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keyup&#39;</span><span class="token punctuation">,</span> handlerUp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keydown&#39;</span><span class="token punctuation">,</span> handlerDown<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keyup&#39;</span><span class="token punctuation">,</span> handlerUp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token function-variable function">handlerDown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> <span class="token punctuation">{</span> body <span class="token punctuation">}</span> <span class="token operator">=</span> self<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>moving<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode <span class="token operator">&gt;</span> <span class="token number">36</span> <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>keyCode <span class="token operator">&lt;</span> <span class="token number">41</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        self<span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">37</span><span class="token operator">:</span></span>
<span class="line">          self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;moveLeft&#39;</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">38</span><span class="token operator">:</span></span>
<span class="line">          self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;moveUp&#39;</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">39</span><span class="token operator">:</span></span>
<span class="line">          self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;moveRight&#39;</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">40</span><span class="token operator">:</span></span>
<span class="line">          self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;moveDown&#39;</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      self<span class="token punctuation">.</span><span class="token function">onKeyDown</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 外部傳入</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token function-variable function">handlerUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> <span class="token punctuation">{</span> animation <span class="token punctuation">}</span> <span class="token operator">=</span> self<span class="token punctuation">;</span></span>
<span class="line">      self<span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">37</span><span class="token operator">:</span></span>
<span class="line">          animation<span class="token punctuation">.</span>moveLeft<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">38</span><span class="token operator">:</span></span>
<span class="line">          animation<span class="token punctuation">.</span>moveUp<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">39</span><span class="token operator">:</span></span>
<span class="line">          animation<span class="token punctuation">.</span>moveRight<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">40</span><span class="token operator">:</span></span>
<span class="line">          animation<span class="token punctuation">.</span>moveDown<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      self<span class="token punctuation">.</span><span class="token function">onKeyUp</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 外部傳入</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">listenKeyDown</span><span class="token punctuation">(</span>handlerDown<span class="token punctuation">,</span> handlerUp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token parameter">allow</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> body<span class="token punctuation">,</span> animation<span class="token punctuation">,</span> moving <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    animation<span class="token punctuation">.</span>moveLeft<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>moving <span class="token operator">||</span> <span class="token operator">!</span>allow<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    Body<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    animation<span class="token punctuation">.</span>moveLeft<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">moveUp</span><span class="token punctuation">(</span><span class="token parameter">allow</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> body<span class="token punctuation">,</span> animation<span class="token punctuation">,</span> moving <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    animation<span class="token punctuation">.</span>moveUp<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>moving <span class="token operator">||</span> <span class="token operator">!</span>allow<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    Body<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    animation<span class="token punctuation">.</span>moveUp<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token parameter">allow</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> body<span class="token punctuation">,</span> animation<span class="token punctuation">,</span> moving <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    animation<span class="token punctuation">.</span>moveRight<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>moving <span class="token operator">||</span> <span class="token operator">!</span>allow<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    Body<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    animation<span class="token punctuation">.</span>moveRight<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">moveDown</span><span class="token punctuation">(</span><span class="token parameter">allow</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> body<span class="token punctuation">,</span> animation<span class="token punctuation">,</span> moving <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    animation<span class="token punctuation">.</span>moveDown<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>moving <span class="token operator">||</span> <span class="token operator">!</span>allow<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    Body<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    animation<span class="token punctuation">.</span>moveDown<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">drawUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">position</span><span class="token operator">:</span> pos <span class="token punctuation">}</span><span class="token punctuation">,</span> size<span class="token punctuation">,</span> username <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> textWidth <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">measureText</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">.</span>width<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">drawText</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> username<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;14px arial&#39;</span><span class="token punctuation">,</span> pos<span class="token punctuation">.</span>x <span class="token operator">-</span> textWidth<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> pos<span class="token punctuation">.</span>y <span class="token operator">+</span> size<span class="token punctuation">.</span>h<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">saying</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">position</span><span class="token operator">:</span> pos <span class="token punctuation">}</span><span class="token punctuation">,</span> size<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> textWidth <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">measureText</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">.</span>width<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">drawTextBG</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> message<span class="token punctuation">,</span> <span class="token string">&#39;16px arial&#39;</span><span class="token punctuation">,</span> pos<span class="token punctuation">.</span>x <span class="token operator">-</span> textWidth<span class="token operator">/</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">6</span><span class="token punctuation">,</span> pos<span class="token punctuation">.</span>y <span class="token operator">-</span> size<span class="token punctuation">.</span>h<span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">say</span><span class="token punctuation">(</span><span class="token parameter">newMessage</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>newMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">clearTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageTimer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> newMessage<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>messageTimer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;destroy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Composite<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>engine<span class="token punctuation">.</span>world<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>customRender<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    Events<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span>render<span class="token punctuation">,</span> <span class="token string">&#39;afterRender&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>customRender<span class="token punctuation">.</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> box <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// use custom render to fix frame rate</span></span>
<span class="line">    <span class="token comment">// in order to let movement matched in each devices</span></span>
<span class="line">    <span class="token keyword">const</span> customRender <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    box<span class="token punctuation">.</span>customRender <span class="token operator">=</span> customRender</span>
<span class="line">    customRender<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">allow</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// username</span></span>
<span class="line">      box<span class="token punctuation">.</span><span class="token function">drawUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// status</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> box<span class="token punctuation">[</span>box<span class="token punctuation">.</span>status<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        box<span class="token punctuation">[</span>box<span class="token punctuation">.</span>status<span class="token punctuation">]</span><span class="token punctuation">(</span>allow<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token comment">// saying</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>box<span class="token punctuation">.</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        box<span class="token punctuation">.</span><span class="token function">saying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    Events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>render<span class="token punctuation">,</span> <span class="token string">&#39;afterRender&#39;</span><span class="token punctuation">,</span> customRender<span class="token punctuation">.</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> box<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Player<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="初始化-playground" tabindex="-1"><a class="header-anchor" href="#初始化-playground"><span>初始化 playground</span></a></h3><p>這段主要是初始化整個 MatterJS 的初次渲染畫面及相關物件</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Engine<span class="token punctuation">,</span> Render<span class="token punctuation">,</span> Runner<span class="token punctuation">,</span> Composite <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;matter-js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createPlayerItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/useSocket&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> engine <span class="token keyword">from</span> <span class="token string">&#39;./engine&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> runner <span class="token keyword">from</span> <span class="token string">&#39;./runner&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> keepWatch<span class="token punctuation">,</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./render&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Player <span class="token keyword">from</span> <span class="token string">&#39;./player&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Joystick <span class="token keyword">from</span> <span class="token string">&#39;./joystick&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">&#39;./box&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> canvasConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./config&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> setPlayerAnimation <span class="token keyword">from</span> <span class="token string">&#39;../players/setPlayerAnimation&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> items<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">boundOptions</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  render<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    fillStyle<span class="token operator">:</span> <span class="token string">&#39;brown&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 初始化邊界</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">initEdgeBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// top</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">Box</span><span class="token punctuation">(</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>width<span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">50</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">boundOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// bottom</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">Box</span><span class="token punctuation">(</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>height <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>width<span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">50</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">boundOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// left</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">Box</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">50</span><span class="token punctuation">,</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>height<span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">boundOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// right</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">Box</span><span class="token punctuation">(</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">50</span><span class="token punctuation">,</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>height<span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">boundOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 初始化本地用戶</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initPlayer</span><span class="token punctuation">(</span>socket<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> imageKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span></span>
<span class="line">    username<span class="token punctuation">,</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">    canvasConfig<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">48</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">64</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// set animation</span></span>
<span class="line">  <span class="token keyword">const</span> querys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> playerImageKey <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> canvasConfig<span class="token punctuation">.</span>playerCount<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">setPlayerAnimation</span><span class="token punctuation">(</span>player<span class="token punctuation">,</span> imageKey <span class="token operator">??</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">player</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>playerImageKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// mount &amp; render</span></span>
<span class="line">  player<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  items<span class="token punctuation">.</span>player <span class="token operator">=</span> player<span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// watch player</span></span>
<span class="line">  <span class="token function">keepWatch</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// set socket events</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">onKeyDown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update-player&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      player<span class="token operator">:</span> <span class="token function">createPlayerItem</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      time<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">onKeyUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update-player&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      player<span class="token operator">:</span> <span class="token function">createPlayerItem</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      time<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  player<span class="token punctuation">.</span>onKeyDown <span class="token operator">=</span> onKeyDown<span class="token punctuation">;</span></span>
<span class="line">  player<span class="token punctuation">.</span>onKeyUp <span class="token operator">=</span> onKeyUp<span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 把本地 player data 發送給其他房內的人</span></span>
<span class="line">  socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;push-player&#39;</span><span class="token punctuation">,</span> <span class="token function">createPlayerItem</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// joystick 手機版觸控控制器</span></span>
<span class="line">  <span class="token keyword">const</span> joystick <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Joystick</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> canvasConfig<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    size<span class="token operator">:</span> <span class="token number">80</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  joystick<span class="token punctuation">.</span><span class="token function">detectPress</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    onKeyDown<span class="token punctuation">,</span></span>
<span class="line">    onKeyUp<span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">up</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      player<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;moveUp&#39;</span><span class="token punctuation">;</span></span>
<span class="line">      player<span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">down</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      player<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;moveDown&#39;</span><span class="token punctuation">;</span></span>
<span class="line">      player<span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">left</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      player<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;moveLeft&#39;</span><span class="token punctuation">;</span></span>
<span class="line">      player<span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">right</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      player<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;moveRight&#39;</span><span class="token punctuation">;</span></span>
<span class="line">      player<span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">reset</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      player<span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  joystick<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> clearUserListen <span class="token operator">=</span> player<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> clearUserListen<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">initPlayground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 初始化邊界</span></span>
<span class="line">  <span class="token function">initEdgeBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    items<span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      Composite<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>engine<span class="token punctuation">.</span>world<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Engine<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>engine<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Render<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Runner<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>runner<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      render<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      render<span class="token punctuation">.</span>textures <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> initPlayground<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="react-page" tabindex="-1"><a class="header-anchor" href="#react-page"><span>React Page</span></a></h3><p>終於到真正的 page 主體了...</p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx"><pre><code class="language-tsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Runner<span class="token punctuation">,</span> Render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;matter-js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Input<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Modal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;antd&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> clsx <span class="token keyword">from</span> <span class="token string">&#39;clsx&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> useSocket <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/useSocket&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> useKeyDown <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/useKeyDown&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> engine <span class="token keyword">from</span> <span class="token string">&#39;@/lib/matter-js/engine&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> runner <span class="token keyword">from</span> <span class="token string">&#39;@/lib/matter-js/runner&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> createRender <span class="token keyword">from</span> <span class="token string">&#39;@/lib/matter-js/render&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> initPlayground<span class="token punctuation">,</span> <span class="token punctuation">{</span> items<span class="token punctuation">,</span> initPlayer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/lib/matter-js/playground&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Loader <span class="token keyword">from</span> <span class="token string">&#39;@/lib/loader&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> initConfig<span class="token punctuation">,</span> <span class="token punctuation">{</span> canvasConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/lib/matter-js/config&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 初始化圖片載入的 loader</span></span>
<span class="line"><span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Loader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Array</span><span class="token punctuation">(</span>canvasConfig<span class="token punctuation">.</span>playerCount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  loader<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">player</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/game/player</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.png</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 頁面本體！！</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// socket config</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> socket<span class="token punctuation">,</span> isConnected<span class="token punctuation">,</span> roomSize<span class="token punctuation">,</span> roomPlayers<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> initRoomPlayers<span class="token punctuation">,</span> onConnect<span class="token punctuation">,</span> onDisconnect<span class="token punctuation">,</span> initJoinOk<span class="token punctuation">,</span> onNewJoin<span class="token punctuation">,</span> onGetLeave<span class="token punctuation">,</span> onGetPlayer<span class="token punctuation">,</span> onGetUpdatePlayer<span class="token punctuation">,</span> onGetMessage <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// util</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isInitialized<span class="token punctuation">,</span> setIsInitialized<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>openModal<span class="token punctuation">,</span> setOpenModal<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// states</span></span>
<span class="line">  <span class="token keyword">const</span> renderRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>Render<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> containerRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>username<span class="token punctuation">,</span> setUsername<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageKey<span class="token punctuation">,</span> setImageKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>message<span class="token punctuation">,</span> setMessage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>Items<span class="token punctuation">,</span> setItems<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// for local objects</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 送出 message</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">handleSendMessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;push-message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        id<span class="token operator">:</span> Items<span class="token punctuation">.</span>player<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">        message<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// 在人物頭上放文字～</span></span>
<span class="line">      Items<span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 初始化 Matter render</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">initializeMatter</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>containerRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> render <span class="token operator">=</span> renderRef<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token function">createRender</span><span class="token punctuation">(</span>containerRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    render<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> canvasConfig<span class="token punctuation">.</span>width<span class="token punctuation">;</span></span>
<span class="line">    render<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> canvasConfig<span class="token punctuation">.</span>height<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">initConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      canvas<span class="token operator">:</span> render<span class="token punctuation">.</span>canvas<span class="token punctuation">,</span></span>
<span class="line">      loader<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    Runner<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>runner<span class="token punctuation">,</span> engine<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Render<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> items<span class="token punctuation">,</span> clear<span class="token operator">:</span> clearPlayground <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">initPlayground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">setItems</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">clearPlayground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 初始化 App，這個 function 必須在 Socket join-ok 後才能調用，所以會傳進去 \`initJoinOK\` 裡面</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">initApp</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token function">initializeMatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 不重要，按下 enter 自動送出 message 而已</span></span>
<span class="line">  <span class="token function">useKeyDown</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>keyCode <span class="token operator">===</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">handleSendMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 等待 socket 拿到 roomPlayer，並且 Matter 初始化完畢才能把其他用戶渲染到畫布上！</span></span>
<span class="line">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>roomPlayers <span class="token operator">&amp;&amp;</span> isInitialized<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">initRoomPlayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>isInitialized<span class="token punctuation">,</span> roomPlayers<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 初始化 socket events</span></span>
<span class="line">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// initApp executed after socket &quot;join ok&quot;(init server user information)</span></span>
<span class="line">    <span class="token keyword">const</span> onJoinOk <span class="token operator">=</span> <span class="token function">initJoinOk</span><span class="token punctuation">(</span>initApp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;connect&#39;</span><span class="token punctuation">,</span> onConnect<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;disconnect&#39;</span><span class="token punctuation">,</span> onDisconnect<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;new-join&#39;</span><span class="token punctuation">,</span> onNewJoin<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;join-ok&#39;</span><span class="token punctuation">,</span> onJoinOk<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;get-leave&#39;</span><span class="token punctuation">,</span> onGetLeave<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;get-player&#39;</span><span class="token punctuation">,</span> onGetPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;get-update-player&#39;</span><span class="token punctuation">,</span> onGetUpdatePlayer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;get-message&#39;</span><span class="token punctuation">,</span> onGetMessage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;connect&#39;</span><span class="token punctuation">,</span> onConnect<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;disconnect&#39;</span><span class="token punctuation">,</span> onDisconnect<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;new-join&#39;</span><span class="token punctuation">,</span> onNewJoin<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;join-ok&#39;</span><span class="token punctuation">,</span> onJoinOk<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;get-leave&#39;</span><span class="token punctuation">,</span> onGetLeave<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;get-player&#39;</span><span class="token punctuation">,</span> onGetPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;get-update-player&#39;</span><span class="token punctuation">,</span> onGetUpdatePlayer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      socket<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;get-message&#39;</span><span class="token punctuation">,</span> onGetMessage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>delay<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 入口彈窗，給用戶選角色、填寫名子</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>max-w-3xl mx-auto<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span></span>
<span class="line">        <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>openModal<span class="token punctuation">}</span></span></span>
<span class="line">        <span class="token attr-name">onOk</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">initPlayer</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span> username<span class="token punctuation">,</span> imageKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token function">setItems</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token function">setOpenModal</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token function">setIsInitialized</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">        <span class="token attr-name">okButtonProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token operator">!</span>username <span class="token operator">||</span> <span class="token operator">!</span>imageKey</span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          What&#39;s your name?</span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>username<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setUsername</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          Choose Character below:</span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-[250px] grid grid-cols-4 gap-4 mt-2 overflow-auto<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token punctuation">{</span></span>
<span class="line">              <span class="token function">Array</span><span class="token punctuation">(</span>canvasConfig<span class="token punctuation">.</span>playerCount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span></span>
<span class="line">                  <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">image</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span></span>
<span class="line">                  <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">clsx</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;w-16 h-16 overflow-hidden rounded&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token string-property property">&#39;bg-blue-500&#39;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">player</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">===</span> imageKey<span class="token punctuation">,</span></span>
<span class="line">                  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span></span>
<span class="line">                  <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setImageKey</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">player</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span></span></span>
<span class="line">                <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/game/player</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.png</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line"></span>
<span class="line">      online: </span><span class="token punctuation">{</span>roomSize<span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-sm text-red-500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        *如果沒有看到其他聊天室的人出現在畫面中，請嘗試重新進入頁面一次</span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token punctuation">{</span>isConnected</span>
<span class="line">        <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>containerRef<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&amp;&gt;canvas]:w-full<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">socket disconnected, please reload page</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span></span>
<span class="line">          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>message<span class="token punctuation">}</span></span></span>
<span class="line">          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Press Enter to send message<span class="token punctuation">&quot;</span></span></span>
<span class="line">          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setMessage</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span></span></span>
<span class="line">        <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSendMessage<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ml-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Send</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Home<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此我們的主體就完成拉！！抱歉我省略了很多部分，因為內容實在太多了...，但大致上的流程跟細節就只有這樣而已</p>`,28)),p(a,{hashtags:"typescript,websocket,socket.io,matterjs,canvas"}),n[2]||(n[2]=s("h2",{id:"結語",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#結語"},[s("span",null,"結語")])],-1)),n[3]||(n[3]=s("p",null,"這次心血來潮開發這個 Side Project，主要是想透過練習，把一些不這麼常在工作上用到的技術做一次稍微深度的整合應用，單獨開發 Socket 沒問題，單獨開發 MatterJS 沒問題，那把兩個加在一起搞看還能不能一樣淡定（本人這次一點都不淡定ＱＱ）",-1)),n[4]||(n[4]=s("p",null,"這次在開發過程中好幾次不淡定，舉凡在 MatterJS, SocketJS 的初始化順序、時機上撞牆了好幾次，也在這次練習經驗中學到很多細節，如果時間允許而你也有興趣的話，誠心推薦也動手實做看看～",-1)),n[5]||(n[5]=s("p",null,"那這次分享就到這邊拉，下次分享不知道是何時，但總會再出現 =V=，下篇文章見拉大家！",-1))])}const d=t(i,[["render",u]]),v=JSON.parse('{"path":"/articles/js/maju-chat-game.html","title":"用 Socket.io 搭配 Matterjs 製作一款 Real-Time Canvas 聊天室（文長慎入）","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1748788505000,"contributors":[{"name":"johnnywang1994","username":"johnnywang1994","email":"42905128+johnnywang1994@users.noreply.github.com","commits":1,"url":"https://github.com/johnnywang1994"},{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"},{"name":"Lindy Liao","username":"","email":"meiliao1207@gmail.com","commits":1}],"changelog":[{"hash":"f01bfa128b4d33fbeddb8abb1697b5391b273d28","time":1748788505000,"email":"meiliao1207@gmail.com","author":"Lindy Liao","message":"UPD"},{"hash":"f1cf9064852e1715a7ba3845a4e95669ab76a7ad","time":1683987919000,"email":"42905128+johnnywang1994@users.noreply.github.com","author":"Johnny","message":"Deploy (#5)","coAuthors":[{"name":"johnnywang","email":"johnnywang@test.com"}]}]},"filePathRelative":"articles/js/maju-chat-game.md"}');export{d as comp,v as data};
