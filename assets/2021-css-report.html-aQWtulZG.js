import{_ as t,c as l,b as s,a as p,d as i,e as a,r as c,o}from"./app-Q3VQkFZX.js";const r={};function u(d,n){const e=c("SocialBlock");return o(),l("div",null,[n[0]||(n[0]=s("h1",{id:"_2021-css-年度報告筆記",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2021-css-年度報告筆記"},[s("span",null,"2021 CSS 年度報告筆記")])],-1)),n[1]||(n[1]=s("h6",{id:"tags-css-report-2021",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#tags-css-report-2021"},[s("span",null,[a("tags: "),s("code",null,"CSS"),a(),s("code",null,"report"),a(),s("code",null,"2021")])])],-1)),p(e,{hashtags:"css,report,2021"}),n[2]||(n[2]=i(`<p>大家好～今天來介紹一些最近網上大大們關於 css 年度報告後的一些我覺得比較特別的屬性筆記，內容會以我個人主觀經驗來認定，並給出我的想法與分析</p><h2 id="layout" tabindex="-1"><a class="header-anchor" href="#layout"><span>Layout</span></a></h2><h3 id="flex" tabindex="-1"><a class="header-anchor" href="#flex"><span>Flex</span></a></h3><p>這還是持續為當今切版使用主流，畢竟支援度就是比較高一些</p><h3 id="grid" tabindex="-1"><a class="header-anchor" href="#grid"><span>Grid</span></a></h3><p>這個屬性從我認識他到現在兩年多過去，各家瀏覽器支援度還是沒有 Flex 來得高，但總體來說仍是一個「可以用」且有其「存在價值」的屬性</p><p>比如對於某些用 Flex 難以處理的切版，使用 Grid 可以更好地進行處理，如下面範例中的 <code>repeat(3, 1fr 2fr)</code> 這種具有某些規律，但又具有相異結構的切版就很適合使用，或是要針對每一個內部元素進行 col, row 位置大小設定時，可以使用 <code>grid-column-start</code>, <code>grid-column-end</code> 等屬性進行細部處理</p><p>雖然我個人幾乎沒有在用 Orz...，畢竟工作上會遇到像下面這種神奇排版的機會真的不多</p><p><a href="https://www.w3schools.com/css/css_grid.asp" target="_blank" rel="noopener noreferrer">範例</a></p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.container </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 1fr 2fr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">.col </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="multi-column" tabindex="-1"><a class="header-anchor" href="#multi-column"><span>Multi-Column</span></a></h3><p>這個屬性支援度非常高，對於一些需要大量文字排版切版時可以大大省去切版的力氣，非常推薦給需要處理大量文字切版的前端使用</p><p><a href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss3_column-rule" target="_blank" rel="noopener noreferrer">範例</a></p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.newspaper </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">column-count</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">column-gap</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">column-rule</span><span class="token punctuation">:</span> 4px double #ff00ff<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="position-sticky" tabindex="-1"><a class="header-anchor" href="#position-sticky"><span>Position Sticky</span></a></h3><p>這屬性跟 Grid 支援度差不多，對於一些較舊的瀏覽器版本確實要考慮一下，但這屬性確實拯救了無數前端童鞋們，最經典的應用就是在網站 Nav 導覽列的固定在上場景</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">nav </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="aspect-ratio" tabindex="-1"><a class="header-anchor" href="#aspect-ratio"><span>Aspect-Ratio</span></a></h3><p>這個屬性雖然目前支援度還不太行，但它可以很方便地幫助我們對圖片、影片等等需要保持尺寸比例的物件進行設定，範例如下</p><ul><li>假設我們需要對 iframe 畫面設定尺寸</li></ul><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>yt-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.yt-wrapper </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">aspect-ratio</span><span class="token punctuation">:</span> 16 <span class="token operator">/</span> 9<span class="token punctuation">;</span> <span class="token comment">// 16:9</span></span>
<span class="line">  <span class="token selector">iframe </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="content-visibility" tabindex="-1"><a class="header-anchor" href="#content-visibility"><span>Content Visibility</span></a></h3><p>這個屬性主要用來提升頁面渲染的效率，可以讓指定元素在用戶瀏覽到之前先不進行渲染作業，等到需要時再進行運算處理，藉此加快畫面渲染速度</p><blockquote><p>缺點!!!!除了目前支援度還不太行，並且如果頁面需要點擊滾動到指定位置的功能時，<strong>不適當的添加此屬性可能會導致滾動功能異常</strong>（之前做一頁式 SPA 踩過的雷），因為這個設定會讓元素延遲渲染，間接導致滾動時的位置運算異常，因為在滾動前、後畫面渲染的頁面高度如果會不一樣，就會出事</p></blockquote><p>個人建議要使用此屬性還是可以的，畢竟瀏覽器不支援時不會有什麼大問題，若是支援那正好可以加快頁面渲染效率，只需要特別注意上面提到的滾動問題即可</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">img </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">content-visibility</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="graph-image" tabindex="-1"><a class="header-anchor" href="#graph-image"><span>Graph/Image</span></a></h2><h3 id="object-fit" tabindex="-1"><a class="header-anchor" href="#object-fit"><span>Object Fit</span></a></h3><p>這個屬性看過的人應該很多，實際用起來非常像 background-size 的配置，傳統上如果我們寫死一個圖片寬高不吻合原尺寸，圖片將會變形，加上這個屬性後可以讓圖片維持原比例並根據需要截斷超出的部分等等功能</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">img </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">object-fit</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span> <span class="token comment">// 自行縮放至完整顯示</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clip-path" tabindex="-1"><a class="header-anchor" href="#clip-path"><span>Clip Path</span></a></h3><p>這個屬性可裁剪元素的可見範圍，且裁剪的形狀是任意形狀！也沒有對定位有任何要求限制，幾乎是製作網頁動畫必備的屬性之一，托網路神人的福，現在我們可以用下面這網站快速生成想要的形狀</p><ul><li><a href="https://www.cssportal.com/css-clip-path-generator/" target="_blank" rel="noopener noreferrer">範例</a></li></ul><h3 id="mix-blend-mode" tabindex="-1"><a class="header-anchor" href="#mix-blend-mode"><span>Mix Blend Mode</span></a></h3><p>這屬性除了用在各種圖層疊加外，也很常用在 gif 動畫之中，作為 sprite animation 的替代品是個不錯的選擇(前提是你不需要對該動畫有細部的控制時...)</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.container </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>90deg<span class="token punctuation">,</span> #fff 49.9%<span class="token punctuation">,</span> #000 50%<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">h1 </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">font-size</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">mix-blend-mode</span><span class="token punctuation">:</span> difference<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter"><span>Filter</span></a></h3><p>濾鏡效果幾乎已經深入網頁開發的方方面面了，舉凡高對比、灰階、亮度、陰影、模糊等等都可以做到</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.my-img </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">constrast</span><span class="token punctuation">(</span>1.3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="perspective" tabindex="-1"><a class="header-anchor" href="#perspective"><span>Perspective</span></a></h3><p>透視，主要在製作 CSS 3D 動畫時使用，用來設定使用者視角與頁面畫布之間的距離</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/perspective" target="_blank" rel="noopener noreferrer">範例</a></li></ul><h3 id="intrinsic-sizing" tabindex="-1"><a class="header-anchor" href="#intrinsic-sizing"><span>Intrinsic Sizing</span></a></h3><p>內在尺寸，支援度也不錯，用來設定元素「內部」內容的尺寸，相比於 width, height 則是外部尺寸，這個可以應用在一個很常見的場景，比如一個外部限制了寬度，但內層的 h1 元素卻想要維持一行，傳統可能就要設定一個 width 給 h1，並且限制文字斷行行為</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token comment">// 傳統</span></span>
<span class="line"><span class="token selector">.container </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">h1 </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但這種做法 h1 只是文字超出 container，他的 border 卻沒有跟著內容變大，此時就可以應用這個 Intrinsic Sizing 概念改為如下</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.container </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">h1 </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> max-content<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此時可以看到 h1 的寬度是照著內部內容完全縮放了，只需注意，IE 不支援這屬性～</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/max-content" target="_blank" rel="noopener noreferrer">範例</a></li></ul><h2 id="interactive" tabindex="-1"><a class="header-anchor" href="#interactive"><span>Interactive</span></a></h2><h3 id="scroll-snap" tabindex="-1"><a class="header-anchor" href="#scroll-snap"><span>Scroll Snap</span></a></h3><p>滾動捕捉效果，支援度也還行，在很多輪播套件中常常看到，可以讓滾動的效果卡點在某些位置加強體驗</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-snap-type" target="_blank" rel="noopener noreferrer">範例</a></li></ul><h3 id="overscroll-behavior" tabindex="-1"><a class="header-anchor" href="#overscroll-behavior"><span>Overscroll Behavior</span></a></h3><p>這屬性用來設定當指定元素滾動到達其底部時的行為，通常是用來限制元素不要在滾動完畢後帶動整個畫面的滾動效果，比如側邊滑塊 menu 就是一個經典的場景，可以讓滑動不會穿透到整個 body</p><p>缺點是支援度還不是非常理想，大約 76%，不過他的支援度，理論上不會影響太多功能面的關鍵東西</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.slide-menu </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">overscroll-behavior-y</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touch-action" tabindex="-1"><a class="header-anchor" href="#touch-action"><span>Touch Action</span></a></h3><p>用來設定用戶如何操控觸摸螢幕的區域，常用在移動端設備上，例如設定水平輪播滑動時，避免觸發垂直滑動</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.image-carousel </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">touch-action</span><span class="token punctuation">:</span> pan-y pinch-zoom<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或是用來禁用 IOS 的畫面縮放效果</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line">*<span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> textarea<span class="token punctuation">,</span> select<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">touch-action</span><span class="token punctuation">:</span> pan-x pan-y<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pointer-events" tabindex="-1"><a class="header-anchor" href="#pointer-events"><span>Pointer Events</span></a></h3><p>用來設定用戶操控鼠標進行的事件，比如禁用一個元素的點擊可以用</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.no-click </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="others" tabindex="-1"><a class="header-anchor" href="#others"><span>Others</span></a></h2><h3 id="line-clamp" tabindex="-1"><a class="header-anchor" href="#line-clamp"><span>Line Clamp</span></a></h3><p>這個屬性算是蠻常用的，支援度也很高，主要用來設定容器最大可容納行數，通常跟 <code>display: -webkit-box;</code> 一起使用</p><blockquote><p>注意使用時需限制元素高度</p></blockquote><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.line-clamp-2 </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">-webkit-box-pack</span><span class="token punctuation">:</span> start<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">word-break</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="css-variable" tabindex="-1"><a class="header-anchor" href="#css-variable"><span>CSS Variable</span></a></h3><p>CSS 原生支援的變數相信大家都知道，這個變數的作用域甚至可以讓我們做到許多好用的抽象效果</p><p>比如我們可以預先定義一組 class 包含變數，此時變數是未定義的</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.color-mixin </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--color<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接著套用到我們的目標元素</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-font color-mixin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hello World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>最後在指定的 scope 內定義 mixin 用到的變數即可</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.my-font </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">--color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="supports" tabindex="-1"><a class="header-anchor" href="#supports"><span>Supports</span></a></h3><p>這個 css at-rule 可以用來檢測環境是否支援指定的功能，比如檢測是否支援自定義變數等等，詳細可參考範例</p><blockquote><p>注意，此功能 IE 完全不支援</p></blockquote><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@supports" target="_blank" rel="noopener noreferrer">範例</a></li></ul><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token atrule"><span class="token rule">@supports</span> <span class="token punctuation">(</span><span class="token property">--foo</span><span class="token punctuation">:</span> bar<span class="token punctuation">)</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">body </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--my-color<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contain" tabindex="-1"><a class="header-anchor" href="#contain"><span>Contain</span></a></h3><p>這個屬性是用來隔離元素渲染的機制，可以指定不同的面向進行隔離，優化網頁的渲染效能，依照嚴謹程度可以分成 <code>strict</code>, <code>content</code>, <code>none</code> 三方案，這三方案只能選其中之一，或是手動進行不同面向的多選設定 <code>layout</code>, <code>size</code>, <code>paint</code>, <code>style</code></p><p>當設定的內容超出其範圍時，會直接被瀏覽器捨棄而不會渲染，比起傳統的 <code>overflow: hidden</code> 即使看不到還是渲染，這個隔離是會將元素與其他元素間進行「次元切割」XD</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/contain" target="_blank" rel="noopener noreferrer">範例</a></li></ul><blockquote><p>使用 <code>contain: strict;</code> 需注意元素消失的狀況，因為其包含隔離 <code>size</code>，若沒有明確設定該元素高度，他將不繼承父層高度而消失，此情況建議使用 <code>contain: content;</code> 隔離 <code>layout paint</code> 就好</p></blockquote><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.my-container </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">contain</span><span class="token punctuation">:</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="will-change" tabindex="-1"><a class="header-anchor" href="#will-change"><span>Will Change</span></a></h3><p>這個屬性可以告訴瀏覽器元素哪些東西在未來可能會變動，讓瀏覽器能在屬性變動時快速調用 GPU 幫你做處理，而不會突然變動只能臨時調用 CPU 費時費工又容易掉幀，使用上非常簡單，只需要給屬性名稱即可</p><p>支援度也還算高的了，有 96%</p><blockquote><p>使用上有點難度，一般直接寫在默認樣式裡是沒用的，可以用 js 或是 css 的動作時加上</p></blockquote><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.will-change </span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token property">transition</span><span class="token punctuation">:</span> transform 0.3s<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.will-change:hover </span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token property">will-change</span><span class="token punctuation">:</span> transform<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.will-change:active </span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.5<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="css-function" tabindex="-1"><a class="header-anchor" href="#css-function"><span>CSS Function</span></a></h3><p>這個相信很多朋友已經在使用了，像是 calc(), min(), max(), attr() 等等都是非常好用的 css function，不同 function 支援度不太一樣，建議使用前確認下</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code><span class="line"><span class="token selector">.container </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">.col </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% <span class="token operator">/</span> 3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token selector">.my-img </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">min</span><span class="token punctuation">(</span>100px<span class="token punctuation">,</span> 20vh<span class="token punctuation">,</span> 30vw<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 取相對小</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上就是這次看網上大大的總結跟我自己的一些小感想，謝謝大家～</p><p>喜歡的話可以幫我分享瞜</p>`,100)),p(e,{hashtags:"css,report,2021"}),n[3]||(n[3]=s("h2",{id:"參考",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#參考"},[s("span",null,"參考")])],-1)),n[4]||(n[4]=s("ul",null,[s("li",null,[s("a",{href:"https://juejin.cn/post/7043577751344775176#heading-38",target:"_blank",rel:"noopener noreferrer"},"看完了 2021 CSS 年度报告，我学到了啥？")])],-1))])}const k=t(r,[["render",u]]),m=JSON.parse('{"path":"/articles/css/2021-css-report.html","title":"2021 CSS 年度報告筆記","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1648521821000,"contributors":[{"name":"johnnywang1994","username":"johnnywang1994","email":"johnny29621189@kimo.com","commits":3,"url":"https://github.com/johnnywang1994"}],"changelog":[{"hash":"71ccb7693345c8ddc2f554e00f8a0ce73af2b783","time":1648521821000,"email":"johnny29621189@kimo.com","author":"johnnywang1994","message":"UPD: upgrade to v2"},{"hash":"b98777934802fc6b8b693ce730ad32e53a93e329","time":1640341938000,"email":"johnny29621189@kimo.com","author":"johnnywang1994","message":"UPD: update project"},{"hash":"b838d337ffb576b1146654cc2bf4ef98b2888b41","time":1640339236000,"email":"johnny29621189@kimo.com","author":"johnnywang1994","message":"UPD: add css 2021 report"}]},"filePathRelative":"articles/css/2021-css-report.md"}');export{k as comp,m as data};
