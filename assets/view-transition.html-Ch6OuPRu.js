import{_ as p,c as t,b as s,a as e,e as i,o as l,r as c}from"./app-Ba7lTalA.js";const o={};function u(r,n){const a=c("SocialBlock");return l(),t("div",null,[n[0]||(n[0]=s("h1",{id:"view-transitions-認識並使用原生-document-轉場效果",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#view-transitions-認識並使用原生-document-轉場效果"},[s("span",null,"View Transitions - 認識並使用原生 document 轉場效果")])],-1)),e(a,{hashtags:"javascript,css,transition,animation,document"}),n[1]||(n[1]=i(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>Hi 大家好，我是 Johnny，今天要介紹一個瀏覽器原生的畫面轉場效果 API，本篇是閱讀國外的文章 <a href="https://github.com/WICG/view-transitions/blob/main/explainer.md" target="_blank" rel="noopener noreferrer">WICG/view-transitions</a> 後的相關筆記記錄</p><h2 id="介紹" tabindex="-1"><a class="header-anchor" href="#介紹"><span>介紹</span></a></h2><p>過去我們需要透過 SPA 搭配 CSS Transition, Animation 等以複雜的手段來實現少量的轉場動畫，但實際上使用時可能會採用最小化的方式，因為實際製作這些效果需要花費高昂的時間成本，然而新的轉場效果功能透過 <code>document.startViewTransition</code> 即可讓瀏覽器協助實現 document 之間切換的轉場效果</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">spaNavigate</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Fallback for browsers that don&#39;t support this API:</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>document<span class="token punctuation">.</span>startViewTransition<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">updateTheDOMSomehow</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  document<span class="token punctuation">.</span><span class="token function">startViewTransition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">updateTheDOMSomehow</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="結構" tabindex="-1"><a class="header-anchor" href="#結構"><span>結構</span></a></h2><p>呼叫 API 後會擷取頁面的目前狀態。包括截取螢幕截圖，這是異步的，因為它發生在事件循環的渲染步驟中，當完成後會再呼叫 callback 函數 updateTheDOMSomehow，此時 render 流程會被暫停，直到 callback 執行完畢並更新 DOM 後，API 會擷取頁面的新狀態，並建構一個像這樣的偽元素樹，動畫完成後，::view-transition 將被刪除，顯示下面的最終狀態</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">::view-transition</span>
<span class="line">└─ ::view-transition-group(root)</span>
<span class="line">   └─ ::view-transition-image-pair(root)</span>
<span class="line">      ├─ ::view-transition-old(root)</span>
<span class="line">      └─ ::view-transition-new(root)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="直接用-css-套用轉場效果" tabindex="-1"><a class="header-anchor" href="#直接用-css-套用轉場效果"><span>直接用 CSS 套用轉場效果</span></a></h2><p>上面所有的偽元素都可以用 CSS 來定位，因此可以直接由 CSS Animation 進行控制，底下是一個 <a href="https://material.io/design/motion/the-motion-system.html#shared-axis" target="_blank" rel="noopener noreferrer">Material Design 的範例</a></p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> fade-in</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">from</span> <span class="token punctuation">{</span> <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> fade-out</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">to</span> <span class="token punctuation">{</span> <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> slide-from-right</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">from</span> <span class="token punctuation">{</span> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>30px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> slide-to-left</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">to</span> <span class="token punctuation">{</span> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-30px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">::view-transition-old(root)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation</span><span class="token punctuation">:</span> 90ms <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0.4<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 1<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> both fade-out<span class="token punctuation">,</span></span>
<span class="line">    300ms <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0.4<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> both slide-to-left<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">::view-transition-new(root)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation</span><span class="token punctuation">:</span> 210ms <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> 90ms both fade-in<span class="token punctuation">,</span></span>
<span class="line">    300ms <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0.4<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> both slide-from-right<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分離拆分獨立的多個轉場元素" tabindex="-1"><a class="header-anchor" href="#分離拆分獨立的多個轉場元素"><span>分離拆分獨立的多個轉場元素</span></a></h2><p>如果某些畫面中的元素並不希望跟著進行轉場效果（比如 Header），此時可以使用 <code>view-transition-name</code> 把元素獨立出來，需要注意獨立的過渡元素需要設定 <code>contain: layout|paint</code>，並避免 fragment，如此該元素才可以被作為獨立單元處理</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.header</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">view-transition-name</span><span class="token punctuation">:</span> header<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">contain</span><span class="token punctuation">:</span> layout<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.header-text</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">view-transition-name</span><span class="token punctuation">:</span> header-text<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">contain</span><span class="token punctuation">:</span> layout<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>設定後畫面中的過度元素會被拆成 3個部分 root, header, header-text，產生如下對應結構：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">::view-transition</span>
<span class="line">├─ ::view-transition-group(root)</span>
<span class="line">│  └─ ::view-transition-image-pair(root)</span>
<span class="line">│     ├─ ::view-transition-old(root)</span>
<span class="line">│     └─ ::view-transition-new(root)</span>
<span class="line">│</span>
<span class="line">├─ ::view-transition-group(header)</span>
<span class="line">│  └─ ::view-transition-image-pair(header)</span>
<span class="line">│     ├─ ::view-transition-old(header)</span>
<span class="line">│     └─ ::view-transition-new(header)</span>
<span class="line">│</span>
<span class="line">└─ ::view-transition-group(header-text)</span>
<span class="line">   └─ ::view-transition-image-pair(header-text)</span>
<span class="line">      ├─ ::view-transition-old(header-text)</span>
<span class="line">      └─ ::view-transition-new(header-text)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="轉場元素不需要是相同的元素" tabindex="-1"><a class="header-anchor" href="#轉場元素不需要是相同的元素"><span>轉場元素不需要是相同的元素</span></a></h2><p>前面舉例中這些元素，在 DOM 更改之前和之後是相同的元素，但其實也可以在不同的情況下創建過渡，來看一個點擊縮圖顯示的範例：</p><ul><li>添加一個 <code>view-transition-name</code> 到預覽圖上</li></ul><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.full-embed</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">view-transition-name</span><span class="token punctuation">:</span> full-embed<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">contain</span><span class="token punctuation">:</span> layout<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>按一下縮圖時，可以動態指定一個 view-transition-name，僅在轉換期間有效</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">thumbnail<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  thumbnail<span class="token punctuation">.</span>style<span class="token punctuation">.</span>viewTransitionName <span class="token operator">=</span> <span class="token string">&quot;full-embed&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  document<span class="token punctuation">.</span><span class="token function">startViewTransition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    thumbnail<span class="token punctuation">.</span>style<span class="token punctuation">.</span>viewTransitionName <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">updateTheDOMSomehow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>這樣即使是兩個完全不同的元素，我們也能將兩者透過動態綁定 view-transition-name 來達到一樣的效果</p><h2 id="轉場元素不需要在轉場前後都存在" tabindex="-1"><a class="header-anchor" href="#轉場元素不需要在轉場前後都存在"><span>轉場元素不需要在轉場前後都存在</span></a></h2><p>如果一個元素只在新的狀態中存在也是可以的，此時對應轉場元素的 <code>::view-transition-old</code> 不存在，<code>::view-transition-group</code> 不會套用動畫，直接套用最終的元素位置</p><h2 id="框架相容性" tabindex="-1"><a class="header-anchor" href="#框架相容性"><span>框架相容性</span></a></h2><p>可以參考這裡的 <a href="https://github.com/jakearchibald/http203-playlist/blob/main/src/shared/utils.ts#L53" target="_blank" rel="noopener noreferrer">Preact 範例</a></p><h2 id="效能考量" tabindex="-1"><a class="header-anchor" href="#效能考量"><span>效能考量</span></a></h2><p><code>::view-transition-group</code> 預設會對 width, height 套用動畫，這意味著動畫會在 main thread 上運行，但是否要使用 width, height 進行動畫取決於開發者，比如在圖片 4:3 轉場為 16:9 的情境中，可以使用 <code>object-fit</code> 或 <code>object-position</code> 達到相同的效果而不使用 width/height</p><p>view transition 本身是能夠在 main thread 之外運行的，但如果開發者添加了需要 layout 的內容（例如 border），動畫將回退使用 main thread</p><h2 id="錯誤處理" tabindex="-1"><a class="header-anchor" href="#錯誤處理"><span>錯誤處理</span></a></h2><p>在執行 document.startViewTransition 中的 callback 前，此 API 就會對環境條件進行錯誤檢查，比如出現重複的 view-transition-name 或某個元素是 Fragmented，如果有任何錯誤，callback 仍然會執行，畢竟 DOM 的更新更加重要，但會同時報出 <code>ready promise on the returned ViewTransition</code> 告警，這也是為何 document.startViewTransition() 接受的是一個 callback function</p><p>假如 API 不是以 callback 方式實作，比如下方案例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// Not the real API, just an alternative example:</span></span>
<span class="line"><span class="token keyword">const</span> transition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> transition<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> <span class="token function">updateTheDOMSomehow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">transition<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果以非 callback 實作，在 updateTheDOMSomehow() 拋出錯誤，transition.ready 將永遠不會被調用，因此 API 將處於不知道 DOM 更改是否失敗的狀態，callback 模式避免了這個問題——我們可以看到拋出的錯誤，並快速放棄 Transition</p><h2 id="完整預設樣式" tabindex="-1"><a class="header-anchor" href="#完整預設樣式"><span>完整預設樣式</span></a></h2><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">::view-transition</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* Aligns this element with the &quot;snapshot viewport&quot;. This is the viewport when all retractable */</span></span>
<span class="line">  <span class="token comment">/* UI (like URL bar, root scrollbar, virtual keyboard) are hidden. */</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">top</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">left</span><span class="token punctuation">:</span> -15px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">::view-transition-group(*)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/*= Styles for every instance =*/</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">will-change</span><span class="token punctuation">:</span> transform<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">pointer-events</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">/*= Styles generated per instance =*/</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">/* Dimensions of the new element */</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 665px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 54px<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">/* A transform that places it in the viewport position of the new element. */</span></span>
<span class="line">  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">matrix</span><span class="token punctuation">(</span>1<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 1<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token property">writing-mode</span><span class="token punctuation">:</span> horizontal-tb<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">animation</span><span class="token punctuation">:</span> 0.25s ease 0s 1 normal both running</span>
<span class="line">    page-transition-group-anim-main-header<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> page-transition-group-anim-main-header</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">from</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/* Dimensions of the old element */</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* A transform that places it in the viewport position of the old element. */</span></span>
<span class="line">    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">matrix</span><span class="token punctuation">(</span>2<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 2<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">::view-transition-image-pair(*)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/*= Styles for every instance =*/</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">inset</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">/*= Styles generated per instance =*/</span></span>
<span class="line">  <span class="token comment">/* Set if there&#39;s an old and new image, to aid with cross-fading.</span>
<span class="line">     This is done conditionally as isolation has a performance cost. */</span></span>
<span class="line">  <span class="token property">isolation</span><span class="token punctuation">:</span> isolate<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">::view-transition-old(*)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/*= Styles for every instance =*/</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">inset-block-start</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">inline-size</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">block-size</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">will-change</span><span class="token punctuation">:</span> opacity<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">/*= Styles generated per instance =*/</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">/* Set if there&#39;s an old and new image, to aid with cross-fading.</span>
<span class="line">     This is done conditionally as isolation has a performance cost. */</span></span>
<span class="line">  <span class="token property">mix-blend-mode</span><span class="token punctuation">:</span> plus-lighter<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">/* Allows the image to be the layout size of the element,</span>
<span class="line">     but allow overflow (to accommodate ink-overflow)</span>
<span class="line">     and underflow (cropping to save memory) in the image data. */</span></span>
<span class="line">  <span class="token property">object-view-box</span><span class="token punctuation">:</span> <span class="token function">inset</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token property">animation</span><span class="token punctuation">:</span> 0.25s ease 0s 1 normal both running blink-page-transition-fade-out<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> page-transition-fade-out</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">from</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> page-transition-fade-in</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">to</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="future" tabindex="-1"><a class="header-anchor" href="#future"><span>Future</span></a></h2><p>此 API 在文章撰寫時仍處於開發階段，未來可能仍有相關改動，詳細可<a href="https://github.com/WICG/view-transitions/blob/main/explainer.md#future-work" target="_blank" rel="noopener noreferrer">參考這邊</a></p>`,39)),e(a,{hashtags:"javascript,css,transition,animation,document"})])}const v=p(o,[["render",u],["__file","view-transition.html.vue"]]),k=JSON.parse('{"path":"/articles/js/view-transition.html","title":"View Transitions - 認識並使用原生 document 轉場效果","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"介紹","slug":"介紹","link":"#介紹","children":[]},{"level":2,"title":"結構","slug":"結構","link":"#結構","children":[]},{"level":2,"title":"直接用 CSS 套用轉場效果","slug":"直接用-css-套用轉場效果","link":"#直接用-css-套用轉場效果","children":[]},{"level":2,"title":"分離拆分獨立的多個轉場元素","slug":"分離拆分獨立的多個轉場元素","link":"#分離拆分獨立的多個轉場元素","children":[]},{"level":2,"title":"轉場元素不需要是相同的元素","slug":"轉場元素不需要是相同的元素","link":"#轉場元素不需要是相同的元素","children":[]},{"level":2,"title":"轉場元素不需要在轉場前後都存在","slug":"轉場元素不需要在轉場前後都存在","link":"#轉場元素不需要在轉場前後都存在","children":[]},{"level":2,"title":"框架相容性","slug":"框架相容性","link":"#框架相容性","children":[]},{"level":2,"title":"效能考量","slug":"效能考量","link":"#效能考量","children":[]},{"level":2,"title":"錯誤處理","slug":"錯誤處理","link":"#錯誤處理","children":[]},{"level":2,"title":"完整預設樣式","slug":"完整預設樣式","link":"#完整預設樣式","children":[]},{"level":2,"title":"Future","slug":"future","link":"#future","children":[]}],"git":{"updatedTime":1735207525000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"}]},"filePathRelative":"articles/js/view-transition.md"}');export{v as comp,k as data};
