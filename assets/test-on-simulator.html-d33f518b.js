import{_ as o,o as e,c as d,f as i}from"./app-7841ac8a.js";const a={},t=i('<h1 id="在-simulator-上開發測試" tabindex="-1"><a class="header-anchor" href="#在-simulator-上開發測試" aria-hidden="true">#</a> 在 Simulator 上開發測試</h1><p>這篇筆記主要為紀錄如何在 Mac 環境裡測試 IOS, Android 畫面版面</p><h2 id="ios" tabindex="-1"><a class="header-anchor" href="#ios" aria-hidden="true">#</a> IOS</h2><p>透過 Mac 內建的 xcode simulator 即可，步驟如下：</p><ul><li>確認 xcode 已安裝</li><li>打開 xcode 後，點擊畫面左上 <code>Xcode</code> =&gt; <code>Open Developer Tool</code> =&gt; <code>Simulator</code></li><li>把 Simulator 加入到 Dock 中方便下次開啟，或是透過指令 <code>open -a Simulator</code> 開啟最近一次開啟的模擬器</li><li>如果需要在模擬器內連上本機的 <code>https://localhost/</code> 則可以將本機信任的 root CA 從鑰匙圈內複製出來後，將該 CA 拖入模擬器中，就可以在模擬器內認證該 Https 憑證了，安裝 App 進行測試也是同樣方式</li></ul><h2 id="android" tabindex="-1"><a class="header-anchor" href="#android" aria-hidden="true">#</a> Android</h2><p>透過 Android Studio 進行，步驟如下：</p><ul><li>確認 Android Studio 已安裝</li><li>建立一個測試專案 <code>simulator</code></li><li>打開 Android Studio，點擊上方分頁 <code>Tools</code> =&gt; <code>Device Manager</code></li><li>接著可以新增自定義的作業環境版本、手機平板型號等等，建立完成後按下指定模擬器右邊的執行按鈕啟動</li></ul>',8),c=[t];function l(r,n){return e(),d("div",null,c)}const h=o(a,[["render",l],["__file","test-on-simulator.html.vue"]]);export{h as default};
