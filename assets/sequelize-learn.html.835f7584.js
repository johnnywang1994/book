import{_ as p,r as o,o as c,c as l,d as n,e as a,a as e,f as t}from"./app.ef6cb061.js";const i={},r=t(`<h1 id="sequelize-\u7B46\u8A18" tabindex="-1"><a class="header-anchor" href="#sequelize-\u7B46\u8A18" aria-hidden="true">#</a> Sequelize \u7B46\u8A18</h1><h2 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h2><p>\u5EFA\u8B70\u900F\u904E <code>sequelize-cli</code> \u5FEB\u901F\u642D\u5EFA\u74B0\u5883\u914D\u7F6E\uFF0C\u4EE5\u53CA\u69CB\u5EFA\u5B8C\u6574 models, migrations \u74B0\u5883</p><p>\u4EE5 Koa \u8209\u4F8B\uFF0C\u5B89\u88DD\u5982\u4E0B</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> sequelize sequelize-cli sqlite3 koa koa-body @koa/router
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316" aria-hidden="true">#</a> \u521D\u59CB\u5316</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ npx sequelize init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u5275\u5EFA-model" tabindex="-1"><a class="header-anchor" href="#\u5275\u5EFA-model" aria-hidden="true">#</a> \u5275\u5EFA model</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ npx sequelize model:generate <span class="token parameter variable">--name</span> office <span class="token parameter variable">--attributes</span> name:string
$ npx sequelize model:generate <span class="token parameter variable">--name</span> lesson <span class="token parameter variable">--attributes</span> name:string
$ npx sequelize model:generate <span class="token parameter variable">--name</span> teacher <span class="token parameter variable">--attributes</span> name:string, officeId:integer
$ npx sequelize model:generate <span class="token parameter variable">--name</span> teacher_lesson <span class="token parameter variable">--attributes</span> lessonId:integer,teacherId:integer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4FEE\u6539-migration" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539-migration" aria-hidden="true">#</a> \u4FEE\u6539 migration</h2>`,10),u={href:"https://siddharth-lakhara.medium.com/understanding-sequelize-associations-part-3-many-to-many-n-m-mapping-3e7dcdeb78db",target:"_blank",rel:"noopener noreferrer"},d=t(`<ol><li><code>teacher</code> 1 to many relation \u4FEE\u6539 teacher \u7684 migration file \u52A0\u4E0A references</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">up</span><span class="token punctuation">(</span><span class="token parameter">queryInterface<span class="token punctuation">,</span> Sequelize</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> queryInterface<span class="token punctuation">.</span><span class="token function">createTable</span><span class="token punctuation">(</span><span class="token string">&#39;teachers&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
      <span class="token literal-property property">officeId</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Sequelize<span class="token punctuation">.</span><span class="token constant">INTEGER</span><span class="token punctuation">,</span>
        <span class="token literal-property property">references</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token string">&#39;offices&#39;</span><span class="token punctuation">,</span> <span class="token comment">// need to be pluralized in migration</span>
          <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>teacher_lesson</code> M to N relation \u4FEE\u6539 teacher_lesson \u7684 migration file \u52A0\u4E0A references</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">up</span><span class="token punctuation">(</span><span class="token parameter">queryInterface<span class="token punctuation">,</span> Sequelize</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> queryInterface<span class="token punctuation">.</span><span class="token function">createTable</span><span class="token punctuation">(</span><span class="token string">&#39;teacher_lessons&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
      <span class="token literal-property property">lessonId</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Sequelize<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>
        <span class="token literal-property property">references</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token string">&#39;lessons&#39;</span><span class="token punctuation">,</span> <span class="token comment">// need to be pluralized in migration</span>
          <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">teacherId</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Sequelize<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>
        <span class="token literal-property property">references</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token string">&#39;teachers&#39;</span><span class="token punctuation">,</span> <span class="token comment">// need to be pluralized in migration</span>
          <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6DFB\u52A0-model-relations" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0-model-relations" aria-hidden="true">#</a> \u6DFB\u52A0 model relations</h2><p>model relation \u95DC\u4FC2\u6309\u7167\u4EE5\u4E0B\u65B9\u5F0F\u5224\u8B80</p>`,6),k={href:"https://sequelize.org/docs/v6/core-concepts/assocs/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://sequelize.org/v5/manual/associations.html",target:"_blank",rel:"noopener noreferrer"},m=t(`<ol><li><code>A.belongsTo(B)</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// A \u5C6C\u65BC B</span>
<span class="token constant">A</span><span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&#39;B_Id&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u5728 A \u4E0A\u6DFB\u52A0 B \u7684 foreignKey</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>A.belongsToMany(B)</code> \u4EE5\u4E0B\u70BA\u9810\u8A2D\u7684 belongsToMany \u884C\u70BA\uFF0C\u6703\u81EA\u52D5\u6DFB\u52A0\u5169\u65B9\u7684 id \u70BA foreignKey</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// A \u5C6C\u65BC\u591A\u500B B</span>
<span class="token constant">A</span><span class="token punctuation">.</span><span class="token function">belongsToMany</span><span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">through</span><span class="token operator">:</span> <span class="token string">&#39;A_B&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&#39;A_Id&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u5728 A_B \u4E0A\u6DFB\u52A0 source A \u7684 foreignKey</span>
  <span class="token literal-property property">otherKey</span><span class="token operator">:</span> <span class="token string">&#39;B_Id&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u5728 A_B \u4E0A\u6DFB\u52A0 target B \u7684 foreignKey</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>A.hasOne(B), A.hasMany(B)</code> \u56E0\u70BA A, B \u95DC\u4FC2\u662F\u6210\u5C0D\u5B58\u5728\uFF0C\u5EFA\u8B70\u4EE5\u4E00\u7A2E\u65B9\u5F0F\u6DFB\u52A0 foreignKey \u5373\u53EF\uFF0C\u4F8B\u5982 belongsTo \u5DF2\u7D93\u6DFB\u52A0\uFF0C\u5247\u5C0D\u61C9\u7684 hasOne \u6216 hasMany \u5C31\u53EF\u4EE5\u7701\u7565</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// A \u64C1\u6709\u591A\u500B B</span>
<span class="token constant">A</span><span class="token punctuation">.</span><span class="token function">hasMany</span><span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&#39;B_Id&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u5728 B \u4E0A\u6DFB\u52A0 A \u7684 foreignKey</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6309\u7167\u4E0A\u8FF0\u898F\u5247\u6DFB\u52A0-model-relations" tabindex="-1"><a class="header-anchor" href="#\u6309\u7167\u4E0A\u8FF0\u898F\u5247\u6DFB\u52A0-model-relations" aria-hidden="true">#</a> \u6309\u7167\u4E0A\u8FF0\u898F\u5247\u6DFB\u52A0 model relations</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// office model</span>
<span class="token comment">// foreignKey \u5728 teacher \u7684 belongsTo \u6DFB\u52A0</span>
office<span class="token punctuation">.</span><span class="token function">hasMany</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>teacher<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// lesson model</span>
lesson<span class="token punctuation">.</span><span class="token function">belongsToMany</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>teacher<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">through</span><span class="token operator">:</span> models<span class="token punctuation">.</span>teacher_lesson<span class="token punctuation">,</span>
  <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&#39;lessonId&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// teacher model</span>
teacher<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>office<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&#39;officeId&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

teacher<span class="token punctuation">.</span><span class="token function">belongsToMany</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>lesson<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">through</span><span class="token operator">:</span> models<span class="token punctuation">.</span>teacher_lesson<span class="token punctuation">,</span>
  <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&#39;teacherId&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// teacher_lesson model</span>
teacher_lesson<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>lesson<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&#39;lessonId&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
teacher_lesson<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>teacher<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&#39;teacherId&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u66F4\u65B0-config-json-\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0-config-json-\u914D\u7F6E" aria-hidden="true">#</a> \u66F4\u65B0 config.json \u914D\u7F6E</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;development&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;storage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./db.sqlite&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dialect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sqlite&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="migrate-models" tabindex="-1"><a class="header-anchor" href="#migrate-models" aria-hidden="true">#</a> migrate models</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ npx sequelize db:migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u5EFA\u7ACB-koa-server" tabindex="-1"><a class="header-anchor" href="#\u5EFA\u7ACB-koa-server" aria-hidden="true">#</a> \u5EFA\u7ACB koa server</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> KoaRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@koa/router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> koaBody <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KoaRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/api&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;welcome&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// ... apis</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">koaBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;server listen 8000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="db-manager-\u7B46\u8A18" tabindex="-1"><a class="header-anchor" href="#db-manager-\u7B46\u8A18" aria-hidden="true">#</a> db manager \u7B46\u8A18</h2><ol><li>createTeacherLesson \u5EFA\u7ACB\u4E00\u7B46 \u4E2D\u9593\u8868 \u7684\u7D00\u9304</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">createTeacherLesson</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">lessonId<span class="token punctuation">,</span> teacherId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> models<span class="token punctuation">.</span>teacher_lesson<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    lessonId<span class="token punctuation">,</span>
    teacherId<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>getTLsByTeacher \u62FF\u53D6\u6307\u5B9A teacher \u4E26\u5305\u542B\u5176\u6240\u6709 lessons</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getTLsByTeacher</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">teacherId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> models<span class="token punctuation">.</span>teacher<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> teacherId <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">include</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">model</span><span class="token operator">:</span> models<span class="token punctuation">.</span>lesson<span class="token punctuation">,</span>
      <span class="token comment">// exclude associate select</span>
      <span class="token comment">// https://stackoverflow.com/questions/30082625/cant-exclude-associations-fields-from-select-statement-in-sequelize</span>
      <span class="token literal-property property">through</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">attributes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,23),b={href:"https://github.com/jwlearn1994/koa-sequelize.git",target:"_blank",rel:"noopener noreferrer"};function h(g,y){const s=o("ExternalLinkIcon");return c(),l("div",null,[r,n("ul",null,[n("li",null,[n("a",u,[a("\u53C3\u8003\u6587\u7AE0"),e(s)])])]),d,n("ul",null,[n("li",null,[n("a",k,[a("v6 associations"),e(s)])]),n("li",null,[n("a",v,[a("v5 associations"),e(s)])])]),m,n("ul",null,[n("li",null,[n("a",b,[a("Koa Sequelize"),e(s)])])])])}const _=p(i,[["render",h],["__file","sequelize-learn.html.vue"]]);export{_ as default};
