import{_ as n,c as t,b as a,a as i,d as o,r as s,o as r}from"./app-BrOWnwog.js";const c={};function d(h,e){const l=s("SocialBlock");return r(),t("div",null,[e[0]||(e[0]=a("h1",{id:"flowiseai-使用介紹筆記",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#flowiseai-使用介紹筆記"},[a("span",null,"FlowiseAI 使用介紹筆記")])],-1)),i(l,{hashtags:"javascript,flowise-ai"}),e[1]||(e[1]=o(`<p><a href="https://github.com/FlowiseAI/Flowise" target="_blank" rel="noopener noreferrer">FlowiseAI</a> 是一款開源 LLM AI 工作流程開發工具，透過簡單的 UI 介面，讓用戶自定義複雜的 AI 工作流程</p><ul><li><a href="https://docs.flowiseai.com/getting-started" target="_blank" rel="noopener noreferrer">FlowiseAI - API Document</a></li></ul><h2 id="安裝使用" tabindex="-1"><a class="header-anchor" href="#安裝使用"><span>安裝使用</span></a></h2><ul><li>本地 NPM 安裝</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> flowise</span>
<span class="line">$ npx flowise start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Docker</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Download source code</span></span>
<span class="line">$ <span class="token function">git</span> clone https://github.com/FlowiseAI/Flowise.git</span>
<span class="line">$ <span class="token builtin class-name">cd</span> ./Flowise/docker</span>
<span class="line"><span class="token comment"># create .env</span></span>
<span class="line">$ <span class="token function">cp</span> .env.example .env</span>
<span class="line">$ <span class="token function">docker</span> compose up</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="chatflows-模組介紹" tabindex="-1"><a class="header-anchor" href="#chatflows-模組介紹"><span>Chatflows 模組介紹</span></a></h2><h3 id="chains" tabindex="-1"><a class="header-anchor" href="#chains"><span>Chains</span></a></h3><h4 id="llm-chain" tabindex="-1"><a class="header-anchor" href="#llm-chain"><span>LLM Chain</span></a></h4><ul><li>位置：<code>Chains - LLM Chain</code></li><li>功能：基礎 LLM 鏈，用以定義一個 LLM 的模組鏈，能夠串接以下模組 <ul><li>Language Model: 核心 LLM Model，比如常見的 OpenAI, Ollama, GoogleVertexAI 等</li><li>Prompt: 比如常見的 instruction prompt 或是 chat prompt</li><li>Output Parser: 輸出的格式調整工具，比如把文字輸出轉為 JSON 值</li><li>Input Moderation: 輸出值內容檢查工具，比如常見內容關鍵字過濾機制</li></ul></li><li>輸入：可以讀取 user input 到 prompt 當中</li><li>輸出：結果可以輸出為 LLM Chain 的形式，或是把輸出值傳遞給下一個 Chat Prompt 作為 input</li></ul><h4 id="conversation-chain" tabindex="-1"><a class="header-anchor" href="#conversation-chain"><span>Conversation Chain</span></a></h4><ul><li>位置：<code>Chains - Conversation Chain</code></li><li>功能：對話鏈，用以定義一個具備 Memory 能力的模組鏈，能夠串接以下模組 <ul><li>Chat Model: 核心 Chat Model，比如常見的 ChatOpenAI, ChatGoogleGenerativeAI, ChatHuggingFace, ChatOllama</li><li>Memory: 記憶機制模組，常見如 Buffer Memory, Redis-Backed Chat Memory</li><li>Chat Prompt Template</li><li>Input Moderation</li></ul></li></ul><h4 id="conversational-retrieval-qa-chain" tabindex="-1"><a class="header-anchor" href="#conversational-retrieval-qa-chain"><span>Conversational Retrieval QA Chain</span></a></h4><ul><li>位置：<code>Chains - Conversational Retrieval QA Chain</code></li><li>功能：對話鏈，用以定義一個具備 Retrieval 能力的模組鏈，能夠串接以下模組 <ul><li>Chat Model</li><li>Vector Store Retriever: 向量儲存檢索器，負責將給定的 Document 轉為向量儲存並進行檢索的模組，比如 In-Memory Vector Store</li><li>Memory</li><li>Input Moderation</li><li>Return Source Document(switch)</li></ul></li></ul><h3 id="prompts" tabindex="-1"><a class="header-anchor" href="#prompts"><span>Prompts</span></a></h3><h4 id="prompt-template" tabindex="-1"><a class="header-anchor" href="#prompt-template"><span>Prompt Template</span></a></h4><ul><li>位置：<code>Prompts - Prompt Template</code></li><li>功能：定義 instruct prompt</li></ul><h4 id="chat-prompt-template" tabindex="-1"><a class="header-anchor" href="#chat-prompt-template"><span>Chat Prompt Template</span></a></h4><ul><li>位置：<code>Prompts - Chat Prompt Template</code></li><li>功能：定義 Chat Model 的 chat prompt</li></ul><h3 id="memory" tabindex="-1"><a class="header-anchor" href="#memory"><span>Memory</span></a></h3><h4 id="buffer-memory" tabindex="-1"><a class="header-anchor" href="#buffer-memory"><span>Buffer Memory</span></a></h4><ul><li>位置：<code>Memory - Buffer Memory</code></li><li>功能：提供其他需要 memory 的模組 Buffer 記憶功能，為暫時性的，當刪除 chat history 同時被清空</li></ul><h4 id="redis-backed-chat-memory" tabindex="-1"><a class="header-anchor" href="#redis-backed-chat-memory"><span>Redis-Backed Chat Memory</span></a></h4><ul><li>位置：<code>Memory - Redis-Backed Chat Memory</code></li><li>功能：提供其他需要 memory 的 chat 模組持續記憶功能，為永久性的，即便刪除 chat history 也還是儲存在資料庫中</li></ul><h3 id="agents" tabindex="-1"><a class="header-anchor" href="#agents"><span>Agents</span></a></h3><h4 id="conversational-agent" tabindex="-1"><a class="header-anchor" href="#conversational-agent"><span>Conversational Agent</span></a></h4><ul><li>位置：<code>Agents - Conversational Agent</code></li><li>功能：提供 Chat Model 根據內容執行 Tools 的 agent，能夠串接以下模組 <ul><li>Allowed Tools: 串連 agent 可使用的所有工具模組，比如 Calculator, Google Custom Search</li><li>Chat Model</li><li>Memory</li><li>Input Moderation</li></ul></li></ul><blockquote><p>搭配 Retriever 時，會發生 error <code>Received tool input did not match expected schema</code>，此時請改為使用 <code>Conversational Retrieval QA Chain</code></p></blockquote><h3 id="tools" tabindex="-1"><a class="header-anchor" href="#tools"><span>Tools</span></a></h3><h4 id="calculator" tabindex="-1"><a class="header-anchor" href="#calculator"><span>Calculator</span></a></h4><ul><li>位置：<code>Tools - Calculator</code></li><li>功能：提供 agent 關於算數的精準計算能力</li></ul><h4 id="google-custom-search" tabindex="-1"><a class="header-anchor" href="#google-custom-search"><span>Google Custom Search</span></a></h4><ul><li>位置：<code>Tools - Google Custom Search</code></li><li>功能：提供 agent 具備使用 Google custom search 的 Internet access 能力</li></ul><h4 id="chain-tool" tabindex="-1"><a class="header-anchor" href="#chain-tool"><span>Chain Tool</span></a></h4><ul><li>位置：<code>Tools - Chain Tool</code></li><li>功能：提供 agent 根據 chain description 的提示使用此工具，可串連另一個 LLM Chain 處理特定的用戶輸入 <ul><li>Return Direct: 如果希望 chain tool 將內容直接回傳，而非經過 agent 整理後才返回可勾選此功能</li></ul></li></ul><h3 id="vector-stores" tabindex="-1"><a class="header-anchor" href="#vector-stores"><span>Vector Stores</span></a></h3><h4 id="in-memory-vector-store" tabindex="-1"><a class="header-anchor" href="#in-memory-vector-store"><span>In-Memory Vector Store</span></a></h4><ul><li>位置：<code>Vector Stores - In-Memory Vector Store</code></li><li>功能：提供 Retrieval Chain 向量儲存檢索能力，可串連以下工具 <ul><li>Document(Loader): 提供向量檢索的 Document 來源，比如 PDF Loader, API Loader</li><li>Embeddings: 提供向量檢索使用的 Embedding Model，比如 Ollama 的 <code>nomic-embed-text</code> model</li></ul></li></ul><h3 id="embeddings" tabindex="-1"><a class="header-anchor" href="#embeddings"><span>Embeddings</span></a></h3><h4 id="ollama-embeddings" tabindex="-1"><a class="header-anchor" href="#ollama-embeddings"><span>Ollama Embeddings</span></a></h4><ul><li>位置：<code>Embeddings - Ollama Embeddings</code></li><li>功能：提供 Vector Store 檢索能力的核心 model</li></ul><blockquote><p>記得打開 <code>Use MMap</code> 選項，避免 <a href="https://github.com/FlowiseAI/Flowise/issues/1940" target="_blank" rel="noopener noreferrer">Ollama Embeddings 500 Error</a></p></blockquote><h3 id="document-loaders" tabindex="-1"><a class="header-anchor" href="#document-loaders"><span>Document Loaders</span></a></h3><h4 id="api-loader" tabindex="-1"><a class="header-anchor" href="#api-loader"><span>API Loader</span></a></h4><ul><li>位置：<code>Document Loaders - API Loader</code></li><li>功能：提供 API 請求獲取 Document 能力，需串連 Text Splitter 使用 <ul><li>Text Splitter: 協助將 Document 文件內容分割的工具，比如 <code>HtmlToMarkdown Text Splitter</code></li></ul></li></ul><h4 id="pdf-file" tabindex="-1"><a class="header-anchor" href="#pdf-file"><span>Pdf File</span></a></h4><ul><li>位置：<code>Document Loaders - Pdf File</code></li><li>功能：提供上傳 Pdf 文件獲取 Document，需串連 Text Splitter 使用 <ul><li>Text Splitter: 比如 <code>Recursive Character Text Splitter</code></li></ul></li></ul><h3 id="text-splitter" tabindex="-1"><a class="header-anchor" href="#text-splitter"><span>Text Splitter</span></a></h3><h4 id="htmltomarkdown-text-splitter" tabindex="-1"><a class="header-anchor" href="#htmltomarkdown-text-splitter"><span>HtmlToMarkdown Text Splitter</span></a></h4><ul><li>位置：<code>Text Splitter - HtmlToMarkdown Text Splitter</code></li><li>功能：協助將 Document HTML 格式轉為 Markdown 方便檢索查詢</li></ul><h4 id="recursive-character-text-splitter" tabindex="-1"><a class="header-anchor" href="#recursive-character-text-splitter"><span>Recursive Character Text Splitter</span></a></h4><ul><li>位置：<code>Text Splitter - Recursive Character Text Splitter</code></li><li>功能：協助處理 <code>\\n</code> 分割文件，當重複出現時遞回處理</li></ul><h3 id="output-parsers" tabindex="-1"><a class="header-anchor" href="#output-parsers"><span>Output Parsers</span></a></h3><h4 id="structured-output-parser" tabindex="-1"><a class="header-anchor" href="#structured-output-parser"><span>Structured Output Parser</span></a></h4><ul><li>位置：<code>Output Parsers - Structured Output Parser</code></li><li>功能：定義結構化 Output 格式</li></ul><h3 id="moderation" tabindex="-1"><a class="header-anchor" href="#moderation"><span>Moderation</span></a></h3><h4 id="simple-prompt-moderation" tabindex="-1"><a class="header-anchor" href="#simple-prompt-moderation"><span>Simple Prompt Moderation</span></a></h4><ul><li>位置：<code>Moderation - Simple Prompt Moderation</code></li><li>功能：定義 DenyList，觸發檢查內容機制，客製化錯誤訊息</li></ul><h3 id="utilities" tabindex="-1"><a class="header-anchor" href="#utilities"><span>Utilities</span></a></h3><h4 id="ifelse-function" tabindex="-1"><a class="header-anchor" href="#ifelse-function"><span>IfElse Function</span></a></h4><ul><li>位置：<code>Utilities - IfElse Function</code></li><li>功能：根據 LLM Chain 輸出的值傳入的 input 值，輸出 boolean true/false 並觸發相對後續 Chains，連結到 Prompt 上</li></ul>`,62)),i(l,{hashtags:"javascript,flowise-ai"})])}const u=n(c,[["render",d]]),m=JSON.parse('{"path":"/articles/memo/flowise-intro.html","title":"FlowiseAI 使用介紹筆記","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1722867315000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":2,"url":"https://github.com/johnnywang"}],"changelog":[{"hash":"71d776bad498d399621385f649bf71751bc86ff7","time":1722867315000,"email":"johnnywang@test.com","author":"johnnywang","message":"UPD"},{"hash":"8e852b21e09180f1f38947f650f156ed6227b08b","time":1721315067000,"email":"johnnywang@test.com","author":"johnnywang","message":"UPD"}]},"filePathRelative":"articles/memo/flowise-intro.md"}');export{u as comp,m as data};
