import{_ as c,r as e,o as l,c as i,a,d as n,e as s,f as o}from"./app.7cfa1fb3.js";const u={},r=n("h1",{id:"\u624B\u5BEB\u4E00\u500B\u53EF\u4E2D\u65B7\u7684-delay-promise",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u624B\u5BEB\u4E00\u500B\u53EF\u4E2D\u65B7\u7684-delay-promise","aria-hidden":"true"},"#"),s(" \u624B\u5BEB\u4E00\u500B\u53EF\u4E2D\u65B7\u7684 delay promise")],-1),k=n("h6",{id:"tags-js-delay-promise-abortcontroller",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tags-js-delay-promise-abortcontroller","aria-hidden":"true"},"#"),s(" tags: "),n("code",null,"JS"),s(),n("code",null,"Delay"),s(),n("code",null,"Promise"),s(),n("code",null,"AbortController")],-1),d=o(`<p>Hi~\u5927\u5BB6\u597D\uFF0C\u6211\u662F Johnny\uFF0C\u6700\u8FD1\u53C8\u5728\u7DB2\u8DEF\u4E0A\u9592\u6643\u6587\u7AE0\u6642\uFF0C\u5076\u7136\u770B\u5230\u4E00\u500B\u5728\u8B1B\u89E3 delay \u65B9\u6CD5\u7684\u6587\u7AE0\uFF0C\u5E36\u8457\u597D\u5947\u770B\u5B8C\u5F8C\uFF0C\u6C7A\u5B9A\u4E5F\u81EA\u5DF1\u4F86\u5BE6\u969B\u52D5\u624B\u5BEB\u770B\u770B\uFF0C\u7576\u7136\u6211\u7684\u7248\u672C\u4E00\u5B9A\u4E5F\u6709\u4E9B\u758F\u6F0F\uFF0C\u9084\u8ACB\u5404\u4F4D\u5927\u4F6C\u898B\u8AD2\uFF0C\u5927\u5BB6\u770B\u5B8C\u5F8C\u4E5F\u53EF\u4EE5\u53BB\u770B\u770B\u7576\u6642\u6211\u5B78\u7FD2\u7684\u7BC4\u672C\u5594\uFF5E\uFF08\u653E\u5728\u6587\u7AE0\u6700\u5F8C\uFF09</p><p>\u90A3\u5C31\u958B\u59CB\u5427</p><h2 id="\u6211\u539F\u672C\u7684-delay-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6211\u539F\u672C\u7684-delay-\u65B9\u6CD5" aria-hidden="true">#</a> \u6211\u539F\u672C\u7684 delay \u65B9\u6CD5</h2><p>\u9996\u5148\u6211\u4F86\u9084\u539F\u4E0B\u6211\u4EE5\u524D\u5E38\u7528\u7684 delay \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">delay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u9019\u662F\u4E00\u884C\u5F0F\u5BEB\u6CD5\uFF0C\u7528\u8D77\u4F86\u6703\u50CF\u4E0B\u9762\u9019\u6A23</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u9019\u7A2E\u5BEB\u6CD5\u6C92\u8FA6\u6CD5\u6A21\u64EC\u8FD4\u56DE\u503C\u4EE5\u53CA\u52D5\u614B\u7684 delay \u6642\u9593\uFF0C\u53EA\u80FD\u4F5C\u70BA\u55AE\u4E00\u5EF6\u9072\u7684\u5C0F\u5DE5\u5177\uFF0C\u6211\u5011\u8981\u4F86\u8B93\u4ED6\u66F4\u52A0\u5F37\u58EF\u8207\u5F37\u5927</p><h2 id="\u6539\u5BEB\u8853\u4E4B1-\u6307\u5B9A\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u6539\u5BEB\u8853\u4E4B1-\u6307\u5B9A\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u6539\u5BEB\u8853\u4E4B1\uFF1A\u6307\u5B9A\u8FD4\u56DE\u503C</h2><p>\u70BA\u4E86\u8B93\u7A0B\u5F0F\u78BC\u597D\u8B80\u4E00\u4E9B\uFF0C\u6211\u5011\u628A\u5B83\u6539\u5BEB\u6210\u4E0B\u9762\u9019\u6A23</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">delay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms<span class="token punctuation">,</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6539\u5BEB\u5F8C\u6211\u5011\u53EF\u4EE5\u50CF\u4E0B\u9762\u9019\u6A23\u6307\u5B9A\u56DE\u50B3\u7684\u503C <code>value</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u9019\u500B\u7BC4\u4F8B\u88E1\u770B\u8D77\u4F86\u6C92\u5565\u5FC5\u8981XD\uFF0C\u4F46\u5982\u679C\u662F\u5728\u5176\u4ED6\u5834\u666F\u4E0B\uFF0C\u6211\u5011\u53EF\u4EE5\u53E6\u5916\u5C01\u88DD\u6210\u597D\u7528\u7684\u65B9\u5F0F\uFF0C\u6BD4\u5982\u8AAA\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mockResponse</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delay</span><span class="token punctuation">(</span>ms<span class="token punctuation">,</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> getInfo <span class="token operator">=</span> <span class="token function">mockResponse</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Johnny&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6539\u5BEB\u8853\u4E4B2-\u81EA\u5B9A\u7FA9\u6210\u529F\u6216\u5931\u6557" tabindex="-1"><a class="header-anchor" href="#\u6539\u5BEB\u8853\u4E4B2-\u81EA\u5B9A\u7FA9\u6210\u529F\u6216\u5931\u6557" aria-hidden="true">#</a> \u6539\u5BEB\u8853\u4E4B2\uFF1A\u81EA\u5B9A\u7FA9\u6210\u529F\u6216\u5931\u6557</h2><p>\u4F46\u6BCF\u6B21\u57F7\u884C\u90FD\u6210\u529F\u7E3D\u662F\u602A\u602A\u7684\uFF0C\u7E3D\u6703\u6709\u90A3\u9EBC\u5E7E\u6B21 promise \u6703\u5931\u6557\u5427\uFF1F\u90A3\u6211\u5011\u5982\u4F55\u6E2C\u8A66\u5931\u6557\u7684\u60C5\u6CC1\u5462\uFF1F\u53EF\u4EE5\u6539\u5BEB\u5982\u4E0B\uFF0C\u5F9E\u5916\u90E8\u50B3\u5165\u6210\u529F\u6216\u5931\u6557\u7684\u689D\u4EF6 <code>willReject</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">delay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms<span class="token punctuation">,</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> willReject <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>willReject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7528\u8D77\u4F86\u50CF\u9019\u6A23</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">willReject</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// never go here</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6539\u5BEB\u8853\u4E4B3-\u52D5\u614B\u7BC4\u570D\u5EF6\u9072\u6642\u9593" tabindex="-1"><a class="header-anchor" href="#\u6539\u5BEB\u8853\u4E4B3-\u52D5\u614B\u7BC4\u570D\u5EF6\u9072\u6642\u9593" aria-hidden="true">#</a> \u6539\u5BEB\u8853\u4E4B3\uFF1A\u52D5\u614B\u7BC4\u570D\u5EF6\u9072\u6642\u9593</h2><p>\u4E0A\u9762\u7684\u6BCF\u6B21\u8ACB\u6C42\u5EF6\u9072\u6642\u9593\u90FD\u662F\u56FA\u5B9A\u7684\uFF0C\u5982\u679C\u6211\u5011\u60F3\u8981\u5C0D\u4E0D\u540C\u8FD4\u56DE\u6642\u9593\u53BB\u505A\u6A21\u64EC\uFF0C\u5C31\u5FC5\u9808\u518D\u5EA6\u6539\u5BEB\uFF0C\u4F46\u6211\u5011\u53C8\u5FC5\u9808\u7DAD\u6301\u539F\u4F86\u51FD\u6578\u7684\u529F\u80FD\u53EF\u4EE5\u6B63\u5E38\uFF0C\u5BE6\u73FE\u4F7F\u7528\u5982\u4E0B\u65B9\u5F0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">randomInteger</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">createDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">delay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms<span class="token punctuation">,</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> willReject <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>willReject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    delay<span class="token punctuation">.</span><span class="token function-variable function">range</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token function">randomInteger</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>
    <span class="token keyword">return</span> delay<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6700\u7D42\u7684 delay</span>
<span class="token keyword">const</span> delay <span class="token operator">=</span> <span class="token function">createDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u628A\u539F\u51FD\u6578\u518D\u5305\u88F9\u6210\u4E00\u500B\u9AD8\u968E\u51FD\u6578 createDelay \u4F7F\u5176\u8FD4\u56DE\u539F delay \u51FD\u6578\uFF0C\u63A5\u8457\u5C31\u53EF\u4EE5\u628A\u96A8\u6A5F\u5EF6\u9072\u6642\u9593\u7684\u908F\u8F2F\u52A0\u5728\u8A72\u9AD8\u968E\u51FD\u6578\u7576\u4E2D\uFF0C\u6700\u7D42\u4F7F\u7528\u8D77\u4F86\u6703\u50CF\u9019\u6A23</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> delay<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6539\u5BEB\u8853\u4E4B4-\u63D0\u524D\u6E05\u9664\u5EF6\u9072" tabindex="-1"><a class="header-anchor" href="#\u6539\u5BEB\u8853\u4E4B4-\u63D0\u524D\u6E05\u9664\u5EF6\u9072" aria-hidden="true">#</a> \u6539\u5BEB\u8853\u4E4B4\uFF1A\u63D0\u524D\u6E05\u9664\u5EF6\u9072</h2><p>\u518D\u4F86\u9700\u8981\u8655\u7406\u7684\u662F\uFF0C\u6211\u5011\u5982\u4F55\u5728\u5EF6\u9072\u5B8C\u6210\u524D\u63D0\u524D\u6E05\u9664\u5EF6\u9072\u4F86\u57F7\u884C\u5462\uFF1F\u53EF\u4EE5\u5F88\u5FEB\u5730\u60F3\u5230\u4F7F\u7528 setTimeout \u4F86\u8655\u88E1\uFF0C\u6539\u5BEB\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">delay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms<span class="token punctuation">,</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> willReject <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token keyword">let</span> customResolve <span class="token operator">=</span> <span class="token keyword">null</span>

        <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">customResolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>willReject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            id <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>customResolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        promise<span class="token punctuation">.</span><span class="token function-variable function">clear</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
            id <span class="token operator">=</span> <span class="token keyword">null</span>
            <span class="token function">customResolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> promise
    <span class="token punctuation">}</span>

    delay<span class="token punctuation">.</span><span class="token function-variable function">range</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token function">randomInteger</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>
    <span class="token keyword">return</span> delay
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u628A promise \u5BE6\u4F8B\u53D6\u51FA\uFF0C\u4E26\u5728\u4ED6\u4E0A\u9762\u6DFB\u52A0\u4E2D\u65B7\u7684\u65B9\u6CD5<code>clear</code>\uFF0C\u9019\u6A23\u6BCF\u6B21\u547C\u53EB delay \u7522\u751F\u7684 promise <code>clear</code>\u90FD\u6703\u662F\u500B\u5225\u552F\u4E00\u7684\uFF0C\u6539\u5B8C\u4E4B\u5F8C\u53EF\u4EE5\u50CF\u4E0B\u9762\u9019\u6A23\u4F7F\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> delay <span class="token operator">=</span> <span class="token function">createDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>

    <span class="token comment">// this will trigger after only in 300ms</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> p<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6539\u5BEB\u8853\u4E4B5-\u53D6\u6D88\u57F7\u884C" tabindex="-1"><a class="header-anchor" href="#\u6539\u5BEB\u8853\u4E4B5-\u53D6\u6D88\u57F7\u884C" aria-hidden="true">#</a> \u6539\u5BEB\u8853\u4E4B5\uFF1A\u53D6\u6D88\u57F7\u884C</h2>`,31),v=n("code",null,"AbortController",-1),m={href:"https://caniuse.com/?search=AbortController",target:"_blank",rel:"noopener noreferrer"},b=o(`<p><img src="https://caniuse.bitsofco.de/image/AbortController.jpg" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">createAbortError</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> error <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Delay aborted&#39;</span><span class="token punctuation">)</span>
    error<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;AbortError&#39;</span>
    <span class="token keyword">return</span> error
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">delay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms<span class="token punctuation">,</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> signal<span class="token punctuation">,</span> willReject <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// if already abort</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>signal <span class="token operator">&amp;&amp;</span> signal<span class="token punctuation">.</span>aborted<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">createAbortError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token keyword">let</span> customResolve <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token keyword">let</span> customReject <span class="token operator">=</span> <span class="token keyword">null</span>

        <span class="token keyword">const</span> <span class="token function-variable function">signalListener</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
            <span class="token function">customReject</span><span class="token punctuation">(</span><span class="token function">createAbortError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> <span class="token function-variable function">cleanup</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>signal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                signal<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> signalListener<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>signal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            signal<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> signalListener<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">once</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">customResolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>willReject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            customReject <span class="token operator">=</span> reject
            id <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>customResolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        promise<span class="token punctuation">.</span><span class="token function-variable function">clear</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
            id <span class="token operator">=</span> <span class="token keyword">null</span>
            <span class="token function">customResolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> promise
    <span class="token punctuation">}</span>

    delay<span class="token punctuation">.</span><span class="token function-variable function">range</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token function">randomInteger</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>
    <span class="token keyword">return</span> delay
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u5011\u5F9E\u5916\u90E8\u50B3\u5165 <code>signal</code> \u5F8C\uFF0C\u76E3\u807D\u4ED6\u7684 <code>abort</code>\u4E8B\u4EF6\uFF0C\u7576\u89F8\u767C\u6642\u6211\u5011\u628A\u5012\u6578\u95DC\u9589\uFF0C\u4E26\u8FD4\u56DE\u932F\u8AA4\u8A0A\u606F\uFF0C\u4F7F\u7528\u6642\u6703\u50CF\u4E0B\u9762\u9019\u6A23</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> abortController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> delay <span class="token operator">=</span> <span class="token function">createDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">signal</span><span class="token operator">:</span> abortController<span class="token punctuation">.</span>signal<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// error triggered in 1000ms here</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> abortController<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>

    <span class="token comment">// never goes here</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> p<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64\u7D50\u675F\u62C9\uFF5E\u7E3D\u7D50\u4E00\u4E0B\u5B78\u5230\u7684\u4E00\u4E9B\u89C0\u5FF5\u5427</p><h2 id="\u7D50\u8AD6" tabindex="-1"><a class="header-anchor" href="#\u7D50\u8AD6" aria-hidden="true">#</a> \u7D50\u8AD6</h2><ol><li><p>\u4F7F\u7528\u9AD8\u968E\u51FD\u6578\u5C01\u88DD\u908F\u8F2F\u5728\u73FE\u6709\u51FD\u6578\u4E0A\u9032\u884C\u529F\u80FD\u52A0\u5F37</p></li><li><p><code>AbortController</code>\u5B78\u7FD2\u8207\u4F7F\u7528</p></li></ol><p>\u539F\u7248\u7684\u5B78\u7FD2\u6A21\u677F\u5728\u4E0B\u65B9\uFF0C\u6B61\u8FCE\u5927\u5BB6\u4E5F\u53BB\u770B\u770B\u5594\uFF0C\u90A3\u4ECA\u5929\u5C31\u5E36\u5927\u5BB6\u770B\u5230\u9019\u908A\uFF0C\u611F\u8B1D\u89C0\u8CDE\uFF5E\u4E0B\u4E00\u7BC7\u5206\u4EAB\u898B\u645F=V=</p>`,8),y=n("h2",{id:"\u53C3\u8003",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C3\u8003","aria-hidden":"true"},"#"),s(" \u53C3\u8003")],-1),g={href:"https://juejin.cn/post/7042461373904715812",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/sindresorhus/delay/blob/main/index.js",target:"_blank",rel:"noopener noreferrer"};function w(h,j){const t=e("SocialBlock"),p=e("ExternalLinkIcon");return l(),i("div",null,[r,k,a(t,{hashtags:"javascript,delay,promise,abort-controller"}),d,n("p",null,[s("\u525B\u525B\u4E0A\u9762\u7684\u662F\u63D0\u524D\u57F7\u884C\uFF0C\u4E5F\u5C31\u662F\u5728\u5EF6\u9072\u6642\u9593\u4E2D\u63D0\u524D\u5B8C\u6210\uFF0C\u73FE\u5728\u6211\u5011\u8981\u505A\u7684\u662F\uFF0C\u63D0\u524D\u53D6\u6D88\u57F7\u884C\uFF0C\u4E5F\u5C31\u662F\u7D42\u6B62\u57F7\u884C\u7684\u610F\u601D\uFF0C\u53C3\u8003\u5927\u795E\u5BEB\u6CD5\u4F7F\u7528 "),v,s("\uFF0C\u9019\u500B\u662F\u8F03\u70BA\u65B0\u7684\u5BEB\u6CD5\uFF0C\u5DF2\u77E5\u5728 IE \u5B8C\u5168\u4E0D\u652F\u63F4\uFF0Cchrome \u5247\u662F\u5F9E 66 version \u5F8C\u652F\u63F4\uFF0C\u8A73\u60C5\u53EF\u4EE5\u53C3\u8003 "),n("a",m,[s("Can I Use"),a(p)])]),b,a(t,{hashtags:"javascript,delay,promise,abort-controller"}),y,n("ul",null,[n("li",null,[n("p",null,[n("a",g,[s("\u8BF7\u624B\u5199\u4E00\u4E2A\u5E26\u53D6\u6D88\u529F\u80FD\u7684\u5EF6\u8FDF\u51FD\u6570"),a(p)])])]),n("li",null,[n("p",null,[n("a",f,[s("delay/index.js at main \xB7 sindresorhus/delay \xB7 GitHub"),a(p)])])])])])}const _=c(u,[["render",w],["__file","delay-promise.html.vue"]]);export{_ as default};
