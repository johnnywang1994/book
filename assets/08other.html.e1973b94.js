import{_ as i,r as t,o,c as p,d as a,e,a as l,f as s}from"./app.1cb52065.js";const c={},r=s(`<h1 id="\u5176\u4ED6\u5E38\u7528\u6280\u5DE7\u3001\u6307\u4EE4" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u5E38\u7528\u6280\u5DE7\u3001\u6307\u4EE4" aria-hidden="true">#</a> \u5176\u4ED6\u5E38\u7528\u6280\u5DE7\u3001\u6307\u4EE4</h1><p>\u6B64\u70BA\u6301\u7E8C\u66F4\u65B0\u7684\u5B78\u7FD2\u7B46\u8A18\u7D00\u9304\uFF0C\u95DC\u65BC\u57FA\u790E\u7684\u90E8\u5206\u8ACB\u524D\u5F80\u524D\u9762\u7AE0\u7BC0\u95B1\u8B80</p><h2 id="\u5B57\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u4E32" aria-hidden="true">#</a> \u5B57\u4E32</h2><h3 id="\u96A8\u6A5F\u5B57\u4E32" tabindex="-1"><a class="header-anchor" href="#\u96A8\u6A5F\u5B57\u4E32" aria-hidden="true">#</a> \u96A8\u6A5F\u5B57\u4E32</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 8 \u4F4D\u5B57\u4E32</span>
<span class="token builtin class-name">echo</span> <span class="token environment constant">$RANDOM</span> <span class="token operator">|</span> md5sum <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">1</span>-8
<span class="token comment"># or for MacOS</span>
<span class="token builtin class-name">echo</span> <span class="token environment constant">$RANDOM</span> <span class="token operator">|</span> md5 <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">1</span>-8

<span class="token comment"># 8 \u4F4D\u6578\u5B57</span>
<span class="token builtin class-name">echo</span> <span class="token environment constant">$RANDOM</span> <span class="token operator">|</span> <span class="token function">cksum</span> <span class="token operator">|</span><span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">1</span>-8
<span class="token comment"># 0-9</span>
<span class="token builtin class-name">echo</span> <span class="token assign-left variable">random</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>RANDOM <span class="token operator">%</span> <span class="token number">10</span><span class="token variable">))</span></span>

<span class="token comment"># uuid</span>
uuidgen
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u58D3\u7E2E-json-\u6A94" tabindex="-1"><a class="header-anchor" href="#\u58D3\u7E2E-json-\u6A94" aria-hidden="true">#</a> \u58D3\u7E2E json \u6A94</h3><p>\u5176\u5BE6\u4E0D\u7B97\u662F bash\uFF0C\u900F\u904E\u4E00\u884C python \u9054\u6210</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>python <span class="token parameter variable">-c</span> <span class="token string">&#39;import json, sys;json.dump(json.load(sys.stdin), sys.stdout)&#39;</span> <span class="token operator">&lt;</span> index.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u65E5\u671F" tabindex="-1"><a class="header-anchor" href="#\u65E5\u671F" aria-hidden="true">#</a> \u65E5\u671F</h2><h3 id="\u7576\u524D\u6642\u9593" tabindex="-1"><a class="header-anchor" href="#\u7576\u524D\u6642\u9593" aria-hidden="true">#</a> \u7576\u524D\u6642\u9593</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
<span class="token comment"># 2022-12-06_11:50:17</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8B8A\u6578" tabindex="-1"><a class="header-anchor" href="#\u8B8A\u6578" aria-hidden="true">#</a> \u8B8A\u6578</h2><h3 id="\u6AA2\u67E5\u8B8A\u6578\u503C\u70BA\u7A7A" tabindex="-1"><a class="header-anchor" href="#\u6AA2\u67E5\u8B8A\u6578\u503C\u70BA\u7A7A" aria-hidden="true">#</a> \u6AA2\u67E5\u8B8A\u6578\u503C\u70BA\u7A7A</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">var</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$var</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;empty&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u904B\u7B97" tabindex="-1"><a class="header-anchor" href="#\u904B\u7B97" aria-hidden="true">#</a> \u904B\u7B97</h2>`,15),d={href:"https://blog.gtwang.org/linux/linux-bc-command-tutorial-examples/",target:"_blank",rel:"noopener noreferrer"},u=s(`<h3 id="\u53D6\u5F97\u5C0F\u6578\u904B\u7B97" tabindex="-1"><a class="header-anchor" href="#\u53D6\u5F97\u5C0F\u6578\u904B\u7B97" aria-hidden="true">#</a> \u53D6\u5F97\u5C0F\u6578\u904B\u7B97</h3><p>hero \u5B57\u7B26\u4E32</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">bc</span> <span class="token parameter variable">-l</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;100/3&quot;</span>
<span class="token comment"># 33.33333333333333333333</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>pipeline \u50B3\u905E</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;100/3&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span> <span class="token parameter variable">-l</span>
<span class="token comment"># 33.33333333333333333333</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u67E5\u8A62" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8A62" aria-hidden="true">#</a> \u67E5\u8A62</h2><h3 id="\u67E5\u8A62\u6B77\u53F2" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8A62\u6B77\u53F2" aria-hidden="true">#</a> \u67E5\u8A62\u6B77\u53F2</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">history</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;echo&quot;</span> <span class="token operator">|</span> <span class="token function">less</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u67E5\u8A62-macbook-ip" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8A62-macbook-ip" aria-hidden="true">#</a> \u67E5\u8A62 macbook ip</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ifconfig</span> en0 <span class="token operator">|</span> <span class="token function">grep</span> inet <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u6A94\u6848" tabindex="-1"><a class="header-anchor" href="#\u6A94\u6848" aria-hidden="true">#</a> \u6A94\u6848</h2><h3 id="\u6A94\u6848\u5B58\u5728\u4E14\u5927\u5C0F\u5927\u65BC-0-\u5099\u4EFD" tabindex="-1"><a class="header-anchor" href="#\u6A94\u6848\u5B58\u5728\u4E14\u5927\u5C0F\u5927\u65BC-0-\u5099\u4EFD" aria-hidden="true">#</a> \u6A94\u6848\u5B58\u5728\u4E14\u5927\u5C0F\u5927\u65BC 0 \u5099\u4EFD</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
<span class="token assign-left variable">USER_FILE</span><span class="token operator">=</span>user.txt
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-s</span> <span class="token variable">$USER_FILE</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token function">mv</span> <span class="token variable">$USER_FILE</span> <span class="token variable">\${USER_FILE}</span>-<span class="token variable">\${DATE}</span>.bak
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$USER_FILE</span> exist, rename to <span class="token variable">\${USER_FILE}</span>-<span class="token variable">\${DATE}</span>.bak&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6AA2\u67E5\u6A94\u6848\u662F\u5426\u70BA\u8EDF\u9023\u7D50-symbolic-link" tabindex="-1"><a class="header-anchor" href="#\u6AA2\u67E5\u6A94\u6848\u662F\u5426\u70BA\u8EDF\u9023\u7D50-symbolic-link" aria-hidden="true">#</a> \u6AA2\u67E5\u6A94\u6848\u662F\u5426\u70BA\u8EDF\u9023\u7D50\uFF08symbolic link</h3><p>\u6307\u4EE4 <code>ls -l</code> \u8FD4\u56DE\u7D50\u679C\u4E2D\u6A94\u6848\u958B\u982D\u70BA <code>l</code> \u7684\u5C31\u662F\u8EDF\u9023\u7D50</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-l</span> ./java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u67E5\u8A62\u7576\u524D\u8CC7\u6599\u593E\u5167\u662F\u8EDF\u9023\u7D50\u7684\u6A94\u6848" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8A62\u7576\u524D\u8CC7\u6599\u593E\u5167\u662F\u8EDF\u9023\u7D50\u7684\u6A94\u6848" aria-hidden="true">#</a> \u67E5\u8A62\u7576\u524D\u8CC7\u6599\u593E\u5167\u662F\u8EDF\u9023\u7D50\u7684\u6A94\u6848</h3><p>\u6703\u905E\u8FF4\u5F80\u4E0B\u5C64\u5C0B\u627E</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> l <span class="token parameter variable">-ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u53EA\u5C0B\u627E\u7576\u524D\u4F4D\u7F6E\u4E00\u5C64</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-maxdepth</span> <span class="token number">1</span> <span class="token parameter variable">-type</span> l <span class="token parameter variable">-ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u522A\u9664\u8EDF\u9023\u7D50" tabindex="-1"><a class="header-anchor" href="#\u522A\u9664\u8EDF\u9023\u7D50" aria-hidden="true">#</a> \u522A\u9664\u8EDF\u9023\u7D50</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>unlink symbolic_link
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u8F38\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F38\u51FA" aria-hidden="true">#</a> \u8F38\u51FA</h2><h3 id="dev-null-\u7121\u5E95\u6D1E" tabindex="-1"><a class="header-anchor" href="#dev-null-\u7121\u5E95\u6D1E" aria-hidden="true">#</a> &amp;&gt;/dev/null \u7121\u5E95\u6D1E</h3>`,25),v={href:"https://www.796t.com/content/1550134446.html",target:"_blank",rel:"noopener noreferrer"},k=s(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">USER</span> <span class="token keyword">in</span> user<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">if</span> <span class="token function">id</span> <span class="token environment constant">$USER</span> <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span> User already exists!&quot;</span>
  <span class="token keyword">else</span>
    <span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$RANDOM</span> <span class="token operator">|</span> md5 <span class="token operator">|</span><span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">1</span>-8<span class="token variable">)</span></span>
    <span class="token builtin class-name">echo</span> <span class="token variable">$PASS</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8F38\u51FA-ls-\u70BA-json-\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8F38\u51FA-ls-\u70BA-json-\u683C\u5F0F" aria-hidden="true">#</a> \u8F38\u51FA ls \u70BA json \u683C\u5F0F</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $0&quot;,&quot;}&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print &quot;[&quot;$0&quot;]&quot;}&#39;</span> <span class="token operator">&gt;</span> index
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u51FD\u6578" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6578" aria-hidden="true">#</a> \u51FD\u6578</h2><h3 id="\u52A0\u7E3D" tabindex="-1"><a class="header-anchor" href="#\u52A0\u7E3D" aria-hidden="true">#</a> \u52A0\u7E3D</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># sumlist 1 2 3 =&gt; 6</span>
<span class="token function-name function">sumlist</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">0</span>
  <span class="token keyword">for</span> <span class="token for-or-select variable">num</span> <span class="token keyword">in</span> <span class="token variable">$@</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token variable"><span class="token punctuation">((</span> count<span class="token operator">+=</span>$num <span class="token punctuation">))</span></span>
  <span class="token keyword">done</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$count</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D6\u5C0F\u6578\u4F4D" tabindex="-1"><a class="header-anchor" href="#\u53D6\u5C0F\u6578\u4F4D" aria-hidden="true">#</a> \u53D6\u5C0F\u6578\u4F4D</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># parseFloat 10/2 =&gt; 5.00</span>
<span class="token comment"># parseFloat 10/2 0 =&gt; 5</span>
<span class="token comment"># parseFloat 10/3 3 =&gt; 3.333</span>
<span class="token function-name function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">user_float</span><span class="token operator">=</span><span class="token variable">$2</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">float</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${user_float<span class="token operator">:-</span>2}</span>&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">&quot;scale=<span class="token variable">$float</span>;<span class="token variable">$1</span>&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function b(h,m){const n=t("ExternalLinkIcon");return o(),p("div",null,[r,a("ul",null,[a("li",null,[a("a",d,[e("\u8A08\u7B97\u6A5F bc \u6307\u4EE4"),l(n)])])]),u,a("ul",null,[a("li",null,[a("a",v,[e("\u53C3\u8003"),l(n)])])]),k])}const f=i(c,[["render",b],["__file","08other.html.vue"]]);export{f as default};
