import{_ as a,c as n,d as s,o as i}from"./app-DSxi0WCQ.js";const t={};function r(c,e){return i(),n("div",null,e[0]||(e[0]=[s(`<h1 id="git-基礎復原指令-restore" tabindex="-1"><a class="header-anchor" href="#git-基礎復原指令-restore"><span>Git 基礎復原指令 - restore</span></a></h1><h2 id="git-commit-amend" tabindex="-1"><a class="header-anchor" href="#git-commit-amend"><span>git commit --amend</span></a></h2><p>此操作通常發生在當你太早提交（commit），接著才發現忘了加入某些檔案，或者寫錯了提交訊息；</p><p>如果你想要重新提交，你可以在提交命令上使用 --amend 選項：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> commit <span class="token parameter variable">--amend</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>這個命令會再次把預存區（staging area）拿來提交，如果自從上次提交以來你沒有做過任何檔案修改（例如：在上一次提交後，馬上執行此命</p><p>令），那麼整個快照看起來會與上次提交的一模一樣，唯一有可能更動的是提交訊息。</p><p>同樣用來提交訊息的文字編輯器會先啟動，並且已填好上一次提交的訊息內容； 你可以像往常一樣編輯這些訊息，接著它會覆蓋掉上一次的提交。</p><p>如果你提交後才意識到你想要把某些忘記預存（stage）的修改也一併加入到上一個提交中，你可以這樣做：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&#39;initial commit&#39;</span></span>
<span class="line">$ <span class="token function">git</span> <span class="token function">add</span> <span class="token punctuation">[</span>filename<span class="token punctuation">]</span></span>
<span class="line">$ <span class="token function">git</span> commit <span class="token parameter variable">--amend</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最終只會得到一個提交——第二次的提交取代了第一次提交的結果。</p><h2 id="git-restore-filename" tabindex="-1"><a class="header-anchor" href="#git-restore-filename"><span>git restore [filename]</span></a></h2><p>此操作將已修改檔案的修改內容完全重置，注意！是未預存的已修改檔案，謹慎使用！</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">git</span> restore index.html</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--staged</code>：此後綴加入後針對已預存檔案，移出預存區。</li></ul><h2 id="git-reset-commit-hash" tabindex="-1"><a class="header-anchor" href="#git-reset-commit-hash"><span>git reset [commit Hash]</span></a></h2><p>回溯到指定的提交位置，但在該提交後所做的所有變更，仍然會存在，只是會變為 unstaged 狀態。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> reset <span class="token number">6951639</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此時若使用 <code>git checkout</code> 前往其他分支，因為是 unstaged 未追蹤狀態，Git 會允許切換分支，因此就能把所有回溯的變更，</p><p>一次攜帶到另一個分支中。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> checkout master</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,21)]))}const o=a(t,[["render",r]]),d=JSON.parse('{"path":"/articles/git/recover.html","title":"Git 基礎復原指令 - restore","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1648521821000,"contributors":[{"name":"Johnny Wang","username":"","email":"wangj@garena.com","commits":1},{"name":"johnnywang1994","username":"johnnywang1994","email":"johnny29621189@kimo.com","commits":2,"url":"https://github.com/johnnywang1994"}],"changelog":[{"hash":"71ccb7693345c8ddc2f554e00f8a0ce73af2b783","time":1648521821000,"email":"johnny29621189@kimo.com","author":"johnnywang1994","message":"UPD: upgrade to v2"},{"hash":"ed5c90d340759d0e74011a16ad94a0269a4ee528","time":1630549901000,"email":"johnny29621189@kimo.com","author":"johnnywang1994","message":"UPD: update git md"},{"hash":"51e618d93d4f837fbce25a1e1f0a9783cbc46b6a","time":1624012650000,"email":"wangj@garena.com","author":"Johnny Wang","message":"INIT"}]},"filePathRelative":"articles/git/recover.md"}');export{o as comp,d as data};
