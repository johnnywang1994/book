import{_ as s,c as a,d as e,o as p}from"./app-D2B6J4VR.js";const t={};function i(l,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="用-web-container-打造自己的線上-nodejs-開發環境" tabindex="-1"><a class="header-anchor" href="#用-web-container-打造自己的線上-nodejs-開發環境"><span>用 Web Container 打造自己的線上 NodeJS 開發環境</span></a></h1><p>Hi 大家好，好久不見了，我是 Johnny，距離上一篇文章大概已經過了快半年了，過去這一年工作量實在是有點太大，負責的專案從剛入職時的 1-2個，到現在的 9-10個，雖然不是同時處理這麼多，但基本都維持在 2-3個同時在開發、維護、調整架構的情況，作為一個專業的前端救火隊隊長（專案爆炸時在做什麼？有沒有空？可以來拯救嗎？），一直想找機會寫點東西但下班後累到完全不想碰程式相關的東西，這兩三年好多相對資深的同事一個一個離開（比我資深的），公司裡整體的狀況真的是一言難盡，希望我還可以在這再撐一段時間...</p><p>廢話講完了，進入正題，因為最近看到論壇關於 <a href="stackblitz.com">StackBlitz</a> 與 <a href="https://codesandbox.io/" target="_blank" rel="noopener noreferrer">CodeSandbox</a> 技術底層比較的討論串，CodeSandbox 不用我說，大家應該都很熟悉，背後就是傳統的虛擬機器執行環境，這次深入瞭解了下 StackBlitz 團隊背後使用的 Magic 技術 <a href="https://webcontainers.io/" target="_blank" rel="noopener noreferrer">Web Container</a>，正是這個技術讓 StackBlitz 的專案啟動速度如此之快</p><p>如果懶得看相關技術介紹，也歡迎直接跳到 <a href="#%E6%88%90%E6%9E%9C%E5%88%86%E4%BA%AB">成果分享</a> 看看這技術究竟可以做到什麼喔！</p><h2 id="什麼是-web-container" tabindex="-1"><a class="header-anchor" href="#什麼是-web-container"><span>什麼是 Web Container?</span></a></h2><p>Web Container 是由 StackBlitz 團隊用 Web Assembly 技術打造的一款 browser-based runtime，顧名思義就是在<code>瀏覽器內的 Node.js 執行環境</code>，能夠直接在瀏覽器當中操作系統指令，過去我們的瀏覽器網頁本身是無法直接操作系統指令的，使用這個技術直接無腦解放這個限制</p><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><h3 id="install-安裝" tabindex="-1"><a class="header-anchor" href="#install-安裝"><span>Install 安裝</span></a></h3><p>作為一個 NPM library 直接安裝</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">npm</span> i @webcontainer/api</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="設定-header" tabindex="-1"><a class="header-anchor" href="#設定-header"><span>設定 header</span></a></h3><p>因為 CORS 政策緣故，我們需要將 dev server 加上以下 header 才能讓我們的 web container 啟動後的畫面能夠正確引入我們的頁面</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Cross-Origin-Embedder-Policy: require-corp</span>
<span class="line">Cross-Origin-Opener-Policy: same-origin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果是使用 Vitejs 開發的可以在 <code>vite.config.js</code> 加上：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&#39;Cross-Origin-Embedder-Policy&#39;</span><span class="token operator">:</span> <span class="token string">&#39;require-corp&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-property property">&#39;Cross-Origin-Opener-Policy&#39;</span><span class="token operator">:</span> <span class="token string">&#39;same-origin&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="設定檔案內容" tabindex="-1"><a class="header-anchor" href="#設定檔案內容"><span>設定檔案內容</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> projectFiles <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 此為檔案，key 為檔案的名稱</span></span>
<span class="line">  <span class="token string-property property">&#39;package.json&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 檔案內需要 file key</span></span>
<span class="line">    <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 檔案內容</span></span>
<span class="line">      <span class="token literal-property property">contents</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">        {</span>
<span class="line">          &quot;name&quot;: &quot;vite-starter&quot;,</span>
<span class="line">          &quot;private&quot;: true,</span>
<span class="line">         // ...</span>
<span class="line">          },</span>
<span class="line">          &quot;devDependencies&quot;: {</span>
<span class="line">            &quot;vite&quot;: &quot;^4.0.4&quot;</span>
<span class="line">          }</span>
<span class="line">        }</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 這是資料夾</span></span>
<span class="line">  <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 資料夾需要 directory key</span></span>
<span class="line">    <span class="token literal-property property">directory</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 資料夾中包含的檔案或資料夾</span></span>
<span class="line">      <span class="token string-property property">&#39;main.js&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">contents</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">            console.log(&#39;Hello from WebContainers!&#39;)</span>
<span class="line">          </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或是可以透過 server 使用 <a href="https://www.npmjs.com/package/@webcontainer/snapshot" target="_blank" rel="noopener noreferrer">@webcontainer/snapshot</a> 直接提供現有資料夾檔案 snapshot</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// server side</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> snapshot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@webcontainer/snapshot&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// snapshot 格式為 \`Buffer\`</span></span>
<span class="line"><span class="token keyword">const</span> folderSnapshot <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">snapshot</span><span class="token punctuation">(</span><span class="token constant">SOURCE_CODE_FOLDER</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 範例 express-based 程式</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/snapshot&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  res</span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/octet-stream&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// client side</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> WebContainer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@webcontainer/api&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> webcontainer <span class="token operator">=</span> <span class="token keyword">await</span> WebContainer<span class="token punctuation">.</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> snapshotResponse <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/snapshot&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> snapshot <span class="token operator">=</span> <span class="token keyword">await</span> snapshotResponse<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">await</span> webcontainer<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="創建-instance" tabindex="-1"><a class="header-anchor" href="#創建-instance"><span>創建 Instance</span></a></h3><p>注意這個 instance 只能初始化一次，因為 web container 的 instance 一次只能存在一個，多次呼叫 boot 會導致 Proxy Error</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> WebContainer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@webcontainer/api&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Call only once</span></span>
<span class="line"><span class="token keyword">const</span> webcontainerInstance <span class="token operator">=</span> <span class="token keyword">await</span> WebContainer<span class="token punctuation">.</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="掛載檔案" tabindex="-1"><a class="header-anchor" href="#掛載檔案"><span>掛載檔案</span></a></h3><p>把剛剛定義好的檔案 files object 掛載到 web container 中</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">await</span> webcontainerInstance<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>projectFiles<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="啟動專案" tabindex="-1"><a class="header-anchor" href="#啟動專案"><span>啟動專案</span></a></h3><p>就像在本地開發一樣，我們需要先安裝 NPM dependency 後再啟動我們的 server</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">startDevServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 安裝</span></span>
<span class="line">  <span class="token keyword">const</span> installProcess <span class="token operator">=</span> <span class="token keyword">await</span> webcontainerInstance<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;npm&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;install&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 等待 npm install 指令完成</span></span>
<span class="line">  <span class="token keyword">const</span> installExitCode <span class="token operator">=</span> <span class="token keyword">await</span> installProcess<span class="token punctuation">.</span>exit<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>installExitCode <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Unable to run npm install&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 啟動 dev server \`npm run dev\`</span></span>
<span class="line">  <span class="token keyword">await</span> webcontainerInstance<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;npm&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;run&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dev&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="preview-結果" tabindex="-1"><a class="header-anchor" href="#preview-結果"><span>Preview 結果</span></a></h3><p>Web Container 在啟動專案後，會提供一個 url 給我們，這個 url 只在本地有效，提供給其他人是看不到的，web container 在內部會透過 service worker 針對該 url 進行處理</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> iframeEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;my-web-container&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">webcontainerInstance<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;server-ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">port<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>iframeEl<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="操作-file-system" tabindex="-1"><a class="header-anchor" href="#操作-file-system"><span>操作 File system</span></a></h2><p>這邊的 file system，是 web container 在記憶體中建構的虛擬檔案空間，在我們 mount 掛載完檔案後，我們可以透過以下指令與 fs 進行互動</p><h3 id="readfile-讀取單一檔案" tabindex="-1"><a class="header-anchor" href="#readfile-讀取單一檔案"><span>readFile 讀取單一檔案</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> fileContent <span class="token operator">=</span> <span class="token keyword">await</span> webcontainerInstance<span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="readdir-讀取資料夾" tabindex="-1"><a class="header-anchor" href="#readdir-讀取資料夾"><span>readdir 讀取資料夾</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">await</span> webcontainerInstance<span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span><span class="token string">&#39;/src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 檔案名稱字串</span></span>
<span class="line"><span class="token comment">// [&#39;main.js&#39;, &#39;App.vue&#39;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rm-刪除檔案" tabindex="-1"><a class="header-anchor" href="#rm-刪除檔案"><span>rm 刪除檔案</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">await</span> webcontainerInstance<span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">rm</span><span class="token punctuation">(</span><span class="token string">&#39;/src/main.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="writefile-建立-覆蓋檔案" tabindex="-1"><a class="header-anchor" href="#writefile-建立-覆蓋檔案"><span>writeFile 建立/覆蓋檔案</span></a></h3><p>如果檔案不存在，會直接建立新檔案，若已經存在則直接覆蓋</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">await</span> webcontainerInstance<span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;/src/main.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;console.log(&quot;Hello from WebContainers!&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="mkdir-建立資料夾" tabindex="-1"><a class="header-anchor" href="#mkdir-建立資料夾"><span>mkdir 建立資料夾</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">await</span> webcontainerInstance<span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果需要遞迴建立深度資料夾，可以加上 <code>recursive</code> 選項</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">await</span> webcontainerInstance<span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">&#39;this/is/my/nested/folder&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">recursive</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="執行指令" tabindex="-1"><a class="header-anchor" href="#執行指令"><span>執行指令</span></a></h2><p>在 Web Container 中透過 <code>spawn</code> 執行指令</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// example 1. npm install</span></span>
<span class="line">webcontainerInstance<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;npm&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;install&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// example 2. ls src -l</span></span>
<span class="line">webcontainerInstance<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-l&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="process-output" tabindex="-1"><a class="header-anchor" href="#process-output"><span>Process output</span></a></h3><p>每次執行 spawn 後會返回一個 process，可以對該 process 監聽 output 並進行處理，比如打印輸出到 Xterm 之類的，底下是一個完整建立 web container、掛載檔案、安裝依賴、啟動的範例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> WebContainer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@webcontainer/api&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Terminal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@xterm/xterm&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">mountFiles</span><span class="token punctuation">(</span><span class="token parameter">webcontainer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">await</span> webcontainer<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">installDependency</span><span class="token punctuation">(</span><span class="token parameter">webcontainer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> xterm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Terminal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> installProcess <span class="token operator">=</span> <span class="token keyword">await</span> webcontainer<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;npm&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;install&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  installProcess<span class="token punctuation">.</span>output<span class="token punctuation">.</span><span class="token function">pipeTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WritableStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">write</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      xterm<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">startDevServer</span><span class="token punctuation">(</span><span class="token parameter">webcontainer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">await</span> webcontainer<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;npm&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;run&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;start&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  webcontainer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;server-ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">port<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> iframeEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;my-web-container&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    iframeEl<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> webcontainerInstance <span class="token operator">=</span> <span class="token keyword">await</span> WebContainer<span class="token punctuation">.</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">await</span> <span class="token function">mountFiles</span><span class="token punctuation">(</span>webcontainerInstance<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">await</span> <span class="token function">installDependency</span><span class="token punctuation">(</span>webcontainerInstance<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">await</span> <span class="token function">startDevServer</span><span class="token punctuation">(</span>webcontainerInstance<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="成果分享" tabindex="-1"><a class="header-anchor" href="#成果分享"><span>成果分享</span></a></h2><p>都學到這了，怎麼有不動手實作的道理？歷時兩個週末，花費重金 6個便當打造的 <a href="https://pen.maju-web.club/webcontainer/" target="_blank" rel="noopener noreferrer">Maju Web Container</a> 線上編輯器隆重推出！！！（好拉，其實就是照抄 StackBlitz 的基本功能，嘗試還原整個編輯器環境，功能非常陽春但還堪用），這專案使用的是 IndexedDB 來儲存你的寶貝專案於本地裝置中，不用擔心你的絕密資料被儲存在我的 DB，喜歡的話不要忘記分享給你的朋友也玩玩看吧～:&gt;</p><blockquote><p>因為 Web Container 官方的授權方式是不可用於商用，為了避免公開源碼後被濫用於商業用途，在此就不公開我的爛爛源碼給大家見笑了，還請大家見諒，覺得這技術很棒的話，不要忘記直接去使用 StackBlitz 支持一下摟</p></blockquote><h2 id="結論" tabindex="-1"><a class="header-anchor" href="#結論"><span>結論</span></a></h2><p>這次透過實作把整個 Web Container 工具玩了一遍，覺得技術迭代真的太快了！！想想不到 8年前，前端還在用 RequireJS 動態定義模組化，現在都直接原生支持 ES Module，甚至連執行環境都可以透過 Web Assembly 技術模擬實現了，未來技術會怎麼發展還是讓人非常期待！今天分享就到這拉，覺得文章不錯也歡迎分享給更多人看看摟，下篇文章見～=V=</p>`,58)]))}const o=s(t,[["render",i],["__file","web-container.html.vue"]]),r=JSON.parse('{"path":"/articles/js/web-container.html","title":"用 Web Container 打造自己的線上 NodeJS 開發環境","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"什麼是 Web Container?","slug":"什麼是-web-container","link":"#什麼是-web-container","children":[]},{"level":2,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[{"level":3,"title":"Install 安裝","slug":"install-安裝","link":"#install-安裝","children":[]},{"level":3,"title":"設定 header","slug":"設定-header","link":"#設定-header","children":[]},{"level":3,"title":"設定檔案內容","slug":"設定檔案內容","link":"#設定檔案內容","children":[]},{"level":3,"title":"創建 Instance","slug":"創建-instance","link":"#創建-instance","children":[]},{"level":3,"title":"掛載檔案","slug":"掛載檔案","link":"#掛載檔案","children":[]},{"level":3,"title":"啟動專案","slug":"啟動專案","link":"#啟動專案","children":[]},{"level":3,"title":"Preview 結果","slug":"preview-結果","link":"#preview-結果","children":[]}]},{"level":2,"title":"操作 File system","slug":"操作-file-system","link":"#操作-file-system","children":[{"level":3,"title":"readFile 讀取單一檔案","slug":"readfile-讀取單一檔案","link":"#readfile-讀取單一檔案","children":[]},{"level":3,"title":"readdir 讀取資料夾","slug":"readdir-讀取資料夾","link":"#readdir-讀取資料夾","children":[]},{"level":3,"title":"rm 刪除檔案","slug":"rm-刪除檔案","link":"#rm-刪除檔案","children":[]},{"level":3,"title":"writeFile 建立/覆蓋檔案","slug":"writefile-建立-覆蓋檔案","link":"#writefile-建立-覆蓋檔案","children":[]},{"level":3,"title":"mkdir 建立資料夾","slug":"mkdir-建立資料夾","link":"#mkdir-建立資料夾","children":[]}]},{"level":2,"title":"執行指令","slug":"執行指令","link":"#執行指令","children":[{"level":3,"title":"Process output","slug":"process-output","link":"#process-output","children":[]}]},{"level":2,"title":"成果分享","slug":"成果分享","link":"#成果分享","children":[]},{"level":2,"title":"結論","slug":"結論","link":"#結論","children":[]}],"git":{"updatedTime":1728305834000,"contributors":[{"name":"johnnywang","email":"johnnywang@test.com","commits":1}]},"filePathRelative":"articles/js/web-container.md"}');export{o as comp,r as data};
