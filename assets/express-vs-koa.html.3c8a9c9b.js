import{_ as c,r as o,o as i,c as l,a,b as n,d as s,e as p}from"./app.9195bff3.js";const u={},r=n("h1",{id:"nodejs-\u8F15\u91CF\u958B\u767C\u6846\u67B6-expressjs-\u8207-koa2-\u7684\u5340\u5225",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nodejs-\u8F15\u91CF\u958B\u767C\u6846\u67B6-expressjs-\u8207-koa2-\u7684\u5340\u5225","aria-hidden":"true"},"#"),s(" NodeJS \u8F15\u91CF\u958B\u767C\u6846\u67B6 Expressjs \u8207 Koa2 \u7684\u5340\u5225")],-1),k=n("h6",{id:"tags-js-nodejs-expressjs-koa2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tags-js-nodejs-expressjs-koa2","aria-hidden":"true"},"#"),s(" tags: "),n("code",null,"JS"),s(),n("code",null,"Nodejs"),s(),n("code",null,"Expressjs"),s(),n("code",null,"Koa2")],-1),d=p(`<p>\u76F8\u4FE1 Nodejs \u5C0F\u7C89\u7D72\u4E00\u5B9A\u5F88\u597D\u5947\uFF0C\u5230\u5E95 Koa2 \u8DDF Express \u5DEE\u5728\u54EA\uFF1F\u70BA\u4F55\u5C24\u96E8\u6EAA\u6703\u9078\u64C7 Koa2 \u4F5C\u70BA Vite \u7684 server \u4F7F\u7528\u800C\u4E0D\u662F\u5EE3\u70BA\u4EBA\u77E5\u7684\u8001\u5927\u54E5 Express \u5462\uFF1F</p><p>\u4ECA\u5929\u9019\u7BC7\u5C31\u4F86\u4E00\u63A2\u7A76\u7ADF Express \u8207 Koa2 \u6709\u4EC0\u9EBC\u5340\u5225\u5427\uFF01\uFF08\u9019\u7BC7\u53EA\u662F\u5BA2\u89C0\u5206\u6790\u5594\uFF5E\u5927\u5BB6\u5225\u6230\u8D77\u4F86\uFF01\uFF09</p><h2 id="\u5E02\u5834\u5B9A\u4F4D" tabindex="-1"><a class="header-anchor" href="#\u5E02\u5834\u5B9A\u4F4D" aria-hidden="true">#</a> \u5E02\u5834\u5B9A\u4F4D</h2><p>\u8981\u4E86\u89E3\u5169\u500B\u5DE5\u5177\u4E4B\u9593\u7684\u5340\u5225\uFF0C\u6700\u91CD\u8981\u7684\u662F\u5148\u4E86\u89E3\u4ED6\u5011\u7684\u76EE\u6A19\u5B9A\u4F4D\uFF0C\u5C31\u4F86\u770B\u770B\u5404\u81EA\u5B98\u7DB2\u600E\u9EBC\u63CF\u8FF0\u5427</p><p>\u5148\u4F86\u770B\u4E00\u4E0B Express</p><ol><li>\u6700\u5C0F\u53C8\u9748\u6D3B\u7684 Node.js Web \u61C9\u7528\u7A0B\u5F0F\u67B6\u69CB</li><li>\u5927\u91CF\u7684 HTTP \u516C\u7528\u7A0B\u5F0F\u65B9\u6CD5\u8207\u4E2D\u4ECB\u8EDF\u9AD4\u4F9B\u60A8\u652F\u914D\uFF0C\u80FD\u5920\u5FEB\u901F\u53C8\u8F15\u9B06\u7684\u5EFA\u7ACB\u5B8C\u6574\u7684 API\u3002</li><li>\u63D0\u4F9B\u7CBE\u7C21\u7684\u57FA\u790E Web \u61C9\u7528\u7A0B\u5F0F\u7279\u6027\uFF0C\u53C8\u4E0D\u4F7F\u60A8\u6240\u8A8D\u8B58\u53CA\u559C\u597D\u7684 Node.js \u5931\u8272</li></ol><p>\u518D\u4F86\u662F Koa</p><ol><li>\u7531\u539F\u73ED Express \u958B\u767C\u5718\u968A\u6253\u9020\u7684\u65B0\u4E00\u4EE3\u7DB2\u9801\u958B\u767C\u6846\u67B6</li><li>\u76EE\u6A19\u6253\u9020\u4E00\u500B\u66F4\u8F15\u91CF\u4E14\u9AD8\u6548\u7A69\u5B9A\u7684\u7DB2\u9801\u61C9\u7528\u7A0B\u5F0F\u8207 API \u958B\u767C\u5DE5\u5177</li><li>async, await \u53D6\u4EE3\u50B3\u7D71\u56DE\u8ABF\uFF0C\u5927\u5927\u589E\u52A0\u932F\u8AA4\u8655\u7406\u80FD\u529B</li><li>Koa \u6C92\u6709\u5728\u5176\u6838\u5FC3\u4E2D\u6346\u7D81\u4EFB\u4F55\u4E2D\u9593\u4EF6\uFF0C\u63D0\u4F9B\u4E86\u4E00\u5957\u512A\u96C5\u7684\u65B9\u6CD5\uFF0C\u4F7F\u7DE8\u5BEB\u670D\u52D9\u5668\u8B8A\u5F97\u5FEB\u901F\u800C\u6109\u5FEB</li></ol><p>\u7E3D\u7D50\u4F86\u8AAA\uFF0CKoa \u7684\u67D0\u4E9B\u5B9A\u4F4D\u8207 Express \u975E\u5E38\u63A5\u8FD1\uFF0C\u90FD\u662F\u4E00\u6B3E\u8F15\u91CF\u3001\u9AD8\u6548\u7684\u6846\u67B6\uFF0C\u7562\u7ADF\u958B\u767C\u5718\u968A\u5C31\u662F\u540C\u4E00\u7FA4\u4EBA\uFF0C\u4F46 Koa \u986F\u7136\u662F\u91DD\u5C0D Express \u7684\u4E00\u4E9B\u5F31\u9805\u9032\u884C\u512A\u5316\u5F8C\u7684\u7248\u672C\uFF0C\u6240\u4EE5\u67D0\u4E9B\u65B9\u9762\u4F86\u8AAA\uFF0CExpress \u66F4\u8CBC\u8FD1\u539F\u751F Nodejs\uFF0C\u5C08\u6CE8\u8655\u7406 route \u7684\u90E8\u5206\uFF0CKoa \u5247\u985E\u4F3C\u65BC\u7CBE\u7C21\u512A\u5316\u904E\u7684 Express\uFF0C\u4F46\u4E5F\u56E0\u6B64 Koa \u7684 API \u6BD4\u8D77 Express \u800C\u8A00\uFF0C\u8207\u539F\u751F Nodejs API \u6709\u4E00\u4E9B\u5DEE\u5225</p><p>\u6709\u95DC Koa \u7684\u7B2C\u56DB\u9EDE\uFF0C\u662F\u56E0\u70BA\u904E\u53BB Express\u5373\u4F7F\u6C92\u6709\u6DFB\u52A0\u4EFB\u4F55 middleware\uFF0C\u5167\u90E8\u5C31\u6703\u9810\u8A2D\u6709\u5169\u500B\u4E2D\u9593\u4EF6\u4E86\uFF0C\u5C0D\u65BC\u300C\u8F15\u91CF\u300D\u9019\u4E00\u9EDE\u4F86\u8AAA\uFF0CKoa \u5B8C\u5168\u6C92\u6709\u591A\u9918\u7684\u4E2D\u9593\u4EF6\u8CA0\u64D4\uFF0C\u4F46\u5C0D\u65BC\u62BD\u8C61 API \u9019\u4E00\u9EDE\u4F86\u8AAA\uFF0CExpress \u5247\u8F03\u70BA\u8CBC\u8FD1\u539F\u751F Nodejs</p><h2 id="\u5EFA\u7ACB-server" tabindex="-1"><a class="header-anchor" href="#\u5EFA\u7ACB-server" aria-hidden="true">#</a> \u5EFA\u7ACB Server</h2><p>\u5C0D\u65BC\u4E00\u4E9B\u57FA\u790E api \u9664\u4E86\u5BEB\u6CD5\u4E0A\u7684\u5DEE\u5225\u5916\uFF0C\u6574\u9AD4\u6982\u5FF5\u662F\u975E\u5E38\u50CF\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// express</span>
<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// koa</span>
<span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="request-response" tabindex="-1"><a class="header-anchor" href="#request-response" aria-hidden="true">#</a> Request/Response</h2>`,15),v=n("strong",null,"\u5728 Express \u4E2D",-1),m=n("br",null,null,-1),b=n("code",null,"request",-1),g=s(", "),h=n("code",null,"response",-1),f=s(" \u662F\u7368\u7ACB\u958B\u4F86\u5206\u5225\u7D66\u958B\u767C\u8005\u4F7F\u7528\u7684\uFF0C\u4E26\u4E14 "),x=n("code",null,"req",-1),w=s(", "),_=n("code",null,"res",-1),y=s(" \u50C5\u50C5\u662F\u539F\u751F Nodejs \u7684 HTTP \u7269\u4EF6\u5305\u88DD\uFF0C\u6240\u4EE5\u53EF\u4EE5\u76F4\u63A5\u8ABF\u7528\u539F\u751F method \u90FD\u6C92\u554F\u984C\uFF0C\u6839\u64DA"),j={href:"https://expressjs.com/zh-tw/4x/api.html#req",target:"_blank",rel:"noopener noreferrer"},q=s("\u5B98\u7DB2\u7684\u89E3\u91CB"),E=n("blockquote",null,[n("p",null,"The req object is an enhanced version of Node\u2019s own request object and supports all built-in fields and methods.")],-1),K=p("<strong>\u5728 Koa \u4E2D</strong><br> Koa \u5C07 <code>request</code>, <code>response</code> \u653E\u5728\u5167\u90E8\u7DAD\u8B77\u7684 <code>ctx</code> \u4E2D\uFF0C\u6BCF\u4E00\u6B21\u8ACB\u6C42\u90FD\u6703\u7522\u751F\u4E00\u500B\u5168\u65B0\u7684 <code>ctx</code> \u7269\u4EF6\uFF0C\u70BA\u4E86\u65B9\u4FBF\u4F7F\u7528\uFF0C<code>ctx</code> \u5167\u8A31\u591A key \u6703\u76F4\u63A5\u5E6B\u52A9\u958B\u767C\u8005\u6307\u5411\u6B63\u78BA\u7684\u4F4D\u7F6E\uFF0C\u6BD4\u5982\u8AAA <code>ctx.get</code>, <code>ctx.set</code> \u5206\u5225\u4EE3\u7406\u7684\u662F <code>ctx.request.get</code>, <code>ctx.response.set</code>\uFF0C\u8A73\u7D30\u53EF\u4EE5",21),T={href:"https://koajs.com/#context",target:"_blank",rel:"noopener noreferrer"},P=s("\u53C3\u8003\u5B98\u7DB2"),N=p(`<p>\u4F46\u56E0\u70BA Koa \u662F\u5C0D\u65BC\u539F\u751F HTTP \u7269\u4EF6\u9032\u884C\u62BD\u8C61\u7684\u95DC\u4FC2\uFF0C\u4F7F\u7528\u539F\u751F\u50CF\u662F <code>ctx.response.setHeader</code> \u5C31\u6703\u51FA\u73FE\u932F\u8AA4\uFF0C\u800C Express \u5247\u53EF\u4EE5\u6B63\u78BA\u57F7\u884C <code>res.setHeader</code>\u3002</p><h2 id="\u8A2D\u7F6E-logger" tabindex="-1"><a class="header-anchor" href="#\u8A2D\u7F6E-logger" aria-hidden="true">#</a> \u8A2D\u7F6E logger</h2><p>\u60F3\u8981\u8A2D\u5B9A\u4E00\u500B logger \u6642\uFF0C\u4E4D\u770B\u7528\u5230\u7684 API \u5176\u5BE6\u662F\u975E\u5E38\u76F8\u4F3C\u7684\uFF0C\u4F46\u53EF\u4EE5\u5F88\u660E\u986F\u770B\u51FA Express, Koa \u5728 middleware \u9019\u4E00\u584A\u88E1\u6709\u500B\u660E\u986F\u7684\u5DEE\u7570\uFF0C\u5C0E\u81F4 Express \u5728\u505A\u9019\u7A2E\u529F\u80FD\u6642\u7D81\u624B\u7D81\u8173</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Express</span>
<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// logger</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> rt <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;X-Response-Time&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>method<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// x-response-time</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> start <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> ms <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
  <span class="token comment">// \u9019\u908A\u6703\u5674\u932F\uFF0C\u56E0\u70BA next \u5DF2\u7D93 res.send \u5B8C\u7562</span>
  <span class="token comment">// Cannot set headers after they are sent to the client</span>
  res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;X-Response-Time&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ms<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// response</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Koa</span>
<span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// logger</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> rt <span class="token operator">=</span> ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;X-Response-Time&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ctx<span class="token punctuation">.</span>method<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ctx<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// x-response-time</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> start <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> ms <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
  <span class="token comment">// ctx.set is alias for ctx.response.set</span>
  <span class="token comment">// \u9019\u88E1\u6C92\u554F\u984C\uFF0Cctx.body \u4E0D\u6703\u963B\u65B7\u9019\u908A\u7E7C\u7E8C\u57F7\u884C</span>
  ctx<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;X-Response-Time&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ms<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// response</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">ctx</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5728 Express \u4E2D\uFF0C\u5982\u679C\u547C\u53EB\u4E86 <code>res.send</code>\uFF0C\u5247\u8ACB\u6C42\u5230\u8A72 middleware\u5C31\u6703\u5C07 header \u9001\u51FA\uFF0C\u800C\u5728 Koa \u4E2D\uFF0C\u5373\u4F7F\u547C\u53EB\u4E86 <code>ctx.body</code>\uFF0C\u5F8C\u7E8C middleware \u4E2D\u9084\u662F\u53EF\u4EE5\u5C0D header \u9032\u884C\u8ABF\u6574\u4FEE\u6B63\uFF0C\u56E0\u70BA\u5BE6\u969B\u4E0A Koa \u9084\u6C92\u6709\u771F\u6B63\u8FD4\u56DE\u8ACB\u6C42\uFF0C\u4E00\u76F4\u5230\u6240\u6709 middleware \u90FD\u4F9D\u5E8F\u57F7\u884C\u5B8C\u7562\u624D\u6703\u8FD4\u56DE</p></blockquote>`,6),H=s("\u90A3\u5230\u5E95\u5728 Express \u4E2D\u6211\u5011\u8981\u600E\u9EBC\u505A\u5230 response duration \u7684\u529F\u80FD\u5462\uFF1F\u5FC5\u9808\u501F\u52A9\u5957\u4EF6 "),$={href:"https://www.npmjs.com/package/on-headers",target:"_blank",rel:"noopener noreferrer"},A=s("on-headers"),R=s(" \u7684\u5E6B\u52A9\uFF0C\u76E3\u807D write header \u7684\u52D5\u4F5C\uFF0C\u4E26\u5728 write \u4E4B\u524D\u9032\u884C\u8A08\u7B97"),I=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> onHeaders <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;on-headers&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// logger</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> rt <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;X-Response-Time&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>method<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// x-response-time</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> startAt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">onHeaders</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> diff <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> time <span class="token operator">=</span> diff <span class="token operator">-</span> startAt<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;X-Response-Time&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;X-Response-Time&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// response</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u662F\u4E0D\u662F\u89BA\u5F97\u6709\u9EDE\u77C7\u554A...\uFF0C\u70BA\u4E86\u4E00\u500B\u611F\u89BA\u5F88\u57FA\u672C\u7684\u529F\u80FD\u5C45\u7136\u8981\u9019\u6A23\u5927\u8CBB\u5468\u7AE0\uFF0C\u7576\u7136\u4F60\u8981\u5B58\u5168\u57DF\u8B8A\u6578\u53BB\u505A\u4E5F\u662F\u53EF\u4EE5\u62C9</p><h2 id="middleware-\u4E2D\u9593\u4EF6" tabindex="-1"><a class="header-anchor" href="#middleware-\u4E2D\u9593\u4EF6" aria-hidden="true">#</a> Middleware \u4E2D\u9593\u4EF6</h2><p>\u4E2D\u9593\u4EF6\u7B97\u662F Express \u7684\u67D0\u4E9B\u60C5\u6CC1\u4E0B\u7684\u52A3\u52E2\uFF0C\u5177\u9AD4\u6BD4\u8F03\u662F\u600E\u9EBC\u6A23\u5462\uFF0C\u6211\u5011\u4F86\u770B\u770B</p><h3 id="express-\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#express-\u540C\u6B65" aria-hidden="true">#</a> Express \u540C\u6B65</h3><p>\u9996\u5148\u62FF\u4E00\u500B\u6B63\u5E38\u60C5\u6CC1\u4E0B\u7684 express \u4E2D\u9593\u4EF6\u60C5\u6CC1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1st middleware start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1st middleware end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2nd middleware start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2nd middleware end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;trigger /api/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="result" tabindex="-1"><a class="header-anchor" href="#result" aria-hidden="true">#</a> RESULT</h4><p>\u4E0A\u9762\u5C0D <code>/api/test</code> \u8ACB\u6C42\u6642\u6703\u5F97\u51FA\u4E0B\u9762\u7684\u7D50\u679C\uFF0C\u7B26\u5408\u9810\u671F\uFF0C\u4E0B\u9762\u63A5\u8457\u770B\u770B\u975E\u540C\u6B65\u6642\u7684\u7D50\u679C</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1st middleware start
2nd middleware start
trigger /api/test
2nd middleware end
1st middleware end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="express-\u975E\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#express-\u975E\u540C\u6B65" aria-hidden="true">#</a> Express \u975E\u540C\u6B65</h3><p>\u7A0D\u5FAE\u4FEE\u6539\u4E0B\u4E0A\u9762\u7684\uFF0C\u52A0\u5165\u4E86 <code>sleep</code> \u7684\u975E\u540C\u6B65\u7B49\u5F85</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">sleep</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sleep timeout...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">res</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1st middleware start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1st middleware end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2nd middleware start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2nd middleware end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;trigger /api/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u52A0\u5165\u975E\u540C\u6B65\u7684\u7B49\u5F85</span>
  res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="result-1" tabindex="-1"><a class="header-anchor" href="#result-1" aria-hidden="true">#</a> RESULT</h4><p>\u53EF\u4EE5\u770B\u5230\u5373\u4F7F\u6211\u5011\u5E6B\u524D\u5E7E\u500B middleware \u7684 next \u52A0\u4E0A await\uFF0C\u4F46\u9019\u7D50\u679C\u660E\u986F\u4E82\u4E86\u5957\uFF0C\u6211\u5011\u9810\u671F\u7684\u662F sleep \u5F8C\u624D\u8DD1\u5230 2nd, 1st \u4E2D\u9593\u4EF6\u7684 end\uFF0C\u7D50\u679C\u537B\u662F\u5176\u4ED6\u5F8C\u7E8C middleware \u88AB\u63D0\u524D\u8ABF\u7528\u4E86\uFF0C\u539F\u56E0\u662F express \u7684 next \u51FD\u6578\u4E26\u6C92\u6709\u5305\u88DD\u70BA Promise\uFF0C\u4E5F\u5C31\u4E0D\u652F\u63F4 <code>await</code></p><blockquote><p>\u96D6\u7136\u9019\u4E0D\u5F71\u97FF\u6700\u7D42\u8FD4\u56DE\u7684\u7D50\u679C\uFF0C\u4F46\u5C0D\u65BC\u67D0\u4E9B\u6703\u88AB\u57F7\u884C\u9806\u5E8F\u5F71\u97FF\u7684\u7D50\u679C\u800C\u8A00\u5C31\u6703\u6709\u5F71\u97FF\u4E86\uFF0C\u6BD4\u5982\u4E0A\u9762\u90A3\u7A2E\u7D00\u9304 response duration \u7684\u4E2D\u9593\u4EF6\uFF0C\u9762\u5C0D\u975E\u540C\u6B65\u8ACB\u6C42\u6642\u5982\u679C\u6C92\u6709\u59A5\u5584\u8655\u7406\u5C31\u6703\u5C0E\u81F4\u4E00\u4E9B\u554F\u984C</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1st middleware start
2nd middleware start
trigger /api/test
2nd middleware end
1st middleware end
sleep timeout...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="express-\u4E2D\u9593\u4EF6\u908F\u8F2F" tabindex="-1"><a class="header-anchor" href="#express-\u4E2D\u9593\u4EF6\u908F\u8F2F" aria-hidden="true">#</a> Express \u4E2D\u9593\u4EF6\u908F\u8F2F</h3><p>\u6703\u767C\u751F\u4E0A\u9762\u9019\u7A2E\u602A\u4E8B\uFF0C\u76F8\u4FE1\u773C\u5C16\u7684\u4EBA\u61C9\u8A72\u5DF2\u7D93\u77E5\u9053\u70BA\u4EC0\u9EBC\u4E86\uFF0C\u9019\u4E3B\u8981\u662F express \u7684\u4E2D\u9593\u4EF6\u5728\u7576\u521D\u8A2D\u8A08\u4E0A\u7684\u4E00\u500B\u5C0F\u7455\u75B5\uFF0C\u4E0A\u9762\u7684\u4E2D\u9593\u4EF6\u7D93\u904E\u62C6\u89E3\u5F8C\u5BE6\u969B\u6703\u50CF\u4E0B\u9762\u9019\u6A23\u57F7\u884C\uFF0C<code>next</code> \u51FD\u6578\u7684\u8A2D\u8A08\u662F\u95DC\u9375</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1st middleware start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2nd middleware start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u53EF\u4EE5\u770B\u5230\uFF0C\u9019\u88E1\u7684\u975E\u540C\u6B65\u51FD\u6578\u662F\u88AB\u5305\u88F9\u8D77\u4F86\u57F7\u884C\u7684\uFF0C\u4E5F\u56E0\u6B64\u5F8C\u7E8C\u7684\u4E2D\u9593\u4EF6\u884C\u70BA\u4E26\u4E0D\u6703\u7B49\u5F85\u4ED6\u7684\u7D50\u679C\u8FD4\u56DE</span>
    <span class="token comment">// \u4E14\u56E0\u70BA next \u6C92\u6709\u88AB Promise \u5305\u88F9</span>
    <span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;trigger /api/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2nd middleware end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1st middleware end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F8\u4FE1\u770B\u5230\u9019\u5927\u5BB6\u5C31\u80FD\u7406\u89E3\u70BA\u4F55\u6703\u51FA\u73FE\u50CF\u4E0A\u9762\u90A3\u7A2E\u5947\u602A\u7684\u6253\u5370\u7D50\u679C\u4E86\u5427\uFF5E\uFF0C\u5176\u5BE6\u7576\u521D express \u6703\u9019\u9EBC\u8A2D\u8A08\u4E5F\u4E0D\u662F\u4E0D\u80FD\u7406\u89E3\uFF0C\u7562\u7ADF\u8A2D\u8A08\u7576\u6642\u61C9\u8A72\u9084\u7121\u6CD5\u9047\u898B\u73FE\u5728 <code>async</code>, <code>await</code> \u9019\u9EBC\u6D41\u884C\u5427</p><p>\u63A5\u4E0B\u4F86\u6211\u5011\u770B\u770B\u65B0\u7684\u5C0F\u8001\u5F1F Koa2 \u662F\u5982\u4F55\u512A\u96C5\u5730\u8655\u7406\u4E2D\u9593\u4EF6\u7684\u5427</p><h3 id="koa2-\u4E2D\u9593\u4EF6\u908F\u8F2F" tabindex="-1"><a class="header-anchor" href="#koa2-\u4E2D\u9593\u4EF6\u908F\u8F2F" aria-hidden="true">#</a> Koa2 \u4E2D\u9593\u4EF6\u908F\u8F2F</h3>`,23),S=s("Koa2 \u8655\u7406\u4E2D\u9593\u4EF6\u908F\u8F2F\u7684\u90E8\u5206\u662F\u4E00\u500B\u7368\u7ACB\u7684\u5305"),V={href:"https://github.com/koajs/compose/blob/master/index.js",target:"_blank",rel:"noopener noreferrer"},X=s("koa-compose"),D=s("\uFF0C\u5176\u5BE6\u5C31\u53EA\u6709\u4E00\u500B\u6A94\u6848\u5728\u8655\u7406\uFF0C\u771F\u7684\u662F\u975E\u5E38\u7CBE\u7149...\u4E0B\u9762\u4E00\u8D77\u770B\u770B\u4ED6\u7684\u6E90\u78BC\u600E\u9EBC\u505A\u5427"),B=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compose</span> <span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>middleware<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Middleware stack must be an array!&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> fn <span class="token keyword">of</span> middleware<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> fn <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Middleware must be composed of functions!&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// last called middleware #</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token comment">// dispatch \u8FD4\u56DE\u90FD\u662F Promise</span>
    <span class="token keyword">function</span> <span class="token function">dispatch</span> <span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> index<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;next() called multiple times&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      index <span class="token operator">=</span> i
      <span class="token keyword">let</span> fn <span class="token operator">=</span> middleware<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token comment">// \u5B8C\u6210\u904D\u6B77\u6642\uFF0C\u81EA\u52D5\u6539\u70BA\u8ABF\u7528 next</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> fn <span class="token operator">=</span> next
      <span class="token comment">// fn \u4E0D\u5B58\u5728\u6642\uFF0C\u5B8C\u6210\u4EFB\u52D9\uFF0C\u8FD4\u56DE Promise</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token comment">// \u639B\u8F09 Promise \u57F7\u884C\uFF0C\u50B3\u5165\u57F7\u884C\u4E0B\u4E00\u500B middleware \u7684 next dispatch</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230 Koa2 \u7684 compose \u5C31\u662F\u900F\u904E\u9589\u5305\u548C\u905E\u8FF4\u7684\u6027\u8CEA\u4F86\u4E00\u5C64\u4E00\u5C64\u8655\u7406 middleware\uFF0C\u4E14\u6BCF\u4E00\u500B next \u90FD\u662F\u8FD4\u56DE Promise\uFF0C\u4E5F\u5C31\u76F4\u63A5\u652F\u63F4\u9032\u884C <code>await</code> \u8655\u7406</p><h2 id="\u7D50\u8AD6" tabindex="-1"><a class="header-anchor" href="#\u7D50\u8AD6" aria-hidden="true">#</a> \u7D50\u8AD6</h2><p>\u7E3D\u7D50\u4F86\u8AAA\uFF0CExpress \u8207 Koa2 \u7684\u5DEE\u5225\u5728\u65BC\uFF0C\u5C0D\u57FA\u790E\u958B\u767C API \u8A2D\u8A08\u7684\u65B9\u5F0F\u4E00\u500B\u66F4\u8CBC\u8FD1\u539F\u751F\uFF0C\u4E00\u500B\u66F4\u8B1B\u7A76\u65B9\u4FBF\uFF0C\u4E26\u4E14\u5728 middleware \u7684\u8655\u7406\u4E0A\uFF0CExpress \u5C6C\u65BC\u76F4\u7DDA\u57F7\u884C\uFF0CKoa2 \u5247\u63A1\u7528 stack \u7684\u6D0B\u8525\u57F7\u884C\u65B9\u5F0F\uFF0C\u4EE5\u76EE\u524D\u4E3B\u6D41 <code>async</code>, <code>await</code> \u4F86\u8AAA\uFF0CExpress \u4E5F\u662F\u53EF\u4EE5\u4F7F\u7528\uFF0C\u53EA\u662F\u5728\u67D0\u4E9B\u5834\u666F\u4E0B\u6703\u986F\u5F97\u6BD4\u8F03\u68D8\u624B\uFF0C\u4E0D\u77E5\u9053\u5927\u5BB6\u5728\u77AD\u89E3\u4E86\u5169\u8005\u7684\u5DEE\u5225\u5F8C\uFF0C\u6709\u4EC0\u9EBC\u60F3\u6CD5\u5462\uFF1F</p><p>\u4E0D\u7BA1\u600E\u6A23\uFF0C\u6700\u91CD\u8981\u7684\u9084\u662F\u958B\u767C\u8005\u81EA\u7531\u5FC3\u8B49\u62C9\uFF5E\uFF0C\u5E0C\u671B\u5927\u5BB6\u90FD\u80FD\u627E\u5230\u81EA\u5DF1\u6700\u611B\u7684\u958B\u767C\u6846\u67B6\u645F\uFF0C\u7562\u7ADF\u958B\u767C\u5C31\u662F\u7528\u81EA\u5DF1\u6700\u64C5\u9577\uFF0C\u6700\u559C\u6B61\u7684\u5DE5\u5177\u5C31\u5C0D\u4E86=V=\uFF0C\u4ECA\u5929\u5BEB\u5230\u9019\u4E86\uFF0C\u611F\u8B1D\u5927\u5BB6\u89C0\u770B\uFF0C\u89BA\u5F97\u5167\u5BB9\u4E0D\u932F\u4E5F\u6B61\u8FCE\u5206\u4EAB\u51FA\u53BB\u8B93\u66F4\u591A\u4EBA\u770B\u770B\u5427</p>`,5),W=n("h2",{id:"\u53C3\u8003",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C3\u8003","aria-hidden":"true"},"#"),s(" \u53C3\u8003")],-1),L={href:"https://juejin.cn/post/6844903968041091080",target:"_blank",rel:"noopener noreferrer"},M=s("\u518D\u4E5F\u4E0D\u6015\u9762\u8BD5\u5B98\u95EE\u4F60express\u548Ckoa\u7684\u533A\u522B\u4E86"),z={href:"https://koajs.com/",target:"_blank",rel:"noopener noreferrer"},C=s("Koajs \u5B98\u7DB2"),J={href:"https://expressjs.com/zh-tw/4x/api.html",target:"_blank",rel:"noopener noreferrer"},U=s("Expressjs \u5B98\u7DB2"),F={href:"https://github.com/expressjs/response-time",target:"_blank",rel:"noopener noreferrer"},G=s("Expressjs response-time source code");function O(Q,Y){const e=o("SocialBlock"),t=o("ExternalLinkIcon");return i(),l("div",null,[r,k,a(e,{hashtags:"javascript,Nodejs,Expressjs,Koa2"}),d,n("p",null,[v,m,b,g,h,f,x,w,_,y,n("a",j,[q,a(t)])]),E,n("p",null,[K,n("a",T,[P,a(t)])]),N,n("p",null,[H,n("a",$,[A,a(t)]),R]),I,n("p",null,[S,n("a",V,[X,a(t)]),D]),B,a(e,{hashtags:"javascript,Nodejs,Expressjs,Koa2"}),W,n("ul",null,[n("li",null,[n("a",L,[M,a(t)])]),n("li",null,[n("a",z,[C,a(t)])]),n("li",null,[n("a",J,[U,a(t)])]),n("li",null,[n("a",F,[G,a(t)])])])])}var nn=c(u,[["render",O],["__file","express-vs-koa.html.vue"]]);export{nn as default};
