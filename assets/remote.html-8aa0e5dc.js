import{_ as e,o as a,c as n,f as s}from"./app-4f8ac264.js";const t={},i=s(`<h1 id="remote-遠端協同工作-remote-fetch-pull-push" tabindex="-1"><a class="header-anchor" href="#remote-遠端協同工作-remote-fetch-pull-push" aria-hidden="true">#</a> Remote 遠端協同工作 - remote, fetch, pull, push</h1><h2 id="顯示你的遠端" tabindex="-1"><a class="header-anchor" href="#顯示你的遠端" aria-hidden="true">#</a> 顯示你的遠端</h2><p><code>git remote</code> 命令可以檢視你已經設定好的遠端版本庫， 它會列出每個遠端版本庫的「簡稱」。</p><p>可以指定 <code>-v</code> 選項來顯示 Git 用來讀寫遠端簡稱時所用的網址。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> remote
origin

$ <span class="token function">git</span> remote <span class="token parameter variable">-v</span>
origin	https://github.com/schacon/ticgit <span class="token punctuation">(</span>fetch<span class="token punctuation">)</span>
origin	https://github.com/schacon/ticgit <span class="token punctuation">(</span>push<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="新增遠端版本庫" tabindex="-1"><a class="header-anchor" href="#新增遠端版本庫" aria-hidden="true">#</a> 新增遠端版本庫</h2><p>使用 <code>git remote add &lt;簡稱&gt; &lt;url&gt;</code> 來新增遠端版本庫。</p><p>實作上常用於將本地倉庫推送到雲端倉庫時，先新增遠端版本庫後，再進行 push 指令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/example/test-repo.git
$ <span class="token function">git</span> push <span class="token parameter variable">-u</span> origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="刪除遠端版本庫" tabindex="-1"><a class="header-anchor" href="#刪除遠端版本庫" aria-hidden="true">#</a> 刪除遠端版本庫</h2><p>使用 <code>git remote rm &lt;簡稱&gt;</code> 來刪除。刪除前建議先確認目標的位置，避免誤刪</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> remote <span class="token function">rm</span> test-origin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="遠端獲取或拉取" tabindex="-1"><a class="header-anchor" href="#遠端獲取或拉取" aria-hidden="true">#</a> 遠端獲取或拉取</h2><p><code>git fetch</code> 這個命令會連到遠端專案，然後從遠端專案中將你還沒有的資料全部拉下來；</p><p>注意！<code>git fetch</code> 只會下載資料到你的版本庫——它並不會自動合併你的任何工作內容，也不會自動修改你正在修改的東西，</p><p>如果目前分支被設定為「追蹤」遠端上的分支，便可使用 <code>git pull</code> 命令來自動「獲取」並「合併」那個遠端分支到你目前的分支裡去。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> fetch <span class="token punctuation">[</span>remote-name<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>實際上 <code>git pull</code> 就是同時執行了 fetch 跟 merge。</p><h2 id="推送到你的遠端" tabindex="-1"><a class="header-anchor" href="#推送到你的遠端" aria-hidden="true">#</a> 推送到你的遠端</h2><p><code>git push</code> 只有在你對克隆來源的伺服器有寫入權限，並且在這個當下還沒有其它人推送過，這個命令才會成功；</p><p>如果你和其它人同時做了克隆，然後他們先推送到雲端，接著你才推送到雲端，毫無疑問地你的推送會被拒絕；</p><p>你必需先拉取他們的工作內容，將其整併到你之前的工作內容，如此你才會被允許推送。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push <span class="token punctuation">[</span>remote-name<span class="token punctuation">]</span> <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,23),c=[i];function d(o,r){return a(),n("div",null,c)}const p=e(t,[["render",d],["__file","remote.html.vue"]]);export{p as default};
