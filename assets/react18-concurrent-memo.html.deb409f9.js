import{_ as e,r as p,o,c,d as n,e as s,a as i,f as a}from"./app.ea35c5c5.js";const l={},u=a(`<h1 id="react-18-concurrent-features-memo" tabindex="-1"><a class="header-anchor" href="#react-18-concurrent-features-memo" aria-hidden="true">#</a> React 18 - Concurrent Features Memo</h1><p>\u9019\u7BC7\u662F\u6211\u5728\u5B78\u7FD2 React 18 \u7684 Concurrent Features \u904E\u7A0B\u4E2D\u4E00\u4E9B\u7B46\u8A18\u7684\u7D00\u9304\uFF0C\u4F9B\u65E5\u5F8C\u8907\u7FD2\u6216\u662F\u5FEB\u901F\u67E5\u770B\u53C3\u8003\u7528~</p><h2 id="key-features" tabindex="-1"><a class="header-anchor" href="#key-features" aria-hidden="true">#</a> Key Features</h2><h3 id="auto-batching" tabindex="-1"><a class="header-anchor" href="#auto-batching" aria-hidden="true">#</a> Auto Batching</h3><p>\u6279\u6B21\u8655\u7406\uFF0C\u96D6\u7136 v16 \u6642\u5C31\u6709\u76F8\u95DC\u529F\u80FD\uFF0C\u4F46\u5C0D\u65BC\u50CF timeouts, promises, native event handlers \u7B49\u975E React \u4E8B\u4EF6\u662F\u4E0D\u6703\u8655\u7406\u7684\uFF0C\u4F46\u5728 v18 \u5F8C\u4E0D\u8AD6\u5728\u54EA\uFF0C\u90FD\u6703\u81EA\u52D5\u5408\u4F75(\u5BE6\u6E2C\u767C\u73FE v17 \u6642\uFF0C\u4E0B\u9762\u7BC4\u4F8B\u5C31\u5DF2\u7D93\u6709\u5408\u4F75\u4E86)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">++</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;in&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;after&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;out&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span><span class="token operator">&gt;</span>Hello World<span class="token punctuation">,</span> <span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token comment">// after 0</span>
<span class="token comment">// out 1</span>
<span class="token comment">// in 0</span>
<span class="token comment">// out 1</span>
<span class="token comment">// in 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91DD\u5C0D\u7279\u6B8A\u5834\u666F v18 \u5F8C\u53EF\u4F7F\u7528 <code>React.flushSync</code> \u9032\u884C\u540C\u6B65\u53D6\u503C\uFF0C\u5176\u539F\u7406\u4E3B\u8981\u5C31\u662F\u4F9D\u9760<code>React\u4E8B\u4EF6\u512A\u5148\u7D1A</code>\u7684\u8A2D\u5B9A\u4F86\u8ABF\u914D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>ReactDOM<span class="token punctuation">.</span><span class="token function">flushSync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> count <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> count <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transition" tabindex="-1"><a class="header-anchor" href="#transition" aria-hidden="true">#</a> Transition</h3><p>\u9019\u500B Transition \u8981\u6CE8\u610F\u4E0D\u662F Vuejs \u88E1\u7684\u90A3\u500B\uFF0C\u800C\u662F\u91DD\u5C0D\u8017\u6642\u963B\u585E\u7684\u7D50\u679C\u9032\u884C\u7279\u5225\u8655\u7406\uFF0C\u8B93\u771F\u6B63\u91CD\u8981\u7DCA\u6025\u7684\u756B\u9762\u66F4\u65B0\u512A\u5148\u7684\u4E00\u500B\u6A5F\u5236\uFF0C\u5BE6\u73FE\u7684\u539F\u7406\u4E5F\u662F\u9032\u884C\u512A\u5148\u7D1A\u7684\u5B9A\u7FA9\uFF0C\u5728 <code>startTransition</code> \u6642\u6703\u5C07\u512A\u5148\u7D1A\u8ABF\u4F4E\uFF0C\u78BA\u4FDD\u5176\u4E2D\u7684\u4EFB\u52D9\u4EE5\u8F03\u4F4E\u7684\u512A\u5148\u7D1A\u66F4\u65B0\uFF0C\u800C <code>useTransition</code> \u5247\u662F\u4EE5 <code>useState</code>, <code>startTransition</code> \u7DAD\u8B77\u4E00\u500B <code>isPending</code> \u72C0\u614B\uFF0C\u4E26\u4EE5\u666E\u901A\u3001transition \u5169\u7A2E\u512A\u5148\u7D1A\u8ABF\u7528 <code>setPending</code>\uFF0C\u78BA\u4FDD\u4E86 isPending \u6703\u5728 startTransition \u5167\u90E8\u5DE5\u4F5C\u7D50\u675F\u5F8C\u624D\u66F4\u65B0\u70BA false\u3002</p>`,10),r={href:"https://juejin.cn/post/7095185674151821348#heading-6",target:"_blank",rel:"noopener noreferrer"},d=a(`<h4 id="starttransition" tabindex="-1"><a class="header-anchor" href="#starttransition" aria-hidden="true">#</a> startTransition</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> startTransition <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// Urgent</span>
<span class="token function">setSliderValue</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Mark any state updates inside as transitions</span>
<span class="token function">startTransition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Transition: Show the results</span>
  <span class="token function">setGraphValue</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="usetransition" tabindex="-1"><a class="header-anchor" href="#usetransition" aria-hidden="true">#</a> useTransition</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useTransition <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>isPending<span class="token punctuation">,</span> startTransition<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">return</span> isPending <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>Spinner <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8207\u50B3\u7D71 <code>setTimeout / throttle / debounce</code> \u512A\u5316\u7684\u5340\u5225\u5982\u4E0B</p><ul><li>\u57F7\u884C\u6642\u6A5F<br><code>setTimout/throttle/debounce</code> \u5747\u70BA\u7570\u6B65\u57F7\u884C\uFF0C\u800Ctransition\u70BA<code>\u540C\u6B65\u57F7\u884C</code>\uFF0C\u56E0\u6B64\u6703\u6BD4\u4ED6\u5011\u66F4\u65E9\u7684\u89F8\u767C\u66F4\u65B0\u8ABF\u5EA6\uFF0C\u5728\u6027\u80FD\u8F03\u597D\u6642\u53EF\u80FD\u5728\u540C\u4E00\u5E40\u5B8C\u6210\u66F4\u65B0\uFF0C\u800C\u9019\u7A2E\u60C5\u6CC1\u5728\u6BD4\u5982throttle\u4E2D\u88AB\u5F37\u5236\u62C9\u5927\uFF0C\u6BD4\u5982100ms</li><li>\u4EA4\u4E92\u9AD4\u9A57<br> \u4E0D\u7BA1\u662F\u5EF6\u9072\u9084\u662F\u6E1B\u983B\uFF0C\u7576\u771F\u6B63\u89F8\u767C\u66F4\u65B0\uFF0C\u5982\u679C\u6E32\u67D3\u6642\u9593\u6BD4\u8F03\u4E45\uFF0C\u4F9D\u7136\u6703\u767C\u751F\u754C\u9762\u5361\u9813\uFF0C\u800C\u901A\u904Etransition\u89F8\u767C\u7684\u66F4\u65B0\u4E26\u4E0D\u6703\u963B\u585E\u7528\u6236\u754C\u9762\uFF0C\u80FD\u5920\u4E00\u76F4\u4FDD\u6301\u97FF\u61C9</li><li>\u7CBE\u78BA\u63A7\u5236<br> \u9700\u8981\u984D\u5916\u5BE6\u73FEloading\u63A7\u5236\uFF0C\u800C\u4E14\u5F80\u5F80\u4E0D\u5920\u7CBE\u78BA\uFF0C\u73FE\u5728transition\u5167\u90E8\u6703\u70BA\u6211\u5011\u81EA\u52D5\u7DAD\u8B77\u9019\u500Bloading\u72C0\u614B\uFF0C\u4E26\u4E14\u8DB3\u5920\u7CBE\u78BA</li></ul><h4 id="usedeferredvalue" tabindex="-1"><a class="header-anchor" href="#usedeferredvalue" aria-hidden="true">#</a> useDeferredValue</h4><p>\u900F\u904E <code>useTransition</code> \u6211\u5011\u53EF\u4EE5\u6A19\u8A18\u512A\u5148\u7D1A\u4F4E\u7684\u66F4\u65B0\u52D5\u4F5C\uFF0C\u4F46\u5982\u679C\u5177\u9AD4\u4E0D\u78BA\u5B9A\u6703\u600E\u9EBC\u66F4\u65B0\u72C0\u614B\uFF0C\u5247\u53EF\u4EE5\u5728\u6700\u4E00\u958B\u59CB\u5B9A\u7FA9\u72C0\u614B\u6642\u5C31\u900F\u904E <code>useDeferredValue</code> \u6A19\u8A18\u4ED6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useDeferredValue <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Comp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> graphValue <span class="token operator">=</span> <span class="token function">useDeferredValue</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...updating depends on graphValue</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="root-api" tabindex="-1"><a class="header-anchor" href="#root-api" aria-hidden="true">#</a> Root API</h3><p>\u521D\u59CB\u5316\u7684\u90E8\u5206 v18 \u958B\u59CB\u6709\u4E86\u6539\u52D5\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ReactDOMClient <span class="token keyword">from</span> <span class="token string">&#39;react-dom/client&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Create a root.</span>
<span class="token keyword">const</span> root <span class="token operator">=</span> ReactDOMClient<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Initial render: Render an element to the root.</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function k(v,m){const t=p("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("\u8A73\u7D30\u53EF"),n("a",r,[s("\u53C3\u8003\u9019\u7BC7\u8B1B\u89E3"),i(t)])]),d])}const h=e(l,[["render",k],["__file","react18-concurrent-memo.html.vue"]]);export{h as default};
