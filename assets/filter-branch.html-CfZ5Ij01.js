import{_ as e,c as n,d as s,o as t}from"./app-CD0kgWCL.js";const i={};function l(r,a){return t(),n("div",null,a[0]||(a[0]=[s(`<h1 id="git-filter-branch" tabindex="-1"><a class="header-anchor" href="#git-filter-branch"><span>Git Filter Branch</span></a></h1><p>這個指令可以針對所有 branch 檔案做一系列操作進行修改</p><blockquote><p>針對大型 git repo 有已知的效能問題，使用時需要特別注意，或是提前做好檔案備份，因為使用此指令操作後，相關檔案很可能無法還原</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">git</span> filter-branch --tree-filter <span class="token string">&quot;&lt;command&gt;&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="操作範例" tabindex="-1"><a class="header-anchor" href="#操作範例"><span>操作範例</span></a></h2><h3 id="從所有歷史紀錄中-刪除指定檔案" tabindex="-1"><a class="header-anchor" href="#從所有歷史紀錄中-刪除指定檔案"><span>從所有歷史紀錄中，刪除指定檔案</span></a></h3><p>這邊使用 <code>-f</code> 強制操作，因為 filter-branch 預設會拒絕對名稱為 refs/original/ 開頭的目錄檔案進行操作</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">git</span> filter-branch <span class="token parameter variable">-f</span> --tree-filter <span class="token string">&quot;rm -f config/database.yml&quot;</span></span>
<span class="line"><span class="token comment"># 移除備份點</span></span>
<span class="line">$ <span class="token function">rm</span> .git/refs/original/refs/heads/master</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此操作後，還需要搭配 git reflog 紀錄刪除才能真正把 <code>.git</code> 中的歷史資訊全部清除，以下是簡化操作，詳細說明請見 <code>reflog</code> 章節</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">git</span> reflog expire <span class="token parameter variable">--all</span> <span class="token parameter variable">--expire</span><span class="token operator">=</span>now</span>
<span class="line">$ <span class="token function">git</span> <span class="token function">fsck</span> <span class="token parameter variable">--unreachable</span></span>
<span class="line">$ <span class="token function">git</span> gc <span class="token parameter variable">--prune</span><span class="token operator">=</span>now</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>另外需注意，Windows 系統複製路徑會是 <code>config\\database.yml</code> 以 <code>\\</code> 連接路徑，可能導致 git filter-branch 後方 rm 對象找不到而失敗</p></blockquote>`,11)]))}const o=e(i,[["render",l],["__file","filter-branch.html.vue"]]),p=JSON.parse('{"path":"/articles/git/filter-branch.html","title":"Git Filter Branch","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"操作範例","slug":"操作範例","link":"#操作範例","children":[{"level":3,"title":"從所有歷史紀錄中，刪除指定檔案","slug":"從所有歷史紀錄中-刪除指定檔案","link":"#從所有歷史紀錄中-刪除指定檔案","children":[]}]}],"git":{"updatedTime":1739535172000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"}]},"filePathRelative":"articles/git/filter-branch.md"}');export{o as comp,p as data};
