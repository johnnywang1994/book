import{_ as t,r as o,o as i,c as l,d as n,e as s,a as e,f as p}from"./app.b02cd678.js";const c={},r=p(`<h1 id="graphql-\u5B78\u7FD2\u7B46\u8A18-\u9032\u968E\u7BC7" tabindex="-1"><a class="header-anchor" href="#graphql-\u5B78\u7FD2\u7B46\u8A18-\u9032\u968E\u7BC7" aria-hidden="true">#</a> GraphQL \u5B78\u7FD2\u7B46\u8A18 - \u9032\u968E\u7BC7</h1><h2 id="custom-scalar" tabindex="-1"><a class="header-anchor" href="#custom-scalar" aria-hidden="true">#</a> Custom Scalar</h2><p>\u7576\u61C9\u7528\u7A0B\u5F0F\u8D8A\u4F86\u8D8A\u8907\u96DC\u5F8C\uFF0C\u9810\u8A2D GraphQL \u63D0\u4F9B\u7684 Scalar Type <code>Int</code>, <code>Float</code>, <code>String</code>, <code>Boolean</code>, <code>ID</code> \u6703\u6F38\u6F38\u7121\u6CD5\u771F\u5BE6\u6AA2\u9A57\u8CC7\u6599\u985E\u578B\uFF0C\u6709\u8DDF\u6C92\u6709\u4E00\u6A23\uFF0C\u6B64\u6642\u53EF\u4EE5\u900F\u904E\u5BA2\u88FD\u5316 GraphQL \u7684 scalar \u4F86\u589E\u5F37\u9019\u529F\u80FD\uFF0C\u7576\u7136\u4E5F\u80FD\u5B89\u88DD\u5176\u4ED6\u5DE5\u5177\u5957\u4EF6\u5E6B\u5FD9\u5594\uFF5E</p><h3 id="date-\u5BE6\u4F5C\u7BC4\u4F8B" tabindex="-1"><a class="header-anchor" href="#date-\u5BE6\u4F5C\u7BC4\u4F8B" aria-hidden="true">#</a> Date \u5BE6\u4F5C\u7BC4\u4F8B</h3><ul><li><code>name</code> (Required) Scalar Type \u540D\u7A31 (\u9700\u5C0D\u4E0A schema \u5B9A\u7FA9\u6642\u7684\u540D\u7A31)</li><li><code>description</code> (Optional) Scalar Type \u4ECB\u7D39</li><li><code>serialize(value)</code> (Required) Server \u56DE\u8986\u7D66 Client \u7684\u503C\u3002 <blockquote><p>\u7576 Server \u5728 Resolver \u8655\u7406\u5B8C\u8CC7\u6599\u8F38\u51FA\u6642\uFF0C\u6703\u5C07\u7D50\u679C\u4EE5 <code>value</code> \u50B3\u9032\u4F86\uFF0C\u800C serialize \u6C7A\u5B9A\u6700\u5F8C\u8F38\u51FA\u7684\u503C\u3002\u9700\u6CE8\u610F\uFF01\u9019\u908A\u8F38\u51FA\u7684\u503C\u7684\u578B\u5225\u53EA\u8981\u662F JSON \u683C\u5F0F\u5141\u8A31\u7684\u503C\u90FD\u884C\uFF0C\u5982 Int, String, Object, Array \u7B49\u7B49\u3002</p></blockquote></li><li><code>parseValue(value)</code> (Required) Client \u50B3\u7D66 Server \u7684\u503C\uFF0C <code>value</code> \u6703\u5F9E variables \u4E2D\u7372\u5F97\u3002</li><li><code>parseLiteral(ast)</code> (Required) Client \u50B3\u7D66 Server \u7684\u503C\uFF0C ast \u6703\u5F9E query \u5B57\u4E32\u4E2D\u89E3\u6790\u51FA\u4F86\uFF0C\u800C ast \u7684\u503C\u662F\u4E00\u500B AST \u683C\u5F0F\u7684 Object\uFF0C\u8209\u500B\u4F8B\u5B50\u5982\u4E0B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> gql <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;apollo-server&#39;</span>

<span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token function">gql</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  scalar Date
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> GraphQLScalarType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;graphql&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Kind <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;graphql/language&#39;</span>

<span class="token keyword">const</span> resolvers <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">Date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">GraphQLScalarType</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Date&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;Date custom scalar type&#39;</span><span class="token punctuation">,</span>
    <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// value sent to the client</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">parseValue</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// value from the client</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">parseLiteral</span><span class="token punctuation">(</span><span class="token parameter">ast</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F9E\u524D\u7AEF query \u5B57\u4E32\u9032\u4F86\u7684 input</span>
      <span class="token comment">// \u9019\u908A\u50C5\u63A5\u53D7\u8F38\u5165\u9032\u4F86\u7684\u662F Int \u503C</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>ast<span class="token punctuation">.</span>kind <span class="token operator">===</span> Kind<span class="token punctuation">.</span><span class="token constant">INT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>ast<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ast value is always in string format</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5916\u90E8\u5957\u4EF6-okgrow-graphql-scalars" tabindex="-1"><a class="header-anchor" href="#\u5916\u90E8\u5957\u4EF6-okgrow-graphql-scalars" aria-hidden="true">#</a> \u5916\u90E8\u5957\u4EF6 @okgrow/graphql-scalars</h3><p>schema \u90E8\u5206\u4E00\u6A23\u9700\u8981\u81EA\u884C\u5B9A\u7FA9\uFF0Cresolver \u76F4\u63A5\u5F15\u5165\u5C31\u5B8C\u6210\u4E86\uFF01</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DateTime <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@okgrow/graphql-scalars&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> resolvers <span class="token operator">=</span> <span class="token punctuation">{</span>
  DateTime<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="interface" tabindex="-1"><a class="header-anchor" href="#interface" aria-hidden="true">#</a> Interface</h2>`,11),u={href:"https://ithelp.ithome.com.tw/articles/10207038",target:"_blank",rel:"noopener noreferrer"},d=p(`<h3 id="\u7BC4\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u7BC4\u4F8B" aria-hidden="true">#</a> \u7BC4\u4F8B</h3><p>\u4ECA\u5929\u6709\u500B\u8CBC\u6587\u529F\u80FD\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type Post <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
  <span class="token literal-property property">author</span><span class="token operator">:</span> User<span class="token operator">!</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> String
  <span class="token literal-property property">body</span><span class="token operator">:</span> String
<span class="token punctuation">}</span>

type User <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String
  <span class="token literal-property property">avatarUrl</span><span class="token operator">:</span> String
  <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token punctuation">[</span>User<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

type Query <span class="token punctuation">{</span>
  <span class="token function">post</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span><span class="token punctuation">)</span><span class="token operator">:</span> Post
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u67E5\u8A62 post \u7684\u4F5C\u8005 query \u8ACB\u6C42\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>query <span class="token punctuation">{</span>
  <span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    author <span class="token punctuation">{</span>
      name
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u5982\u679C\u4ECA\u5929\u8981\u52A0\u5165\u4E00\u500B <code>\u7C89\u7D72\u5C08\u9801</code> \u529F\u80FD\uFF0C\u800C\u7C89\u7D72\u5C08\u9801\u4E5F\u53EF\u4EE5\u65B0\u589E\u8CBC\u6587\uFF0Cschema \u5982\u4E0B\uFF0C\u539F\u672C\u7684 <code>Post.author</code> \u986F\u7136\u7121\u6CD5\u540C\u6642\u6EFF\u8DB3\u9019\u5169\u500B type\uFF0C\u6B64\u6642\u5C31\u53EF\u4EE5\u5229\u7528 <code>interface</code> \u7684\u591A\u578B\u8655\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type FanPage <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String
  <span class="token literal-property property">avatarUrl</span><span class="token operator">:</span> String
  <span class="token literal-property property">likeGivers</span><span class="token operator">:</span> <span class="token punctuation">[</span>User<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u7FA9\u5171\u540C\u7684\u90E8\u5206\u9032\u884C\u591A\u578B\u7684 <code>implements</code>\uFF0C\u4E26\u5C07 <code>Post.author</code> \u7D66\u4E88\u8A72 <code>interface</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type Post <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
  <span class="token literal-property property">author</span><span class="token operator">:</span> Charater<span class="token operator">!</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> String
  <span class="token literal-property property">body</span><span class="token operator">:</span> String
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Character</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String
  <span class="token literal-property property">avatarUrl</span><span class="token operator">:</span> String
<span class="token punctuation">}</span>

type User <span class="token keyword">implements</span> <span class="token class-name">Character</span><span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String
  <span class="token literal-property property">avatarUrl</span><span class="token operator">:</span> String
  <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token punctuation">[</span>User<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

type FanPage <span class="token keyword">implements</span> <span class="token class-name">Character</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String
  <span class="token literal-property property">avatarUrl</span><span class="token operator">:</span> String
  <span class="token literal-property property">likeGivers</span><span class="token operator">:</span> <span class="token punctuation">[</span>User<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5957\u7528\u4E86 interface \u7684 <code>author</code> field \u5C31\u53EF\u4EE5\u6839\u64DA\u60C5\u6CC1\u53D6\u5F97\u4E0D\u540C\u7684 type \u9032\u884C\u5C55\u958B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>query <span class="token punctuation">{</span>
  <span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    author <span class="token punctuation">{</span>
      name
      <span class="token operator">...</span>on User <span class="token punctuation">{</span>
        friends <span class="token punctuation">{</span>
          name
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token operator">...</span>on FanPage <span class="token punctuation">{</span>
        likeGivers <span class="token punctuation">{</span>
          name
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9019\u6A23 GraphQL \u5C31\u6703\u5224\u65B7\uFF0C\u5982\u679C\u4F5C\u8005\u662F <code>User Type</code> \u90A3\u5C31\u6703\u9032\u5165 ...on User \u4E26\u56DE\u50B3\u5176\u4E2D\u7684 fields \uFF0C\u5982\u679C\u662F FanPage Type \u90A3\u5C31\u6703\u9032\u5165 ...on FanPage \u4E26\u56DE\u50B3\u5176\u4E2D\u7684 fields \u3002</p><blockquote><p><code>...on SpcificType { ... }</code> \u53EB\u505A <code>inline fragment</code></p></blockquote><h3 id="\u5BE6\u4F5C-interface" tabindex="-1"><a class="header-anchor" href="#\u5BE6\u4F5C-interface" aria-hidden="true">#</a> \u5BE6\u4F5C interface</h3><p>\u82E5\u4ECA\u5929\u6211\u5011\u9700\u8981\u76F4\u63A5\u5728 query \u4E2D\u8FD4\u56DE interface\uFF0C \u5FC5\u9700\u660E\u78BA\u6307\u5B9A <code>Object Type</code> \u7684\u540D\u7A31\uFF0C\u5982\u4E0B\u9762\u7BC4\u4F8B\u6211\u5011\u5728 Query \u4E2D\u7684 animal field \u8FD4\u56DE\u4E86 interface</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String
<span class="token punctuation">}</span>

type Bird <span class="token keyword">implements</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String
  <span class="token literal-property property">wingSpanLength</span><span class="token operator">:</span> Int
<span class="token punctuation">}</span>

type Monkey <span class="token keyword">implements</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String
  <span class="token literal-property property">armSpanLength</span><span class="token operator">:</span> Int
<span class="token punctuation">}</span>

type Query <span class="token punctuation">{</span>
  <span class="token function">animal</span><span class="token punctuation">(</span>name<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> Animal
  <span class="token literal-property property">animals</span><span class="token operator">:</span> <span class="token punctuation">[</span>Animal<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u5011\u9700\u8981\u5728 <code>resolver</code> \u4E2D\u5B9A\u7FA9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Chiken Litte&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">wingSpanLength</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Goku&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">armSpanLength</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;King Kong&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">armSpanLength</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> resolvers <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">Animal</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E00\u5B9A\u8981\u5BE6\u4F5C\u9019\u4E00\u500B\u7279\u6B8A field</span>
    <span class="token function">__resolveType</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> context<span class="token punctuation">,</span> info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// obj \u70BA\u8A72 field \u5F97\u5230\u7684\u8CC7\u6599</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>wingSpanLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u56DE\u50B3\u76F8\u5C0D\u61C9\u5F97 Object type \u540D\u7A31</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Bird&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>armSpanLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Monkey&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Query</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">animal</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> <span class="token punctuation">{</span> name <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> animals<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">animal</span> <span class="token operator">=&gt;</span> animal<span class="token punctuation">.</span>name <span class="token operator">===</span> name<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">animals</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> animals
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="node-interface-pattern" tabindex="-1"><a class="header-anchor" href="#node-interface-pattern" aria-hidden="true">#</a> Node Interface Pattern</h2><p>\u5BE6\u4F5C\u8D77\u4F86\u5F88\u7C21\u55AE\uFF0C\u4F46\u6982\u5FF5\u537B\u5F88\u91CD\u8981\uFF0C\u5728\u5927\u578B\u7684 <code>GraphQL Schema</code> \u4E2D\uFF0C\u4E00\u822C\u6703\u63A8\u85A6\u6240\u6709\u4E3B\u8981\u5546\u696D\u908F\u8F2F\u7269\u4EF6\u90FD\u8981\u5BE6\u4F5C <code>Node interface type</code>\uFF0C\u56E0\u70BA\u901A\u5E38\u9019\u4E9B\u7269\u4EF6\u5728 <code>database</code> \u4E2D\u90FD\u6709 <code>id</code> \uFF0C\u5BE6\u4F5C <code>Node interface type</code> \u53EF\u4EE5\u660E\u78BA\u544A\u8A34 Client \u9019\u662F\u4E00\u500B\u91CD\u8981\u6982\u5FF5\u7684\u7269\u4EF6\uFF0C\u4E26\u4E14\u53EF\u900F\u904E id \u7684\u64CD\u4F5C\u4F86\u505A caching \u53CA batching\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;ID of the object&quot;</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
<span class="token punctuation">}</span>

type User <span class="token keyword">implements</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

type Post <span class="token keyword">implements</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u751A\u81F3\u80FD\u7576\u6210\u5F37\u5927\u7684 id \u641C\u5C0B\u529F\u80FD\uFF0C\u53EF\u4EE5\u6839\u64DA\u9700\u8981\u9032\u884C <code>inline fragment</code> \u67E5\u627E\u5404\u7A2E type \u7684\u7269\u4EF6\u76EE\u6A19</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type Query <span class="token punctuation">{</span>
  <span class="token function">node</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token constant">ID</span><span class="token operator">!</span><span class="token punctuation">)</span><span class="token operator">:</span> Node
  <span class="token function">nodes</span><span class="token punctuation">(</span>ids<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">ID</span><span class="token operator">!</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span>Node<span class="token punctuation">]</span><span class="token operator">!</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="union" tabindex="-1"><a class="header-anchor" href="#union" aria-hidden="true">#</a> Union</h2><p>Interface type \u8207 Union type \u5F88\u5E38\u641E\u6DF7\uFF0C\u4EE5\u4E0B\u662F Union type \u7684\u7BC4\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>union Result <span class="token operator">=</span> Book <span class="token operator">|</span> Author

type Book <span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> String
<span class="token punctuation">}</span>

type Author <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String
<span class="token punctuation">}</span>

type Query <span class="token punctuation">{</span>
  <span class="token function">search</span><span class="token punctuation">(</span>contains<span class="token operator">:</span> String<span class="token operator">!</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span>Result<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5BE6\u4F5C Interface type \u7684 type \u90FD\u6709\u4E00\u4E9B\u5171\u901A fields (\u5F37\u5236\u8981\u5B9A\u7FA9)\uFF0C\u800C\u5728 Union type \u7BC4\u7587\u88E1\u7684 type \u5247\u4E0D\u5FC5\u6709\u5171\u901A fields</p></blockquote><p>\u5169\u8005\u7684\u76F8\u4F3C\u4E4B\u8655\u5728\u65BC\u6700\u7D42\u56DE\u50B3\u6642\u4E00\u5B9A\u8981\u662F\u4E00\u500B\u5BE6\u969B\u7684 type \uFF0C\u4E0D\u80FD\u50B3\u56DE interface \u6216 union type \u7684\u8CC7\u6599\u3002</p><p>\u63A5\u8457\u770B\u770B resolver \u7684\u90E8\u5206</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> authors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Mary&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> books <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Journey to the West&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Mary Loves Me&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> resolvers <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">Result</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E00\u5B9A\u8981\u5BE6\u4F5C\u9019\u4E00\u500B\u7279\u6B8A field</span>
    <span class="token function">__resolveType</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> context<span class="token punctuation">,</span> info</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// obj \u70BA\u8A72 field \u5F97\u5230\u7684\u8CC7\u6599</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u56DE\u50B3\u76F8\u5C0D\u61C9\u5F97 Object type \u540D\u7A31</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Author&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Book&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Query</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">search</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> <span class="token punctuation">{</span> body <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token punctuation">[</span>
        <span class="token operator">...</span>authors<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">author</span> <span class="token operator">=&gt;</span> author<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token operator">...</span>books<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">book</span> <span class="token operator">=&gt;</span> book<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="inline-fragment-with-union-type" tabindex="-1"><a class="header-anchor" href="#inline-fragment-with-union-type" aria-hidden="true">#</a> Inline fragment with Union type</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>query <span class="token punctuation">{</span>
  <span class="token function">search</span><span class="token punctuation">(</span>contains<span class="token operator">:</span> <span class="token string">&quot;Mary&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span> on Author <span class="token punctuation">{</span>
      name
    <span class="token punctuation">}</span>
    <span class="token operator">...</span> on Book <span class="token punctuation">{</span>
      title
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="interface-union-\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#interface-union-\u7684\u4F7F\u7528" aria-hidden="true">#</a> Interface &amp; Union \u7684\u4F7F\u7528</h2><p>\u5927\u591A\u6578\u60C5\u6CC1\u4E0B\u6BD4\u8F03\u5C11\u7528\u5230\uFF0C\u9664\u975E\u771F\u7684\u6709\u5FC5\u8981\u6642\u624D\u6703\u4F7F\u7528\uFF0C\u9664\u4E86\u589E\u52A0\u958B\u767C\u8005\u7684\u5FC3\u667A\u8CA0\u64D4\u5916\uFF0C\u4E5F\u6703\u5C0E\u81F4\u5F8C\u7AEF\u6574\u500B\u8907\u96DC\u5EA6\u7684\u6307\u6578\u63D0\u5347\uFF0C\u901A\u5E38\u9084\u662F\u5148\u4EE5 type \u53CA enum \u5617\u8A66\u5BE6\u4F5C\uFF0C\u771F\u7684\u6709\u5FC5\u8981\u6642\u624D\u4F7F\u7528 interface, union</p>`,34),k={href:"https://docs.github.com/en/graphql/overview/explorer",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),s(" Reference")],-1),m={href:"https://ithelp.ithome.com.tw/articles/10202596",target:"_blank",rel:"noopener noreferrer"};function b(y,h){const a=o("ExternalLinkIcon");return i(),l("div",null,[r,n("ul",null,[n("li",null,[n("a",u,[s("Link"),e(a)])])]),d,n("p",null,[s("\u53EF\u4EE5\u53C3\u8003 "),n("a",k,[s("Github GraphQL API Explorer"),e(a)]),s(" \u5BE6\u969B\u770B\u770B\u4F7F\u7528\u7684\u5834\u5883\u5B78\u7FD2\uFF5E")]),v,n("ul",null,[n("li",null,[n("a",m,[s("2019 IT \u90A6\u5E6B\u5FD9 - Think in GraphQL"),e(a)])])])])}const f=t(c,[["render",b],["__file","advance.html.vue"]]);export{f as default};
