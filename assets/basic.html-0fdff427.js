import{_ as i,r as d,o as r,c as o,d as e,e as n,a as c,f as a}from"./app-fc6c1b2a.js";const t={},l=a(`<h1 id="docker-基礎技術" tabindex="-1"><a class="header-anchor" href="#docker-基礎技術" aria-hidden="true">#</a> Docker 基礎技術</h1><p>主要記載一些常見指令及特殊用途指令等，以及一些小範例，方便日後回頭複習使用。</p><h2 id="basic-概念" tabindex="-1"><a class="header-anchor" href="#basic-概念" aria-hidden="true">#</a> Basic 概念</h2><p><em><strong>Image</strong></em></p><p>映像檔，傳統映像檔很大，使用docker 描述的映像檔體積輕巧許多，更方便於使用及傳輸。</p><p><em><strong>Container</strong></em><br> \b 容器，利用映像檔所創造，一個 Image 可以同時創造許多個Container。</p><p>Container 可以被啟動、開始、停止、刪除，環境互相分離。（可使用指令使其網路聯通。</p><h2 id="basic-指令" tabindex="-1"><a class="header-anchor" href="#basic-指令" aria-hidden="true">#</a> Basic 指令</h2><p><em><strong>查看所有 images</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>刪除指定 image</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> rmi IMAGE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>查看運行中的 containers</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>查看所有 containers(包含已關閉)</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>新建 container</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> IMAGE <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常見 OPTIONS 指令包含以下幾個</p><p><code>-it</code> 代表在顯性層執行</p><p><code>-d</code> 代表在背景層執行，執行完不會留在terminal中</p><p><code>-p</code> 映射port，使用方式為 -p 8081:80，冒號左側為local端port，右側為container端port</p><p><code>-v</code> 掛載volume，預設關閉container，內容會消失，若需要保留資料等，可掛載本地端位置給container使用，使用方式為 -v ./web/:/var/www/html/，冒號左側為本地端volume，右側為container端port</p><p><code>--rm</code> 設置此設定後，當關閉該container時，會自動刪除關閉的container</p><p><code>--name</code> 設置開啟container的name</p><p><code>--net</code> 設置開啟container使用的網路模式</p><p><em><strong>啟動 container</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> start CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>停止 container</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> stop CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>重新啟動 container</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> restart CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>刪除 container</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">rm</span> CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>進入 Container</strong></em></p><p>進入正在執行的container的terminal中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> attach CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以指定方式進入container中並開啟新terminal</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> CONTAINER <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>查看 Container詳細資料</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> inspect CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>查看 Container的 Log</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> logs CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>-f</code> follow log output</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>查看 Container的 使用資源</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> stats CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>暫時停止 Container內 所有行程</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pause CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>與 stop 不同，stop 是直接終止整個容器，pause只將內部行程關閉，container還是在運作</p><p>使用 unpause 可恢復行程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> unpause CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>停止所有正在運行的 Container</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> container stop <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-q</span><span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>刪除所有已關閉的 Container</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> container prune
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="volume-其他-待補充" tabindex="-1"><a class="header-anchor" href="#volume-其他-待補充" aria-hidden="true">#</a> Volume 其他 (待補充)</h2><p><em><strong>查看 Volume 清單</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> volume <span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>新建 Volume</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> volume create <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> <span class="token punctuation">[</span>NAME<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>刪除 Volume</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> volume <span class="token function">rm</span> <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> VOLUME
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>查看 Volume 詳細資料</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> volume inspect <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> VOLUME
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>刪除全部未使用的 Volume</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> volume prune
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="network-其他-待補充" tabindex="-1"><a class="header-anchor" href="#network-其他-待補充" aria-hidden="true">#</a> Network 其他（待補充）</h2><p>關於network ，建議可先了解docker 的基本4種網路模式，bridge, host, container, none。</p>`,69),p={href:"https://www.itread01.com/content/1542573736.html",target:"_blank",rel:"noopener noreferrer"},u=a(`<p>有助於後續學習與加深理解。</p><p><code>bridge</code> 為預設使用</p><p><em><strong>查看 network 清單</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network <span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>***指定 network ***</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--net</span><span class="token operator">=</span>bridge ubuntu <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>建立 network</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network create <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> <span class="token punctuation">[</span>NAME<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>移除 network</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network <span class="token function">rm</span> NETWORK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>移除全部未使用的 network</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network prune
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>查看 network 詳細資料</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network inspect <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> NETWORK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>將 container 連接 network</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network connect <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> NETWORK CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>斷開 container 所連接 network</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network disconnect <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> NETWORK CONTAINER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="其他使用指令" tabindex="-1"><a class="header-anchor" href="#其他使用指令" aria-hidden="true">#</a> 其他使用指令</h2><p><em><strong>Container 中查看 LINUX版本</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/os-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>Container 中查看 網路設定</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/hosts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>儲存image 為tar 檔案</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> save busybox <span class="token operator">&gt;</span> busybox.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>載入image</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> load <span class="token operator">&lt;</span> busybox.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,27);function m(v,g){const s=d("ExternalLinkIcon");return r(),o("div",null,[l,e("p",null,[n("參照"),e("a",p,[n("Docker網路管理（容器的四種網路模式）"),c(s)])]),u])}const h=i(t,[["render",m],["__file","basic.html.vue"]]);export{h as default};
