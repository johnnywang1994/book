import{_ as i,c as e,e as o,o as a}from"./app-NJTEVzrQ.js";const d={};function c(l,t){return a(),e("div",null,t[0]||(t[0]=[o('<h1 id="git-檔案比對與差異-diff" tabindex="-1"><a class="header-anchor" href="#git-檔案比對與差異-diff"><span>Git 檔案比對與差異 - diff</span></a></h1><h2 id="四種常用的比對方式" tabindex="-1"><a class="header-anchor" href="#四種常用的比對方式"><span>四種常用的比對方式</span></a></h2><p><img src="https://i.stack.imgur.com/y8gFk.png" alt=""></p><ol><li>git diff</li></ol><p>比對「工作目錄」與「索引」之間的差異，常用在 <code>git add .</code> 之前查看確認修改了哪些東西，實務上常常會在 commit 之前執行多次 <code>git add .</code>，此指令專門應對於此種場景，可以確認每次 add 前關於「本次內容」目前「索引」中的差異</p><ol start="2"><li>git diff [commit-id]</li></ol><p>比對「工作目錄」與「指定 commit 物件裡的那個 tree 物件」，最常使用 <code>git diff HEAD</code>，需注意此比對方式不會比對到「索引」中的內容</p><ol start="3"><li>git diff --staged/--cached [commit-id](預設 HEAD)</li></ol><p>比對「索引」與「指定 commit 物件裡的那個 tree 物件」</p><blockquote><p>--staged 只是 --cached 的別名</p></blockquote><ol start="4"><li>git diff [commit-id-1] [commit-id-2]</li></ol><p>比對兩個指定的 commit 物件裡的 tree 物件，最常用 <code>git diff HEAD^ HEAD</code>，代表【最新版的前一版】與【最新版】之間的差異</p>',12)]))}const f=i(d,[["render",c],["__file","diff.html.vue"]]),m=JSON.parse('{"path":"/articles/git/diff.html","title":"Git 檔案比對與差異 - diff","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"四種常用的比對方式","slug":"四種常用的比對方式","link":"#四種常用的比對方式","children":[]}],"git":{"updatedTime":1648521821000,"contributors":[{"name":"johnnywang1994","username":"johnnywang1994","email":"johnny29621189@kimo.com","commits":2,"url":"https://github.com/johnnywang1994"}]},"filePathRelative":"articles/git/diff.md"}');export{f as comp,m as data};
