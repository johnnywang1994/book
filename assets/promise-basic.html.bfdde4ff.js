import{_ as p,r as t,o as e,c as o,a as s,d as a,e as c,f as i}from"./app.f59ddb72.js";const l={},u=a("h1",{id:"promise-\u76F8\u95DC\u77E5\u8B58",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#promise-\u76F8\u95DC\u77E5\u8B58","aria-hidden":"true"},"#"),c(" Promise \u76F8\u95DC\u77E5\u8B58")],-1),k=i(`<p>\u7D00\u9304 Promise \u76F8\u95DC\u5B78\u7FD2\u57FA\u790E\u8207\u9032\u968E\u61C9\u7528\u6CE8\u610F\u4E8B\u9805\u3002</p><p>Promise \u662F\u4E00\u500B\u7570\u6B65(\u975E\u540C\u6B65)\u7684\u539F\u751F WEB API\uFF0C\u63D0\u4F9B\u958B\u767C\u8005\u63A7\u5236\u975E\u540C\u6B65\u64CD\u4F5C\u7684\u9700\u6C42\uFF0C\u57FA\u790E\u6982\u5FF5\u5F88\u7C21\u55AE\uFF0C\u4F46\u5BE6\u969B\u7528\u7684\u6642\u5019\uFF0C\u537B\u6703\u5E38\u5E38\u9047\u5230\u8A31\u591A\u554F\u984C\uFF0C\u672C\u7BC7\u7D00\u9304\u4E00\u4E9B\u5E95\u5C64\u7406\u89E3\u8DDF\u5E38\u898B\u554F\u984C\u3002</p><h2 id="\u77E5\u8B58\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u77E5\u8B58\u6982\u5FF5" aria-hidden="true">#</a> \u77E5\u8B58\u6982\u5FF5</h2><p>Promise \u662F\u4E00\u500B\u539F\u751F\u7269\u4EF6\uFF0C\u4F7F\u7528\u6642\u6703\u5148\u9032\u884C\u5BE6\u4F8B\u5316\uFF0C\u4E26\u540C\u6642\u50B3\u5165\u4E00\u500B function \u5728\u5BE6\u4F8B\u5316\u7684\u540C\u6642\u57F7\u884C\uFF0C\u8A72 function \u63D0\u4F9B\u5169\u500B\u56DE\u8ABF\u4F7F\u7528\uFF0C\u5206\u5225\u662F resolve, reject\uFF0C\u4F9D\u7167\u958B\u767C\u8005\u7684\u8ABF\u7528\u5C07\u7576\u524D promise \u5BE6\u4F8B\u72C0\u614B\u7531 pending \u8F49\u70BA fullfilled \u6216 rejected \u72C0\u614B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8ABF\u7528 resolve \u6216 reject \u5F8C\uFF0Cpromise \u6703\u5206\u5225\u63A5\u8457\u57F7\u884C\u5F8C\u7E8C\u7684 then \u6216 catch \u4E2D\u7684\u52D5\u4F5C\uFF0C\u9019\u5169\u500B\u90FD\u662F promise \u7684\u65B9\u6CD5\uFF0C\u63D0\u4F9B\u958B\u767C\u8005\u9032\u884C\u4E32\u63A5\u3002</p><ol><li><strong>then</strong></li></ol><ul><li>\u7576 promise \u5BE6\u4F8B\u4E2D\u6C92\u6709\u8ABF\u7528 resolve \u56DE\u8ABF\u6642\uFF0C\u5373\u4E0D\u6703\u57F7\u884C\u8A72 promise \u5F8C\u7E8C\u7684\u4EFB\u4F55 then \u52D5\u4F5C\u3002</li><li>\u7576 then \u63A5\u6536\u7684\u6771\u897F\u4E0D\u662F function \u6642\uFF0C\u6703\u5EFA\u7ACB\u4E00\u500B\u65B0\u7684 promise\uFF0C\u4E26\u63A5\u6536\u524D\u4E00\u500B promise \u7684\u72C0\u614B\u7368\u7ACB\u57F7\u884C\uFF0C\u8A72\u7368\u7ACB\u7684 promise \u4E2D resolve \u56DE\u50B3\u7684\u6771\u897F\uFF0C\u4E0D\u6703\u5F71\u97FF\u539F\u672C\u6700\u521D\u7684 promise resolve\u56DE\u50B3\u3002</li><li>\u7576 then \u63A5\u6536 function\uFF0C\u4F46\u6C92\u6709 return \u6642\uFF0C\u5247\u5167\u90E8\u57F7\u884C\u7684\u7D50\u679C\uFF0C\u5373\u7121\u6CD5\u50B3\u905E\u5230\u4E0B\u4E00\u500B then \u4E2D\u3002</li></ul><ol start="2"><li><strong>catch</strong></li></ol><ul><li>\u7576 catch \u88AB\u8ABF\u7528\u5F8C\uFF0Cpromise \u5167\u90E8\u932F\u8AA4\u5373\u88AB\u6514\u622A\uFF0C\u5176\u5F8C\u4EFB\u4F55 then \u6216 catch \u5C07\u4E0D\u6703\u6536\u5230\u4EFB\u4F55\u5167\u5BB9\u3002</li></ul><h2 id="\u5E38\u898B\u4F7F\u7528\u554F\u984C" tabindex="-1"><a class="header-anchor" href="#\u5E38\u898B\u4F7F\u7528\u554F\u984C" aria-hidden="true">#</a> \u5E38\u898B\u4F7F\u7528\u554F\u984C</h2><ol><li>\u7A7F\u900F\u554F\u984C</li></ol><p>\u7576 then \u4E2D\u76F4\u63A5\u653E\u5165\u4E00\u500B promise \u6642\uFF0C\u6703\u88AB\u5EFA\u7ACB\u70BA\u65B0\u7684 promise \u7368\u7ACB\u57F7\u884C\uFF0C\u5373\u4E0D\u6703\u5F71\u97FF\u539F\u672C promise \u7684\u5167\u90E8\u503C\u50B3\u905E\u3002 \u6545\u9019\u908A\u6700\u5F8C\u9084\u662F\u6703\u5F97\u5230\u6700\u958B\u59CB\u7684\u56DE\u50B3\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">p1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">p2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">p3</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">p1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">p2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p1</span>
<span class="token comment">// p2</span>
<span class="token comment">// p3</span>
<span class="token comment">// A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u672A\u77E5\u56DE\u50B3</li></ol><p>\u7576 then \u7684 function \u88E1\u9762\u6C92\u6709 return \u4EFB\u4F55\u6771\u897F\u6642\uFF0C\u4E0B\u4E00\u500B then \u4E2D\u5C07\u7121\u6CD5\u53D6\u5F97\u4EFB\u4F55\u6771\u897F\u3002\u4F7F\u7528\u6642\u8981\u8A18\u5F97\u5728 then \u4E2D\u50B3\u56DE\u7D50\u679C\uFF0C\u9664\u975E\u5F8C\u7E8C\u5DF2\u7D93\u6C92\u6709\u9700\u8981\u7528\u5230\u4EFB\u4F55\u7D50\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">p1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">p2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p1</span>
<span class="token comment">// p2</span>
<span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u975E\u540C\u6B65\u63A7\u5236\u554F\u984C(\u8207 1. \u7684\u72C0\u6CC1\u76F8\u540C)</li></ol><p>\u7576 then \u88E1\u9762\u4E0D\u662F function \u6642\uFF0C\u65B0\u5EFA\u7ACB\u7684 promise \u56E0\u70BA\u672C\u8CEA\u4E0A\u548C\u539F promise \u6C92\u6709\u95DC\u4FC2\uFF0C\u6545\u4E0D\u6703\u4F9D\u5E8F\u57F7\u884C\uFF0C\u5982\u679C p2 \u5FC5\u9808\u7B49\u5F85 p1 \u5B8C\u6210\u5F8C\u57F7\u884C\uFF0C\u5247\u4E0D\u53EF\u76F4\u63A5\u50B3\u5165 then \u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">p1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">p1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">p2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p2</span>
<span class="token comment">// p1</span>
<span class="token comment">// &#39;A&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u6642\u5FC5\u9808\u6539\u70BA\u4E0B\u65B9\u5BEB\u6CD5\uFF0C\u5728 function \u4E2D\u4F7F\u7528\u8A72 promise \u3002\u5982\u6B64 p2 \u5C31\u6703\u7B49\u5F85 p1 \u57F7\u884C\u5B8C\u6210\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">p1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">p2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p1</span>
<span class="token comment">// p2</span>
<span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u9019\u6A23\u6211\u5011\u5728\u57F7\u884C p2 \u5F8C\u5C31\u65B7\u958B promise \u7684\u72C0\u614B\u4E86\uFF0C\u82E5\u9700\u8981\u505A\u5230\u975E\u540C\u6B65\u4F47\u5217\u6548\u679C\uFF0C\u6211\u5011\u9700\u8981\u5C07 promise \u5728 then \u4E2D return \u50B3\u5230\u4E0B\u500B then \u4E4B\u4E2D\uFF0C\u5247\u6BCF\u500B\u975E\u540C\u6B65\u52D5\u4F5C\u90FD\u5C07\u6309\u7167\u6211\u5011\u547C\u53EB\u7684\u9806\u5E8F\uFF0C\u4F9D\u5E8F\u5B8C\u6210\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">p1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">p2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">p3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p1</span>
<span class="token comment">// p2</span>
<span class="token comment">// p3</span>
<span class="token comment">// &#39;C&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u9019\u908A\u6703\u767C\u73FE\uFF0C\u5982\u679C\u6211\u5011\u6709\u5F88\u591A\u975E\u540C\u6B65\u51FD\u6578\u9700\u8981\u4F9D\u5E8F\u57F7\u884C\u6642\uFF0C\u4F7F\u7528 promise \u5C07\u975E\u5E38\u7684\u80A5\u5927\u4E14\u8907\u96DC\uFF0C\u5F48\u6027\u4E5F\u88AB\u9650\u5236\u4F4F\uFF0C\u6545\u4E00\u822C\u4E0D\u5EFA\u8B70\u4F7F\u7528 promise \u9032\u884C\u591A\u500B\u975E\u540C\u6B65\u52D5\u4F5C\u7684\u63A7\u5236\u6392\u5E8F\u7B49\uFF0C\u800C\u6703\u4F7F\u7528 es7 \u7684 async/await \u4F86\u53D6\u4EE3\u9019\u90E8\u5206\uFF0Cpromise \u4E3B\u8981\u61C9\u7528\u65BC\u91DD\u5C0D\u975E\u540C\u6B65\u5167\u90E8\u57F7\u884C\u908F\u8F2F\u7684\u7D30\u7BC0\u53BB\u9032\u884C\u8A2D\u5B9A\uFF0C\u800C\u4E0D\u662F\u7528\u5728\u63A7\u5236\u6D41\u7A0B\u4E0A\u3002</p>`,25);function r(d,m){const n=t("SocialBlock");return e(),o("div",null,[u,s(n,{hashtags:"javascript,promise"}),k,s(n,{hashtags:"javascript,promise"})])}const b=p(l,[["render",r],["__file","promise-basic.html.vue"]]);export{b as default};
