import{_ as e,c as o,b as n,a as t,d as c,e as a,r as l,o as i}from"./app-DZhdvvpJ.js";const u={};function r(k,s){const p=l("SocialBlock");return i(),o("div",null,[s[0]||(s[0]=n("h1",{id:"如何在-nextjs-上收集-playwright-e2e-測試-coverage-report",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#如何在-nextjs-上收集-playwright-e2e-測試-coverage-report"},[n("span",null,"如何在 NextJS 上收集 Playwright E2E 測試 coverage report?")])],-1)),s[1]||(s[1]=n("h6",{id:"tags-javascript-nextjs-playwright-e2e-test",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tags-javascript-nextjs-playwright-e2e-test"},[n("span",null,[a("tags: "),n("code",null,"JavaScript"),a(", "),n("code",null,"NextJS"),a(", "),n("code",null,"Playwright"),a(", "),n("code",null,"E2E test")])])],-1)),t(p,{hashtags:"javascript,nextjs,playwright"}),s[2]||(s[2]=c(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>Hi 大家好，我是 Johnny，好久沒有更新文章了呢!</p><p>最近有個專案使用 NextJS v15，需要收集 Playwright E2E 測試的 coverage report，甚麼是 coverage report 呢? 簡單說就是記錄你跑的測試覆蓋到多少你寫的大便 code(疑?)，並且細分到各個檔案層級，這個在 unit test 比方說 Jest 時可以很容易透過 configuration 調整輸出的 report 格式，但換到 E2E 測試，比如 Playwright 這樣的框架時，就會稍微比較麻煩一點，因為通常 E2E 會牽涉到各種跳頁的情況，收集覆蓋率時相對複雜很多</p><h2 id="目前網路上的資料" tabindex="-1"><a class="header-anchor" href="#目前網路上的資料"><span>目前網路上的資料</span></a></h2><p>在網路上針對 NextJS 的 E2E coverage report 相關文章研究後，目前網路上找到的大部分為以下兩種:</p><ul><li><a href="https://github.com/istanbuljs/babel-plugin-istanbul" target="_blank" rel="noopener noreferrer">babel-plugin-istanbul</a>(過舊無法使用) <ul><li>這是一個 Babel 的 Plugin，可以自動幫忙處理收集 coverage report，但因為 NextJS 最新版都已經預設使用 SWC compiler，對於自行切換回 Babel 編譯時可能跳出的 ERROR 就需要自己想辦法去修正，個人使用後發現會出現太多問題，不採用</li><li>這裡有一個舊的 <a href="https://github.com/mxschmitt/playwright-test-coverage" target="_blank" rel="noopener noreferrer">Demo 專案</a>，本篇部分內容為參考此專案實做，主要是了解你的 code coverage 該在甚麼時候開始、結束收集 report，並將 report 寫入檔案中</li></ul></li><li><a href="https://github.com/kwonoj/swc-plugin-coverage-instrument" target="_blank" rel="noopener noreferrer">swc-plugin-coverage-instrument</a>(過新不穩定，說明少，無法使用) <ul><li>這是目前 SWC 專門收集 coverage 的工具，但筆者在寫這篇文章時使用是無法正常運作，可能未來會有修正吧，但我現在就要用啊!!</li></ul></li></ul><h2 id="土法煉鋼" tabindex="-1"><a class="header-anchor" href="#土法煉鋼"><span>土法煉鋼</span></a></h2><p>經過各種研究後，最後看來只能自己實作一套了，主要是參考一些舊的文章，並稍微調整後總結如下流程</p><h3 id="使用-playwright-官網-coverage-api" tabindex="-1"><a class="header-anchor" href="#使用-playwright-官網-coverage-api"><span>使用 Playwright 官網 Coverage API</span></a></h3><ul><li><p><a href="https://playwright.dev/docs/api/class-coverage" target="_blank" rel="noopener noreferrer">Link</a></p></li><li><p>官方範例</p></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> chromium <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> v8toIstanbul <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;v8-to-istanbul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">await</span> page<span class="token punctuation">.</span>coverage<span class="token punctuation">.</span><span class="token function">startJSCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://chromium.org&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> coverage <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>coverage<span class="token punctuation">.</span><span class="token function">stopJSCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> entry <span class="token keyword">of</span> coverage<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> converter <span class="token operator">=</span> <span class="token function">v8toIstanbul</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">source</span><span class="token operator">:</span> entry<span class="token punctuation">.</span>source <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> converter<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    converter<span class="token punctuation">.</span><span class="token function">applyCoverage</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>functions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>converter<span class="token punctuation">.</span><span class="token function">toIstanbul</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>從以上簡短的範例看起來，我們需要透過 Playwright 的 API 明確告知收集 coverage 的開始、結束點後，將需要的 report 透過 <code>v8toIstanbul</code> 轉為 Istanbul 的測試 coverage 格式</p><h4 id="最終實作" tabindex="-1"><a class="header-anchor" href="#最終實作"><span>最終實作</span></a></h4><ul><li>首先安裝 v8-to-istanbul</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev v8-to-istanbul</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>接著撰寫 coverage util 工具</li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// e2e/utils/coverage.ts</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> Page <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span></span>
<span class="line"><span class="token keyword">import</span> v8toIstanbul <span class="token keyword">from</span> <span class="token string">&#39;v8-to-istanbul&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> crypto <span class="token keyword">from</span> <span class="token string">&#39;crypto&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> fs <span class="token keyword">from</span> <span class="token string">&#39;fs&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> istanbulCLIOutput <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;temp-coverage&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// put this in playwright.config.ts</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">prepareCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span>istanbulCLIOutput<span class="token punctuation">,</span> <span class="token punctuation">{</span> recursive<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// put this in each test file</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">setupTestCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  test<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> page <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> testCoverage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestCoverage</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> testCoverage<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  test<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> page <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> testCoverage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestCoverage</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> testCoverage<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">generateUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> crypto<span class="token punctuation">.</span><span class="token function">randomBytes</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// see: https://playwright.dev/docs/api/class-coverage</span></span>
<span class="line"><span class="token comment">// const coverage = await this.page.coverage.stopJSCoverage()</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">TestCoverage</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> <span class="token keyword">readonly</span> page<span class="token operator">:</span> Page<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page<span class="token punctuation">.</span>coverage<span class="token punctuation">.</span><span class="token function">startJSCoverage</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      resetOnNavigation<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">      reportAnonymousScripts<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> coverage <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page<span class="token punctuation">.</span>coverage<span class="token punctuation">.</span><span class="token function">stopJSCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// we only needs these files coverage, you may want to change this to \`.jsx\`, \`.js\`</span></span>
<span class="line">    <span class="token keyword">const</span> filteredEntries <span class="token operator">=</span> coverage<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>entry <span class="token operator">=&gt;</span></span>
<span class="line">      entry<span class="token punctuation">.</span>source <span class="token operator">&amp;&amp;</span></span>
<span class="line">      <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.tsx&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> entry<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line">      <span class="token operator">!</span>entry<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// we write coverage file with await due to CI machine memory limitation</span></span>
<span class="line">    <span class="token comment">// prevent Exit Error 137(OOM issue)</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> filteredEntries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> entry <span class="token operator">=</span> filteredEntries<span class="token punctuation">[</span>i<span class="token punctuation">]</span></span>
<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> converter <span class="token operator">=</span> <span class="token function">v8toIstanbul</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> source<span class="token operator">:</span> entry<span class="token punctuation">.</span>source<span class="token operator">!</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">await</span> converter<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        converter<span class="token punctuation">.</span><span class="token function">applyCoverage</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>functions<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">const</span> coverageJSON <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>converter<span class="token punctuation">.</span><span class="token function">toIstanbul</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span></span>
<span class="line">          path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>istanbulCLIOutput<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">playwright_coverage_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">generateUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">          coverageJSON</span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failed to process coverage for </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>entry<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> error<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>最後我們需要在測試中這樣使用</li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> test <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> setupTestCoverage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;~/e2e/utils/coverage&#39;</span></span>
<span class="line"></span>
<span class="line">test<span class="token punctuation">.</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;My Super Test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 收集 report</span></span>
<span class="line">  <span class="token function">setupTestCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;use Turquoise as a default background color&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> page <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&quot;text=#1abc9c&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;use Red as a background color&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> page <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&quot;text=Red&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&quot;text=#e74c3c&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="同場加映" tabindex="-1"><a class="header-anchor" href="#同場加映"><span>同場加映</span></a></h3><p>如果你的專案像我一樣，需要同時收集 unit test, e2e test 的 coverage report，並且最終合併成為一個 report，那麼請接著往下看</p><ul><li>安裝 nyc 工具</li></ul><p>這是一個幫助合成 test coverage report 的工具，可以根據需求決定要輸出的 report 格式</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev nyc</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>設定 nyc configuration</li></ul><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token comment">// .nycrc</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;all&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;src/**/*.tsx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;src/**/*.ts&quot;</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;**/*.config.ts&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;**/*.config.js&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;**/*.d.ts&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;**/app/api/**/*.*&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;__tests__&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;tests&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;e2e&quot;</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;reporter&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>設定 unit test 工具輸出 coverage 位置(以 Jest 為例) 這邊把原本 unit test 的 final report 輸出到跟前面 E2E 同一個資料夾內</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// jest.config.js</span></span>
<span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">coverageDirectory</span><span class="token operator">:</span> <span class="token string">&#39;temp-coverage&#39;</span><span class="token punctuation">,</span> <span class="token comment">// same as above e2e output dir</span></span>
<span class="line">  <span class="token literal-property property">coverageReporters</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&#39;json&#39;</span> <span class="token comment">// nyc would need json format to merge with other reports</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>設定 package.json script 當我們跑完 unit test, e2e test 後，最後執行這個動作就可以將前面所有測試跑完的 coverage report(JSON 格式)整合成一份最終的 coverage report 了!</li></ul><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;create-report&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nyc report -t temp-coverage --report-dir coverage&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="結語" tabindex="-1"><a class="header-anchor" href="#結語"><span>結語</span></a></h2><p>雖然上面的實作只能算是一種應急的處置，如果後續有更穩定的工具能夠使用也是可以考慮轉移，但透過實作也希望能讓大家更了解整個 test coverage report 的收集從頭到尾的流程~，今天分享就到這瞜，下一篇文章見拉!</p>`,32)),t(p,{hashtags:"javascript,nextjs,playwright"})])}const v=e(u,[["render",r]]),m=JSON.parse('{"path":"/articles/js/next-playwright-test-coverage.html","title":"如何在 NextJS 上收集 Playwright E2E 測試 coverage report?","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1759313125000,"contributors":[{"name":"JohnnyWang","username":"JohnnyWang","email":"meiliao1207@gmail.com","commits":1,"url":"https://github.com/JohnnyWang"}],"changelog":[{"hash":"cdd65d94f2a9b84caa2c7f63ebd13634379a3dab","time":1759313125000,"email":"meiliao1207@gmail.com","author":"JohnnyWang","message":"UPD: add nextjs playwright coverage report","tag":"v1.2.2"}]},"filePathRelative":"articles/js/next-playwright-test-coverage.md"}');export{v as comp,m as data};
