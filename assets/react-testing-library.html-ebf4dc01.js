import{_ as p,r as o,o as c,c as i,d as n,e as s,a as t,f as e}from"./app-4f8ac264.js";const l={},u=n("h1",{id:"react-testing-library",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-testing-library","aria-hidden":"true"},"#"),s(" React Testing Library")],-1),r=n("code",null,"@testing-library/react",-1),d={href:"https://testing-library.com/docs/react-testing-library/api",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"install",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#install","aria-hidden":"true"},"#"),s(" Install")],-1),v=n("p",null,"其他必須安裝的東西在另一篇中已紀錄，這邊不再多寫一次~",-1),m={href:"https://testing-library.com/docs/react-testing-library/intro",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/testing-library/jest-dom",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"toBeVisible",-1),h=n("code",null,"toBeInTheDocument",-1),f=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev @testing-library/react @testing-library/jest-dom
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="query" tabindex="-1"><a class="header-anchor" href="#query" aria-hidden="true">#</a> Query</h2><p>查找元素</p><h3 id="三種方式" tabindex="-1"><a class="header-anchor" href="#三種方式" aria-hidden="true">#</a> 三種方式</h3><ul><li>getBy: 尋找目標，不存在時噴錯</li><li>queryBy: 尋找目標，不存在時為 null</li><li>findBy: 等到目標到超時為止</li></ul><h3 id="推薦使用順序" tabindex="-1"><a class="header-anchor" href="#推薦使用順序" aria-hidden="true">#</a> 推薦使用順序</h3><ul><li>getByLabelText</li><li>getByText</li><li>getByDisplayValue</li><li>getByTitle</li><li>getByTestId</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>screen<span class="token punctuation">,</span> getByLabelText<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/dom&#39;</span>

<span class="token comment">// With screen:</span>
<span class="token keyword">const</span> inputNode1 <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getByLabelText</span><span class="token punctuation">(</span><span class="token string">&#39;Username&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// Without screen, you need to provide a container:</span>
<span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> inputNode2 <span class="token operator">=</span> <span class="token function">getByLabelText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> <span class="token string">&#39;Username&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="match" tabindex="-1"><a class="header-anchor" href="#match" aria-hidden="true">#</a> Match</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span> <span class="token comment">// full string match</span>
screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;llo Worl&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">exact</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// substring match</span>
screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">exact</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// ignore case</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> Debug</h3><p>打印出像是 console.log(prettyDOM(element)) 的效果</p>`,12),y=n("code",null,"prettyDOM",-1),x={href:"https://testing-library.com/docs/dom-testing-library/api-debugging",target:"_blank",rel:"noopener noreferrer"},w=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// debug document</span>
screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// debug single element</span>
screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// debug multiple elements</span>
screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getAllByText</span><span class="token punctuation">(</span><span class="token string">&#39;multi-test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manual" tabindex="-1"><a class="header-anchor" href="#manual" aria-hidden="true">#</a> Manual</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>container<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> container<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;[data-foo=&quot;bar&quot;]&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="user-actions" tabindex="-1"><a class="header-anchor" href="#user-actions" aria-hidden="true">#</a> User Actions</h2><h3 id="fireevent" tabindex="-1"><a class="header-anchor" href="#fireevent" aria-hidden="true">#</a> fireEvent</h3><p>透過 <code>fireEvent</code> 對指定元素進行事件觸發</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> fireEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Button</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>onClick<span class="token punctuation">,</span> children<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>onClick<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
<span class="token punctuation">)</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;calls onClick prop when clicked&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> handleClick <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span><span class="token operator">&gt;</span>Click Me<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span><span class="token punctuation">)</span>
  fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">click me</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>handleClick<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或是推薦透過 <code>@testing-library/user-event</code> 套件來觸發 DOM 事件</p>`,8),_=n("code",null,"setTimeout",-1),j=n("code",null,"delay: null",-1),B={href:"https://github.com/testing-library/user-event/issues/833",target:"_blank",rel:"noopener noreferrer"},T=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> userEvent <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/user-event&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Dummy <span class="token keyword">from</span> <span class="token string">&#39;./Dummy&#39;</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  jest<span class="token punctuation">.</span><span class="token function">useFakeTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> userEvent<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;test event&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> onClick <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> getByRole <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Dummy onClick<span class="token operator">=</span><span class="token punctuation">{</span>onClick<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 觸發事件</span>
    <span class="token keyword">await</span> user<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>
    jest<span class="token punctuation">.</span><span class="token function">runOnlyPendingTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>onClick<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="async-methods" tabindex="-1"><a class="header-anchor" href="#async-methods" aria-hidden="true">#</a> Async methods</h3>`,2),C={href:"https://testing-library.com/docs/dom-testing-library/api-async",target:"_blank",rel:"noopener noreferrer"},E=e(`<h4 id="findby" tabindex="-1"><a class="header-anchor" href="#findby" aria-hidden="true">#</a> findBy</h4><p>實際上就是 getBy 查詢和 waitFor 的組合，當您期望一個元素出現但對 DOM 的更改可能不會立即發生時，請使用 findBy 查詢</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> button <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Click Me&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span>
<span class="token keyword">await</span> screen<span class="token punctuation">.</span><span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked once&#39;</span><span class="token punctuation">)</span>
fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span>
<span class="token keyword">await</span> screen<span class="token punctuation">.</span><span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked twice&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="waitfor" tabindex="-1"><a class="header-anchor" href="#waitfor" aria-hidden="true">#</a> waitFor</h4><p>任何時候需要等待一段時間時，使用 <code>waitFor</code></p><blockquote><p>注意，<code>waitFor</code> 可能會多次運行回調，直到達到超時</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 等到 mockAPI 被執行一次後</span>
<span class="token keyword">await</span> <span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">expect</span><span class="token punctuation">(</span>mockAPI<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="waitforelementtoberemoved" tabindex="-1"><a class="header-anchor" href="#waitforelementtoberemoved" aria-hidden="true">#</a> waitForElementToBeRemoved</h4><p><code>waitForElementToBeRemoved</code> 是以 <code>waitFor</code> 為基礎製作，用來等待從 DOM 中移除元素</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;div.getOuttaHere&#39;</span><span class="token punctuation">)</span>
<span class="token function">waitForElementToBeRemoved</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;div.getOuttaHere&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Element no longer in DOM&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-neat&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token comment">// other mutations are ignored...</span>
el<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
<span class="token comment">// logs &#39;Element no longer in DOM&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="appearance-disappearance" tabindex="-1"><a class="header-anchor" href="#appearance-disappearance" aria-hidden="true">#</a> Appearance &amp; Disappearance</h3>`,11),q={href:"https://testing-library.com/docs/guide-disappearance",target:"_blank",rel:"noopener noreferrer"},D=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev @testing-library/jest-dom
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;movie title appears&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// element is initially not present...</span>
  <span class="token comment">// wait for appearance and return the element</span>
  <span class="token keyword">const</span> movie <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;the lion king&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;movie title appears&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// element is initially not present...</span>

  <span class="token comment">// wait for appearance inside an assertion</span>
  <span class="token keyword">await</span> <span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;the lion king&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> submitButton <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">queryByText</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>submitButton<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// it doesn&#39;t exist</span>

<span class="token keyword">const</span> submitButtons <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">queryAllByText</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>submitButtons<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// expect no elements</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fake-timer" tabindex="-1"><a class="header-anchor" href="#fake-timer" aria-hidden="true">#</a> Fake Timer</h3>`,4),F={href:"https://testing-library.com/docs/using-fake-timers",target:"_blank",rel:"noopener noreferrer"},M=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Fake timers using Jest</span>
<span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  jest<span class="token punctuation">.</span><span class="token function">useFakeTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// Running all pending timers and switching to real timers using Jest</span>
<span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  jest<span class="token punctuation">.</span><span class="token function">runOnlyPendingTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  jest<span class="token punctuation">.</span><span class="token function">useRealTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="querying-within-elements" tabindex="-1"><a class="header-anchor" href="#querying-within-elements" aria-hidden="true">#</a> Querying Within Elements</h3><p>使用 <code>within</code> 函數包裹元素，可直接在其內進行 querying，不用給予 container</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>render<span class="token punctuation">,</span> within<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span>getByText<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> messages <span class="token operator">=</span> <span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;messages&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> helloMessage <span class="token operator">=</span> <span class="token function">within</span><span class="token punctuation">(</span>messages<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2>`,5),R={href:"https://testing-library.com/docs/dom-testing-library/api-configuration",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"configure",-1),O=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> configure <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>

<span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">testIdAttribute</span><span class="token operator">:</span> <span class="token string">&#39;data-my-test-id&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redux-testing" tabindex="-1"><a class="header-anchor" href="#redux-testing" aria-hidden="true">#</a> Redux Testing</h2>`,2),P={href:"https://redux.js.org/usage/writing-tests",target:"_blank",rel:"noopener noreferrer"},I=n("h3",{id:"reducers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reducers","aria-hidden":"true"},"#"),s(" Reducers")],-1),L=n("p",null,[s("透過呼叫 "),n("code",null,"reducer"),s(" 我們可以給予相應的 "),n("code",null,"state"),s(", "),n("code",null,"action"),s(" 對 store 進行測試操作")],-1),S={href:"https://redux.js.org/usage/writing-tests#reducers",target:"_blank",rel:"noopener noreferrer"},H=e(`<h3 id="redux-in-components" tabindex="-1"><a class="header-anchor" href="#redux-in-components" aria-hidden="true">#</a> Redux in Components</h3><p>撰寫一個客製化 <code>render</code> 函數如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token keyword">as</span> StoreProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> store <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">AllTheProviders</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>StoreProvider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>children<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>StoreProvider<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">customRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token parameter">ui<span class="token punctuation">,</span>
  options</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">render</span><span class="token punctuation">(</span>ui<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">wrapper</span><span class="token operator">:</span> AllTheProviders<span class="token punctuation">,</span> <span class="token operator">...</span>options<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span>customRender <span class="token keyword">as</span> render<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function N(V,W){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("這篇記錄 "),r,s(" 的一些學習筆記，主要來源於"),n("a",d,[s("官網"),t(a)])]),k,v,n("ul",null,[n("li",null,[n("a",m,[s("@testing-library/react"),t(a)])]),n("li",null,[n("a",b,[s("@testing-library/jest-dom"),t(a)]),s(": 可以使用一些特殊 matcher "),g,s(", "),h])]),f,n("blockquote",null,[n("p",null,[y,s(" 是一個內建的"),n("a",x,[s("打印元素工具函數"),t(a)])])]),w,n("blockquote",null,[n("p",null,[s("使用時需注意，若 event 當中有 "),_,s(" 動作，必須在 setup 時加上 "),j,s(" option，避免造成 timeout 問題，詳細"),n("a",B,[s("討論可見這邊"),t(a)])])]),T,n("ul",null,[n("li",null,[n("a",C,[s("說明"),t(a)])])]),E,n("ul",null,[n("li",null,[n("a",q,[s("說明"),t(a)])])]),D,n("ul",null,[n("li",null,[n("a",F,[s("說明"),t(a)])])]),M,n("ul",null,[n("li",null,[n("a",R,[s("說明"),t(a)]),A,s(" 設定會自動合併到預設的設定中")])]),O,n("ul",null,[n("li",null,[n("a",P,[s("說明"),t(a)])])]),I,L,n("ul",null,[n("li",null,[n("a",S,[s("範例"),t(a)])])]),H])}const J=p(l,[["render",N],["__file","react-testing-library.html.vue"]]);export{J as default};
