import{_ as n,c as a,d as e,o as p}from"./app-aytLpXyP.js";const t={};function l(i,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="react-emotion-basic" tabindex="-1"><a class="header-anchor" href="#react-emotion-basic"><span>React Emotion Basic</span></a></h1><p>這篇是紀錄使用 Vite 配置 <code>@emotion</code> 基礎安裝與使用方式的筆記</p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>Install</span></a></h2><ul><li><a href="https://emotion.sh/docs/install" target="_blank" rel="noopener noreferrer">安裝介紹</a> @emotion 有很多使用的方式，需要安裝的依賴也不完全相同，主要根據是否使用 <code>React</code> 框架，如果使用則安裝 <code>@emotion/react</code>，若沒有則安裝 <code>@emotion/css</code>，前者針對 react 設計，後者可跨框架使用</li></ul><p>這邊以使用 react 為主~</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> @emotion/react</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="css-prop-使用" tabindex="-1"><a class="header-anchor" href="#css-prop-使用"><span>CSS Prop 使用</span></a></h2><ul><li><a href="https://emotion.sh/docs/css-prop" target="_blank" rel="noopener noreferrer">說明</a></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> style <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  color: hotpink;</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">SomeComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token operator">&lt;</span>div css<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span><span class="token operator">&gt;</span></span>
<span class="line">    Some hotpink text<span class="token punctuation">.</span></span>
<span class="line">    <span class="token punctuation">{</span>children<span class="token punctuation">}</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="styled-component" tabindex="-1"><a class="header-anchor" href="#styled-component"><span>Styled Component</span></a></h2><ul><li><a href="https://emotion.sh/docs/styled" target="_blank" rel="noopener noreferrer">說明</a> 另外安裝 <code>@emotion/styled</code> 可以使用近似於 <code>Styled-components</code> 的組件式用法</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> Button <span class="token operator">=</span> styled<span class="token punctuation">.</span>button<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  color: hotpink;</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="targeting-another-emotion-component" tabindex="-1"><a class="header-anchor" href="#targeting-another-emotion-component"><span>Targeting another emotion component</span></a></h3><ul><li><a href="https://emotion.sh/docs/styled#targeting-another-emotion-component" target="_blank" rel="noopener noreferrer">說明</a></li></ul><p>使用下面這種特殊方式可以在一個 Emotion styled 組件內引入另一個，但需要安裝並配置 <code>@emotion/babel-plugin</code></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@emotion&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> Child <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  color: red;</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> Parent <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Child<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> {</span>
<span class="line">    color: green;</span>
<span class="line">  }</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="composing-dynamic-styles" tabindex="-1"><a class="header-anchor" href="#composing-dynamic-styles"><span>Composing dynamic styles</span></a></h3><ul><li><a href="https://emotion.sh/docs/styled#composing-dynamic-styles" target="_blank" rel="noopener noreferrer">說明</a> 使用下面方式可以使用動態 style 注入 props</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">dynamicStyle</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=&gt;</span></span>
<span class="line">  css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">    color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>color<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span>
<span class="line">  </span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> Container <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dynamicStyle<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nested-components" tabindex="-1"><a class="header-anchor" href="#nested-components"><span>Nested components</span></a></h3><p>styled 寫法內建可以使用類似 SASS 中的 <code>&amp;</code> parent selector</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">&#39;@emotion/styled&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> Example <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  color: lightgreen;</span>
<span class="line">  &amp; &gt; a {</span>
<span class="line">    color: hotpink;</span>
<span class="line">  }</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="composition" tabindex="-1"><a class="header-anchor" href="#composition"><span>Composition</span></a></h2><ul><li><a href="https://emotion.sh/docs/composition" target="_blank" rel="noopener noreferrer">說明</a> Emotion 的一個強大功能，可以自由透過 <code>css</code> 定義 style 組合互相套用</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> base <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  color: hotpink;</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token function">render</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token operator">&lt;</span>div</span>
<span class="line">    css<span class="token operator">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>base<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span>
<span class="line">      background-color: #eee;</span>
<span class="line">    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token operator">&gt;</span></span>
<span class="line">    This is hotpink<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-直接套用" tabindex="-1"><a class="header-anchor" href="#_1-直接套用"><span>1. 直接套用</span></a></h3><p><code>直接套用</code> 雖然很方便，但就像下方一般 CSS 一樣容易因為套用順序，而出現樣式 override 的問題，導致必須調整 className 順序或是加入 <code>important</code></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">render</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>style<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">        .danger {</span>
<span class="line">          color: red;</span>
<span class="line">        }</span>
<span class="line">        .base {</span>
<span class="line">          background-color: lightgray;</span>
<span class="line">          color: turquoise;</span>
<span class="line">        }</span>
<span class="line">      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
<span class="line">      <span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token comment">/* turquoise */</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">&quot;base danger&quot;</span><span class="token operator">&gt;</span>What color will <span class="token keyword">this</span> be<span class="token operator">?</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-合併套用" tabindex="-1"><a class="header-anchor" href="#_2-合併套用"><span>2. 合併套用</span></a></h3><p>為了避免樣式套用時順序影響樣式，可以用下面的方式引入 css 組合，這樣 css 順序可以在需要時視情況給予套用順序</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> danger <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  color: red;</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> base <span class="token operator">=</span> css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  background-color: darkgreen;</span>
<span class="line">  color: turquoise;</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token function">render</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div css<span class="token operator">=</span><span class="token punctuation">{</span>base<span class="token punctuation">}</span><span class="token operator">&gt;</span>This will be turquoise<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div css<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>danger<span class="token punctuation">,</span> base<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span>
<span class="line">      This will be also be turquoise since the base styles overwrite the danger</span>
<span class="line">      styles<span class="token punctuation">.</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div css<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>base<span class="token punctuation">,</span> danger<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>This will be red<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="media-queries" tabindex="-1"><a class="header-anchor" href="#media-queries"><span>Media Queries</span></a></h2><p>可以像 SASS 一樣在當前 selector 內直接套用</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">render</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token operator">&lt;</span>p</span>
<span class="line">    css<span class="token operator">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">      font-size: 30px;</span>
<span class="line">      @media (min-width: 420px) {</span>
<span class="line">        font-size: 50px;</span>
<span class="line">      }</span>
<span class="line">    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token operator">&gt;</span></span>
<span class="line">    Some text<span class="token operator">!</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或是可以像這樣把 breakpoints 設定好方便使用</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> breakpoints <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">sm</span><span class="token operator">:</span> <span class="token number">576</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">md</span><span class="token operator">:</span> <span class="token number">768</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">lg</span><span class="token operator">:</span> <span class="token number">992</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">xl</span><span class="token operator">:</span> <span class="token number">1200</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">mq</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">bp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@media (min-width: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>breakpoints<span class="token punctuation">[</span>bp<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token function">render</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>p</span>
<span class="line">      css<span class="token operator">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">        color: green;</span>
<span class="line">        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">mq</span><span class="token punctuation">(</span><span class="token string">&#39;sm&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> {</span>
<span class="line">          color: gray;</span>
<span class="line">        }</span>
<span class="line">        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">mq</span><span class="token punctuation">(</span><span class="token string">&#39;md&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> {</span>
<span class="line">          color: hotpink;</span>
<span class="line">        }</span>
<span class="line">      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&gt;</span></span>
<span class="line">      Some other text<span class="token operator">!</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="global-styles" tabindex="-1"><a class="header-anchor" href="#global-styles"><span>Global Styles</span></a></h2><p>使用 <code>&lt;Global&gt;</code> 組件套用全局的樣式，這些樣式會在樣式改變或隨著組件卸載時移除</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Global<span class="token punctuation">,</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@emotion/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">render</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>Global</span>
<span class="line">      styles<span class="token operator">=</span><span class="token punctuation">{</span>css<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">        .some-class {</span>
<span class="line">          color: hotpink !important;</span>
<span class="line">        }</span>
<span class="line">      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;some-class&quot;</span><span class="token operator">&gt;</span>This is hotpink now<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相關套件清單" tabindex="-1"><a class="header-anchor" href="#相關套件清單"><span>相關套件清單</span></a></h2><ul><li><a href="https://emotion.sh/docs/package-summary" target="_blank" rel="noopener noreferrer">Emotion Package 清單</a></li></ul>`,42)]))}const c=n(t,[["render",l]]),r=JSON.parse('{"path":"/articles/memo/react/react-emotion-basic.html","title":"React Emotion Basic","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1748788505000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnny29621189@kimo.com","commits":1,"url":"https://github.com/johnnywang"},{"name":"Lindy Liao","username":"","email":"meiliao1207@gmail.com","commits":1}],"changelog":[{"hash":"f01bfa128b4d33fbeddb8abb1697b5391b273d28","time":1748788505000,"email":"meiliao1207@gmail.com","author":"Lindy Liao","message":"UPD"},{"hash":"7acaa8f8bf22e64cf2cbef26b7c5cb06bc1691ac","time":1653392808000,"email":"johnny29621189@kimo.com","author":"johnnywang","message":"UPD: add react emotion basic"}]},"filePathRelative":"articles/memo/react/react-emotion-basic.md"}');export{c as comp,r as data};
