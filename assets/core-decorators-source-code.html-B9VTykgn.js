import{_ as a,c as r,b as e,o as c}from"./app-aytLpXyP.js";const t={};function n(s,o){return c(),r("div",null,o[0]||(o[0]=[e("h1",{id:"core-decorators-source-code-深入理解實現",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#core-decorators-source-code-深入理解實現"},[e("span",null,"Core Decorators Source code 深入理解實現")])],-1),e("p",null,"Hi 大家好，我是 Johnny，今天要帶大家來看一個相對於 functional 而言較為沒這麼為人所知的東西-decorator，中文名叫裝飾器",-1),e("ul",null,[e("li",null,"在寫入 descriptor 前必須確保在此之前的其他 decorator getter 已經完成觸發調用，否則當前 defineProperty 執行後，會被前面的其他 decorator getter 執行時覆蓋掉導致當前 decorator 不會執行")],-1)]))}const m=a(t,[["render",n]]),d=JSON.parse('{"path":"/articles/js/core-decorators-source-code.html","title":"Core Decorators Source code 深入理解實現","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1748788505000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnny29621189@kimo.com","commits":1,"url":"https://github.com/johnnywang"},{"name":"Lindy Liao","username":"","email":"meiliao1207@gmail.com","commits":1}],"changelog":[{"hash":"f01bfa128b4d33fbeddb8abb1697b5391b273d28","time":1748788505000,"email":"meiliao1207@gmail.com","author":"Lindy Liao","message":"UPD"},{"hash":"fcf753fe47ac6eee1ea04ac335caed60f898f143","time":1652360101000,"email":"johnny29621189@kimo.com","author":"johnnywang","message":"UPD: update"}]},"filePathRelative":"articles/js/core-decorators-source-code.md"}');export{m as comp,d as data};
