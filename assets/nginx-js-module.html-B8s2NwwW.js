import{_ as s,c as a,d as e,o as p}from"./app-DZhdvvpJ.js";const i={};function l(t,n){return p(),a("div",null,[...n[0]||(n[0]=[e(`<h1 id="nginx-js-module-基本使用筆記" tabindex="-1"><a class="header-anchor" href="#nginx-js-module-基本使用筆記"><span>Nginx JS module 基本使用筆記</span></a></h1><p>大家好！我是 Johnny，今天要介紹一個已存在一段時間，但卻很少被提及的 Nginx 模組 「NJS」</p><h2 id="基本介紹" tabindex="-1"><a class="header-anchor" href="#基本介紹"><span>基本介紹</span></a></h2><p>NJS 是 Nginx 的動態模組，一個 Javascript 的子集，符合 ES5 及部分 ES6 擴充，能用 JS 語法擴充 Nginx 內建功能，主要由 <code>ngx_http_js_module</code>, <code>ngx_stream_js_module</code> 這兩個模組構成，具備下列功能</p><ul><li>在 request 到達更上游 server 前，進行複雜的<code>存取控制</code>和<code>安全檢查</code></li><li>操作 response headers</li><li>編寫靈活的非同步內容處理程序、過濾器等</li></ul><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><p>透過 <code>load_module</code> 引入上述模組，並在 nginx 配置中，引用指定的 js file function 處理請求</p><blockquote><p>需要放在任何 server、location 或其他上下文塊以外。在主配置文件的 http 上下文之外，才能在 Nginx 啟動時載入</p></blockquote><h2 id="配置範例-main-js" tabindex="-1"><a class="header-anchor" href="#配置範例-main-js"><span>配置範例 main.js</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">function</span> <span class="token function">summary</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 設置 response header</span></span>
<span class="line">  r<span class="token punctuation">.</span>headersOut<span class="token punctuation">[</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span></span>
<span class="line">    <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  r<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">uri</span><span class="token operator">:</span> r<span class="token punctuation">.</span>uri<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">method</span><span class="token operator">:</span> r<span class="token punctuation">.</span>method<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">host</span><span class="token operator">:</span> r<span class="token punctuation">.</span>headersIn<span class="token punctuation">.</span>host<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">remoteAddress</span><span class="token operator">:</span> r<span class="token punctuation">.</span>remoteAddress<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">requestHeaders</span><span class="token operator">:</span> r<span class="token punctuation">.</span>headersIn<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">responseHeaders</span><span class="token operator">:</span> r<span class="token punctuation">.</span>headersOut<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">args</span><span class="token operator">:</span> r<span class="token punctuation">.</span>args<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span> summary <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置範例-nginx-conf" tabindex="-1"><a class="header-anchor" href="#配置範例-nginx-conf"><span>配置範例 nginx.conf</span></a></h2><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf"><pre><code class="language-conf"><span class="line"># 載入 njs 模組</span>
<span class="line">load_module modules/ngx_http_js_module.so;</span>
<span class="line"></span>
<span class="line">events {}</span>
<span class="line"></span>
<span class="line">http {</span>
<span class="line">  # 設定 js 文件位置</span>
<span class="line">  js_path &quot;/etc/nginx/njs/&quot;;</span>
<span class="line">  # 引入 js 文件到 main 變數</span>
<span class="line">  js_import main from main.js;</span>
<span class="line"></span>
<span class="line">  server {</span>
<span class="line">    listen 80;</span>
<span class="line">    location / {</span>
<span class="line">      # 設置由 js_content 的 main.summary 方法處理請求</span>
<span class="line">      js_content main.summary;</span>
<span class="line">    }</span>
<span class="line">  }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="結論" tabindex="-1"><a class="header-anchor" href="#結論"><span>結論</span></a></h2><p>以前只知道 Nginx 可以寫 Lua 來對細部設定進行調整，現在連 Javascript 都能直接在 Nginx 中使用，看來大 Javascript 時代真的要統一江湖了...</p>`,14)])])}const o=s(i,[["render",l]]),r=JSON.parse('{"path":"/articles/memo/nginx-js-module.html","title":"Nginx JS module 基本使用筆記","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1748788505000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"},{"name":"Lindy Liao","username":"","email":"meiliao1207@gmail.com","commits":1}],"changelog":[{"hash":"f01bfa128b4d33fbeddb8abb1697b5391b273d28","time":1748788505000,"email":"meiliao1207@gmail.com","author":"Lindy Liao","message":"UPD"},{"hash":"67fbf8d97c457e9cf00c5d75da8ee1b2584d2db5","time":1737036685000,"email":"johnnywang@test.com","author":"johnnywang","message":"UPD"}]},"filePathRelative":"articles/memo/nginx-js-module.md"}');export{o as comp,r as data};
