import{_ as n,c as a,d as e,o as l}from"./app-RvPLl2RM.js";const p={};function i(t,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="command-line-params-指令列參數處理" tabindex="-1"><a class="header-anchor" href="#command-line-params-指令列參數處理"><span>Command Line Params 指令列參數處理</span></a></h1><h2 id="shift-指令" tabindex="-1"><a class="header-anchor" href="#shift-指令"><span>shift 指令</span></a></h2><p>用於從左邊刪掉 n 個位置的參數，</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">shift</span> <span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token comment"># n 預設為 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>範例</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># bash hello.sh 1 2 3</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$*</span> <span class="token comment"># 1 2 3</span></span>
<span class="line"><span class="token builtin class-name">shift</span> <span class="token number">2</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$*</span> <span class="token comment"># 3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或是製作一個執行子指令的工具入口</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">sub_cmd</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token builtin class-name">shift</span></span>
<span class="line">/utility_path/bin/<span class="token variable">$sub_cmd</span> <span class="token string">&quot;<span class="token variable">$@</span>&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="選項解析" tabindex="-1"><a class="header-anchor" href="#選項解析"><span>選項解析</span></a></h2><p>shell 本身不區分參數中的選項、非選項，必須在腳本內去解析，常見三種方式：</p><ul><li>手動解析：簡單腳本狀況下可行，複雜度越高，解析成本會指數上升</li><li>內建指令 <code>getops</code>：推薦，遵守 POSIX 規範，但僅支援短選項</li><li>外部命令 <code>getop</code>：linux 指令，可以解析長選項</li></ul><p>底下為 <code>getops</code> 使用範例</p><h3 id="getops" tabindex="-1"><a class="header-anchor" href="#getops"><span>getops</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">getops optstring name <span class="token punctuation">[</span>arg <span class="token punctuation">..</span>.<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>optstring: 選項描述，<code>&quot;ab:c&quot;</code> 表示期望 <code>&quot;-a -b bvalue -c&quot;</code>，<code>b</code>後的<code>:</code>表示一個選項值</li></ul><p>在 <code>while</code> 循環中使用，每次解析一個選項</p><ul><li>如果解析到一個選項，該選項會保存在變數 $name 中，退出碼為 0</li><li>解析到不存在的選項，$name 返回 <code>?</code>，退出碼仍然為 0</li><li>解析到第一個非選項時，退出碼為 1，退出循環</li></ul><blockquote><p>命令使用了兩個隱式變量<code>$OPTIND</code> (OPTion INDex) 和 <code>$OPTARG</code> (OPTion ARGument)。</p></blockquote><ul><li><code>$OPTIND</code> 記錄了下次解析的位置（從 1 開始），在每次執行腳本時被設置為 1，並在解析後累加。</li><li><code>$OPTARG</code> 記錄了當前選項對應的值（如果存在）</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># -c confirm 二次確認</span></span>
<span class="line"><span class="token comment"># -m message 必須，刪除備註，儲存在 log 中</span></span>
<span class="line"><span class="token assign-left variable">confirm</span><span class="token operator">=</span><span class="token number">0</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> <span class="token builtin class-name">getopts</span> <span class="token string">&quot;cm:&quot;</span> option<span class="token punctuation">;</span> <span class="token keyword">do</span></span>
<span class="line">  <span class="token keyword">case</span> <span class="token variable">$option</span> <span class="token keyword">in</span></span>
<span class="line">    c<span class="token punctuation">)</span> <span class="token assign-left variable">confirm</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">    m<span class="token punctuation">)</span> <span class="token assign-left variable">message</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$OPTARG</span>&quot;</span> <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">    ?<span class="token punctuation">)</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;參數錯誤&quot;</span><span class="token punctuation">;</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">esac</span></span>
<span class="line"><span class="token keyword">done</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">shift</span> <span class="token variable"><span class="token variable">$((</span>$OPTIND<span class="token operator">-</span><span class="token number">1</span><span class="token variable">))</span></span> <span class="token comment"># 去除參數中已解析的部分</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token variable">$@</span></span>
<span class="line"><span class="token assign-left variable">default_message</span><span class="token operator">=</span><span class="token string">&quot;刪除檔案 <span class="token variable">$files</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span> $confirm <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">  <span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;是否確認刪除文件 <span class="token variable">$files</span> (Y/N):&quot;</span> confirmed</span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$confirmed</span> <span class="token operator">==</span> <span class="token punctuation">[</span>^yY<span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token comment"># 如果不是 y、Y 則退出</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token function">rm</span> <span class="token variable">$files</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;log: <span class="token variable">\${message<span class="token operator">:-</span>$default_message}</span>&quot;</span> <span class="token operator">&gt;&gt;</span> log.txt</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li><a href="https://juejin.cn/post/7130983293347954718" target="_blank" rel="noopener noreferrer">Shell 腳本編程</a></li></ul>`,22)]))}const o=n(p,[["render",i],["__file","07command-param.html.vue"]]),r=JSON.parse('{"path":"/articles/memo/bash/07command-param.html","title":"Command Line Params 指令列參數處理","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"shift 指令","slug":"shift-指令","link":"#shift-指令","children":[]},{"level":2,"title":"選項解析","slug":"選項解析","link":"#選項解析","children":[{"level":3,"title":"getops","slug":"getops","link":"#getops","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1670248094000,"contributors":[{"name":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"}]},"filePathRelative":"articles/memo/bash/07command-param.md"}');export{o as comp,r as data};
