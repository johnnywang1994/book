import{_ as e,c as n,d as s,o as i}from"./app-BZziB6D2.js";const t={};function c(r,a){return i(),n("div",null,a[0]||(a[0]=[s(`<h1 id="git-分支" tabindex="-1"><a class="header-anchor" href="#git-分支"><span>Git 分支</span></a></h1><p>Git 分支其實只是一個指向某提交的可移動輕量級指標， Git 預設分支名稱是 master，</p><p>隨著不斷地製作提交，master 分支會為你一直指向最後一個提交， 它在每次提交的時候都會自動向前移動。</p><h2 id="查看分支" tabindex="-1"><a class="header-anchor" href="#查看分支"><span>查看分支</span></a></h2><p><code>git branch</code> 不加任何參數，你將會得到所有分支的簡易清單</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> branch</span>
<span class="line">  iss53</span>
<span class="line">* master</span>
<span class="line">  testing</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>-v</code>：查看各分支最後一個提交內容</p></li><li><p><code>--merged</code>, <code>--no-merged</code>：從清單中篩選出已經合併或尚未合併到目前分支的分支。</p></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> branch <span class="token parameter variable">-v</span></span>
<span class="line">  iss53   93b412c fix javascript issue</span>
<span class="line">* master  7a98805 Merge branch <span class="token string">&#39;iss53&#39;</span></span>
<span class="line">  testing 782fd34 <span class="token function">add</span> scott to the author list <span class="token keyword">in</span> the readmes</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="建立一個新的分支" tabindex="-1"><a class="header-anchor" href="#建立一個新的分支"><span>建立一個新的分支</span></a></h2><p><code>git branch [new branch name]</code> 建立一個新的、可移動的指標，在目前提交上新建一個指標。二個分支都指向同一系列的提交歷史</p><p>此命令只是建立一個新的分支，並不會切換過去。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> branch testing</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Git 它保存了一個名為 HEAD 的特別指標，會指向你當前所在的分支，你可藉此知道你目前在哪個分支上工作。</p><h2 id="刪除一個分支" tabindex="-1"><a class="header-anchor" href="#刪除一個分支"><span>刪除一個分支</span></a></h2><p>加上後綴 <code>-d [branch name]</code> 可以刪除指定分支，注意，刪除只是移除分支名稱，該分支內的提交仍然存在於 Git 紀錄中。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> branch <span class="token parameter variable">-d</span> testing</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="在分支之間切換" tabindex="-1"><a class="header-anchor" href="#在分支之間切換"><span>在分支之間切換</span></a></h2><p><code>git checkout</code> 切換到一個已經存在的分支，這會移動 HEAD 並指向 testing 分支。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> checkout testing</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>這條命令做了兩件事， 它把 HEAD 指標移過去並指向 testing 分支，然後把工作目錄中的檔案換成 testing 分支所指向的快照內容；</p><p>加上後綴 <code>-b [new branch name]</code> 可以在創建新分支的同時切換 HEAD 指標。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> checkout <span class="token parameter variable">-b</span> testing</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>還原指定檔案版本，例如誤刪或是改壞某個特定檔案，又不想把整個紀錄 reset 回去時，可以執行如下動作，這段指令的意思是把 master 分支中最新版的 test.js 給還原</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> checkout master test.js</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="以某遠端倉庫位置建立新分支" tabindex="-1"><a class="header-anchor" href="#以某遠端倉庫位置建立新分支"><span>以某遠端倉庫位置建立新分支</span></a></h2><p>假如當前 git 中包含 remote - origin, test，可以透過如下指令切換建立一個 remote test 的分支內容</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote/branch<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,27)]))}const d=e(t,[["render",c]]),p=JSON.parse('{"path":"/articles/git/branch.html","title":"Git 分支","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1648521821000,"contributors":[{"name":"Johnny Wang","username":"","email":"wangj@garena.com","commits":1},{"name":"johnnywang1994","username":"johnnywang1994","email":"johnny29621189@kimo.com","commits":4,"url":"https://github.com/johnnywang1994"}],"changelog":[{"hash":"71ccb7693345c8ddc2f554e00f8a0ce73af2b783","time":1648521821000,"email":"johnny29621189@kimo.com","author":"johnnywang1994","message":"UPD: upgrade to v2"},{"hash":"0a0cca98f1fd6ae86765f73c526eba906ed1e4de","time":1637656663000,"email":"johnny29621189@kimo.com","author":"johnnywang1994","message":"UPD: update git diff"},{"hash":"7eaa7f4d79f2352adc2872a127513d48c41534fb","time":1634376566000,"email":"johnny29621189@kimo.com","author":"johnnywang1994","message":"UPD: update git"},{"hash":"ed5c90d340759d0e74011a16ad94a0269a4ee528","time":1630549901000,"email":"johnny29621189@kimo.com","author":"johnnywang1994","message":"UPD: update git md"},{"hash":"51e618d93d4f837fbce25a1e1f0a9783cbc46b6a","time":1624012650000,"email":"wangj@garena.com","author":"Johnny Wang","message":"INIT"}]},"filePathRelative":"articles/git/branch.md"}');export{d as comp,p as data};
