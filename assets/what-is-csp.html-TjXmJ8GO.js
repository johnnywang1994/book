import{_ as t,c as i,b as n,a as e,e as c,o as l,r as p}from"./app-Ba7lTalA.js";const r={};function o(d,s){const a=p("SocialBlock");return l(),i("div",null,[s[0]||(s[0]=n("h1",{id:"csp-content-security-policy-是什麼",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#csp-content-security-policy-是什麼"},[n("span",null,"CSP (Content Security Policy) 是什麼？")])],-1)),e(a,{hashtags:"javascript,header,xss,csp,content-security-policy"}),s[1]||(s[1]=c(`<p>大家好！我是 Johnny，今天要來介紹一個很重要，但卻很常被忽略的東西，叫做 Content Security Policy</p><h2 id="基本介紹" tabindex="-1"><a class="header-anchor" href="#基本介紹"><span>基本介紹</span></a></h2><p>是一個用來控制我們網站允許載入文件資源的功能，特別是 JavaScript 資源(或是常見 CSS style 資源)，用以最大程度防禦，比如跨站腳本（XSS）攻擊之類的狀況</p><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><p>CSP 基本使用方式如下，在 browser response header 中設置 <code>Content-Security-Policy</code></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http" data-title="http"><pre><code><span class="line"><span class="token header"><span class="token header-name keyword">Content-Security-Policy</span><span class="token punctuation">:</span> <span class="token header-value csp languages-csp">default-src &#39;self&#39;;</span>
<span class="line">  img-src &#39;self&#39; example.com</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>default-src</code> 告知 browser 只能載入 same-origin 文件，除非有另外設定</li><li><code>img-src</code> 告知 browser 可載入 same-origin 及來自 example.com 的文件</li><li>除了上述兩個指令外，還有比如 script-src, style-src, connect-src 等多種針對不同內容的指令可使用</li></ul><h2 id="csp-nonce-是什麼" tabindex="-1"><a class="header-anchor" href="#csp-nonce-是什麼"><span>CSP Nonce 是什麼？</span></a></h2><p>nonce 是 server 針對每個 request 所動態產生的一個隨機字串，並將其使用於 script-src, style-src 指令中，同時把其放在 script, style tag 上</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http" data-title="http"><pre><code><span class="line">Content-Security-Policy:</span>
<span class="line">script-src &#39;nonce-416d1177-4d12-4e3b-...&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span></span>
<span class="line">  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">nonce</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>416d1177-4d12-4e3b-...<span class="token punctuation">&quot;</span></span></span>
<span class="line"><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>當 browser 載入 script, style tag 時會拿 nonce 屬性值去比對 header 上的 nonce，相同時才將文件載入</p><h2 id="csp-hashes-是什麼" tabindex="-1"><a class="header-anchor" href="#csp-hashes-是什麼"><span>CSP Hashes 是什麼？</span></a></h2><p>類似 nonce 的 hash 值，用於保證 script 文件完整性，由 server 算法產生後放入 header，及 script tag 的 <code>integrity</code> 屬性中</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http" data-title="http"><pre><code><span class="line">Content-Security-Policy:</span>
<span class="line">script-src &#39;sha256-ex2O7MW...&#39; &#39;sha256-H/eahV...&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">integrity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sha256-ex2O7MW...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">integrity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sha256-H/eahV...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>每個 script 有獨立的 hash 值</li><li>與 nonce 不同，hash 的 CSP header 及 integrity 兩者都可以是靜態的，更適合用在依賴純 client-side 渲染的靜態頁面中</li></ul><h2 id="strict-dynamic-是什麼" tabindex="-1"><a class="header-anchor" href="#strict-dynamic-是什麼"><span>strict-dynamic 是什麼？</span></a></h2><p>假如我們有個 <code>main.js</code>，並在其中動態載入了另一個 <code>main2.js</code>，但只有 main.js 有加上 <code>integrity</code> 屬性，此時因為 main2.js 沒有 hash 將無法被載入，為了解決這種 strict 模式下的第三方額外資源載入問題，可使用 <code>strict-dynamic</code> 指令</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http" data-title="http"><pre><code><span class="line">Content-Security-Policy:</span>
<span class="line">  script-src &#39;sha256-gEh1+8U...&#39;</span>
<span class="line">  strict-dynamic</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>特別適合用在網站有使用第三方 script 時（比如 Google GA, LINE Liff SDK 等等）</p>`,21)),e(a,{hashtags:"javascript,header,xss,csp,content-security-policy"}),s[2]||(s[2]=n("h2",{id:"結論",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#結論"},[n("span",null,"結論")])],-1)),s[3]||(s[3]=n("p",null,"實際深入使用 CSP 後才會知道，其實網站有很多資源載入的動作需要特別注意設定，當我們在開發網站時，保持高度的警戒意識才能讓使用我們網站的用戶受到更好的保障，也才能避免因為開發者的一時偷懶、疏忽而導致無法挽回的客戶信任流失，下次開發網站時也試試看能不能在你的網站中加上 CSP 吧！",-1))])}const h=t(r,[["render",o],["__file","what-is-csp.html.vue"]]),m=JSON.parse('{"path":"/articles/memo/js/what-is-csp.html","title":"CSP (Content Security Policy) 是什麼？","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"基本介紹","slug":"基本介紹","link":"#基本介紹","children":[]},{"level":2,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]},{"level":2,"title":"CSP Nonce 是什麼？","slug":"csp-nonce-是什麼","link":"#csp-nonce-是什麼","children":[]},{"level":2,"title":"CSP Hashes 是什麼？","slug":"csp-hashes-是什麼","link":"#csp-hashes-是什麼","children":[]},{"level":2,"title":"strict-dynamic 是什麼？","slug":"strict-dynamic-是什麼","link":"#strict-dynamic-是什麼","children":[]},{"level":2,"title":"結論","slug":"結論","link":"#結論","children":[]}],"git":{"updatedTime":1736610832000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"}]},"filePathRelative":"articles/memo/js/what-is-csp.md"}');export{h as comp,m as data};
