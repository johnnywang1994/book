import{_ as t,r as p,o as e,c,d as n,e as s,a as o,f as i}from"./app-d4cd373e.js";const l={},u=n("h1",{id:"parse-schema-object-章節",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parse-schema-object-章節","aria-hidden":"true"},"#"),s(" Parse Schema Object 章節")],-1),r={href:"https://docs.parseplatform.org/js/guide/#schema",target:"_blank",rel:"noopener noreferrer"},d=i(`<p>用來描述 Parse 物件的架構，用於 migration 或是 testing 非常方便，對於 Schema 的修改一律建議使用 migration 的方式進行，避免錯誤修改無法回溯查找問題</p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h2><p>可以直接在線上環境修改 Schema，但請記住一但做了任何修改是回不去的，相關的欄位資料將被移除</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// create an instance to manage your class</span>
<span class="token keyword">const</span> mySchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token string">&#39;MyClass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// gets the current schema data</span>
mySchema<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// returns schema for all classes</span>
Parse<span class="token punctuation">.</span>Schema<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// add any # of fields, without having to create any objects</span>
mySchema
  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;stringField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token string">&#39;numberField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addBoolean</span><span class="token punctuation">(</span><span class="token string">&#39;booleanField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addDate</span><span class="token punctuation">(</span><span class="token string">&#39;dateField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addFile</span><span class="token punctuation">(</span><span class="token string">&#39;fileField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addGeoPoint</span><span class="token punctuation">(</span><span class="token string">&#39;geoPointField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addPolygon</span><span class="token punctuation">(</span><span class="token string">&#39;polygonField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addArray</span><span class="token punctuation">(</span><span class="token string">&#39;arrayField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">&#39;objectField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addPointer</span><span class="token punctuation">(</span><span class="token string">&#39;pointerField&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addRelation</span><span class="token punctuation">(</span><span class="token string">&#39;relationField&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// new types can be added as they are available</span>
mySchema<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&#39;newField&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ANewDataType&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// delete field</span>
mySchema<span class="token punctuation">.</span><span class="token function">deleteField</span><span class="token punctuation">(</span><span class="token string">&#39;stringField&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// save/update this schema to persist your field changes</span>
mySchema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// returns save new schema</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
mySchema<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// updates existing schema</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="indexes" tabindex="-1"><a class="header-anchor" href="#indexes" aria-hidden="true">#</a> Indexes</h2><p>需要 <code>masterKey</code> 來執行</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// field 必須在加入 index 之前就存在</span>
mySchema<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;stringField&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">defaultValue</span><span class="token operator">:</span> <span class="token string">&#39;defaultString&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 預設值</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">stringField</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
mySchema<span class="token punctuation">.</span><span class="token function">addIndex</span><span class="token punctuation">(</span><span class="token string">&#39;stringFieldIndex&#39;</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
mySchema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 刪除 index</span>
testSchema<span class="token punctuation">.</span><span class="token function">deleteIndex</span><span class="token punctuation">(</span><span class="token string">&#39;indexName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mySchema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

mySchema<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 取得 indexes</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>indexes<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="purge" tabindex="-1"><a class="header-anchor" href="#purge" aria-hidden="true">#</a> Purge</h2><p>清除 schema(class) 中的所有 object，注意這是一項不可逆轉的動作</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mySchema<span class="token punctuation">.</span><span class="token function">purge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="class-level-permission" tabindex="-1"><a class="header-anchor" href="#class-level-permission" aria-hidden="true">#</a> Class Level Permission</h2><p>CLP 是一項安全功能，允許開發者以比基於 ACL(Access Control List) 權限控制提供更廣泛的方式限制訪問。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 修改內建 User schema</span>
<span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

schema
  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 設定 Schema 的 CLP</span>
  <span class="token punctuation">.</span><span class="token function">setCLP</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">requiresAuthentication</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">requiresAuthentication</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;*&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 建立 Post Schema，綁定欄位到 _User</span>
<span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token string">&#39;Post&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

schema
  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addPointer</span><span class="token punctuation">(</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span>

  <span class="token punctuation">.</span><span class="token function">setCLP</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">requiresAuthentication</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">update</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function k(v,m){const a=p("ExternalLinkIcon");return e(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[s("Link"),o(a)])])]),d])}const h=t(l,[["render",k],["__file","schema.html.vue"]]);export{h as default};
