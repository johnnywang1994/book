import{_ as r,c,b as a,a as t,d as l,r as d,o as n}from"./app-BTOpo2wX.js";const s={};function p(i,e){const o=d("SocialBlock");return n(),c("div",null,[e[0]||(e[0]=a("h1",{id:"關於我的-side-project-maju-web-editor",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#關於我的-side-project-maju-web-editor"},[a("span",null,"關於我的 Side project - Maju Web Editor")])],-1)),t(o,{hashtags:"javascript,typescript,esmodule,runtime,editor"}),e[1]||(e[1]=l('<p>嗨大家好，我是 Johnny。</p><p>最近剛好在公司內部分享完有關 <code>URL.createObjectURL</code> 的內容，想起被我塵封已經的 <a href="https://www.npmjs.com/package/script-custom-module" target="_blank" rel="noopener noreferrer">script-custom-module</a> 套件，距離我當時做完這套件也已經過了一段時間了</p><p>這是一個讓開發者可以在瀏覽器端動態編譯 html, css, react, vue 的小工具，完全不需要任何 webpack, rollup 配置，純粹的 native esmodule，不過目前就真的只適合在本地開發 prototype 使用，畢竟動態編譯所有文件這種事非常消耗網頁效能，在講求 runtime 預編譯或甚至無編譯的主流架構下是邪門歪道～</p><p>不過當時製作時並沒有加入遞回解析文件的能力，必須把所有模組都寫在 index.html 中，實在是不方便，雖然我曾經有念頭想幫他改造一波，但請恕小弟不才時間不夠ＸＤ，這次直接燃燒週末 24 小時，首先把 script-custom-module 做為基礎改造一波後，並接著對網頁編輯器做了一個大改版，歡迎有興趣試用的朋友們從下方連結前往喔～</p><h2 id="maju-網頁編輯器" tabindex="-1"><a class="header-anchor" href="#maju-網頁編輯器"><span>Maju 網頁編輯器</span></a></h2><p>這個 <code>Maju 網頁編輯器</code> 的起源是我個人想做一個小的 side project 開始，於是就覺得模仿 <code>Codepen</code> 那樣做看看，但做的過程真的遇到很多困難，也嘗試失敗了好多次，於是就誕生了第一版</p><ul><li><a href="https://maju-ide.herokuapp.com/" target="_blank" rel="noopener noreferrer">第一版連結 - JW Editor</a></li></ul><p>包含了最基本的網頁三劍客編輯器 <code>html</code>, <code>scss</code>, <code>javascript</code>，並且會把編輯器內容自動儲存在用戶的 <code>localStorage</code> 中，還具備全螢幕、下載檔案、清除內容、變更字體大小等等功能。</p><p>但這編輯器還是不能直接寫 react, vue 這種酷炫用法，於是在一通鑽研後，又誕生了第二版，這個第二版有個特別的地方，那就是透過前面提到的 <a href="https://www.npmjs.com/package/script-custom-module" target="_blank" rel="noopener noreferrer">script-custom-module</a> 製作，可以支援 react, vue3 的編譯（用法請參考套件文件內），但缺點也很明顯，就是無法在編輯器中開啟多個 js 檔案編輯，只能在單一窗口下編輯總是少了點樂趣</p><ul><li><a href="https://www.maju-web.club/local" target="_blank" rel="noopener noreferrer">第二版連結 - Maju Editor</a></li></ul><p>所以最終，「全新宇宙無敵霹靂」第三版迷你編輯器登場拉～這一版當中不僅讓開發者可以像在 <code>codesandbox</code> 那樣新增刪除檔案，還能將檔案互相 import 使用，大大增加開發的方便性，需要 import 第三方套件也能直接在 <code>index.html</code> 中自由發揮，說是像 <code>codesandbox</code>，但由於是在 local 編譯，編輯完簡直是瞬間就編譯完成，比 <code>codesandbox</code> 快不知道多少，簡直就是我心目中完美的線上編輯器啊！！～～希望大家也會喜歡摟（之所有一直提 codesandbox 是因為我其實很愛用，但就是每次編輯個小東西都要等半天這點很賭爛...）</p><ul><li><a href="https://www.maju-web.club/plus/?cacheId=vue" target="_blank" rel="noopener noreferrer">第三版連結 - Maju IDE Vue template</a></li><li><a href="https://www.maju-web.club/plus/?cacheId=react&amp;template=react" target="_blank" rel="noopener noreferrer">第三版連結 - Maju IDE React template</a></li></ul><h2 id="maju-ide-用法" tabindex="-1"><a class="header-anchor" href="#maju-ide-用法"><span>Maju IDE 用法</span></a></h2><ul><li>BaseURL: <code>https://www.maju-web.club/plus/</code></li><li>query: <ul><li>cacheId: 當前使用的 cache id，對應讀取 localStorage 的某個 cache key，若不存在暫存則會以預設 vue 或是指定的 template 創建新 cache</li><li>template: 預設為 <code>vue</code>, 也可以使用 <code>react</code>，在第一次進入新建 cache id 時才會套用，若 cache id 已經有內容存在 localStorage 中則會被忽略</li></ul></li></ul>',14)),t(o,{hashtags:"javascript,typescript,esmodule,runtime,editor"}),e[2]||(e[2]=a("h2",{id:"結論",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#結論"},[a("span",null,"結論")])],-1)),e[3]||(e[3]=a("p",null,"感謝這次公司內部分享作為一個契機，推動我把之前研究的一些東西又拿出來玩味了一遍ＸＤ，順便強化了編譯的效率採用 concurrent 的方式編譯 Nested Dependency，蠻不錯的體驗，隱約聽到我的肝在哭泣...先去睡個覺補眠了各位，下次見拉～",-1))])}const m=r(s,[["render",p]]),h=JSON.parse('{"path":"/articles/js/maju-web-ide.html","title":"關於我的 Side project - Maju Web Editor","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1667192337000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"}],"changelog":[{"hash":"b4ae7d375ef5e1e55bffbfe40015bbc205e5cd1d","time":1667192337000,"email":"johnnywang@test.com","author":"johnnywang","message":"UPD: add maju-web-ide"}]},"filePathRelative":"articles/js/maju-web-ide.md"}');export{m as comp,h as data};
