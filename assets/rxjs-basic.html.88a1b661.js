import{_ as c,r as t,o as i,c as u,a as s,d as n,e as a,b as e}from"./app.3564b875.js";const l={},r=n("h1",{id:"rxjs-\u5B78\u7FD2\u7B46\u8A18",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rxjs-\u5B78\u7FD2\u7B46\u8A18","aria-hidden":"true"},"#"),a(" Rxjs \u5B78\u7FD2\u7B46\u8A18")],-1),k=e(`<p>\u672C\u7BC7\u7D00\u9304\u5B78\u7FD2 Rxjs \u7684\u76F8\u95DC\u7B46\u8A18\u5167\u5BB9\uFF0C\u4F9B\u65E5\u5F8C\u8907\u7FD2\u4F7F\u7528\uFF0C\u4E3B\u8981\u4EE5\u57FA\u790E\u77E5\u8B58\u958B\u59CB\u3002</p><h2 id="\u4EC0\u9EBC\u662F-rxjs" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u9EBC\u662F-rxjs" aria-hidden="true">#</a> \u4EC0\u9EBC\u662F Rxjs</h2><p>Rxjs \u5C31\u50CF\u662F\u8655\u7406 event \u7684 lodash\uFF0C\u63D0\u4F9B\u4F7F\u7528\u8005\u5C0D\u65BC\u975E\u540C\u6B65\u6216\u540C\u6B65\u4E8B\u4EF6\u7684\u64CD\u4F5C\u8655\u7406\u3002\u50B3\u7D71\u4E0A javascript \u70BA pull \u7CFB\u7D71\uFF0C\u4E5F\u5C31\u662F function \u56DE\u50B3\u7D66\u4F7F\u7528\u8005\u503C\uFF0C\u88AB\u52D5\u53D6\u503C\uFF0Cfunction \u4E26\u4E0D\u77E5\u9053\u4F55\u6642\u4F7F\u7528\u8005\u9700\u8981\u3002\u800C promise \u5C31\u662F\u4E00\u7A2E push \u7CFB\u7D71\uFF0C\u6211\u5011\u4E8B\u5148\u8A3B\u518A\u4E00\u500B\u56DE\u8ABF\u52D5\u4F5C\uFF0C\u5728 promise \u5B8C\u6210\u5F8C\uFF0C\u6703\u81EA\u52D5\u5C07\u503C\u50B3\u56DE\u4E26\u8655\u7406\u56DE\u8ABF\u7684\u5167\u5BB9\uFF0C\u800C Observable \u7684\u6982\u5FF5\u4E5F\u662F push \u7CFB\u7D71\uFF0C\u4F46\u662F\u5176\u70BA lazy \u7684\u8ABF\u7528\uFF0C\u4E0D\u50CF promise \u6703\u5728\u5275\u5EFA\u5F8C\u7ACB\u5373\u57F7\u884C\uFF0CObservable \u5275\u5EFA\u5F8C\u4E26\u4E0D\u6703\u505A\u4EFB\u4F55\u52D5\u4F5C\uFF0C\u7576\u4F7F\u7528\u8005\u8A02\u95B1\u7684\u540C\u6642\uFF0C\u624D\u6703\u53BB\u9032\u884C\u8655\u7406\u53D6\u503C\u3002</p><p>\u4E3B\u8981\u70BA\u5206\u70BA\u5E7E\u500B\u55AE\u5143\uFF1A</p><ol><li>Observable</li></ol><p>\u70BA\u4E00\u53EF\u8ABF\u7528\u7684\u4E8B\u4EF6\u908F\u8F2F\u96C6\u5408\uFF0C\u5B9A\u7FA9\u4E4B\u5F8C\u53EF\u4EE5\u4F7F\u7528 subscribe \u9032\u884C\u8A02\u95B1</p><ol start="2"><li>Observer</li></ol><p>\u88DD\u8F09\u56DE\u8ABF\u7684\u5BB9\u5668\uFF0C\u5B9A\u7FA9\u4E09\u7A2E\u5305\u62EC next, error, complete \u7B49\u56DE\u8ABF\uFF0C\u53EF\u5728 subscribe \u6642\u50B3\u5165\uFF0C\u63D0\u4F9B Observable \u8ABF\u7528\u3002</p><ol start="3"><li>Operator</li></ol><p>\u7D14\u51FD\u6578\uFF0C\u65B9\u4FBF\u8B93\u4F7F\u7528\u8005\u4EE5\u51FD\u6578\u5F0F\u7DE8\u7A0B\u9032\u884C\u4E8B\u4EF6\u908F\u8F2F\u7684\u8655\u7406\uFF0C\u5305\u62EC <code>map</code>,<code>filter</code>,<code>concat</code>,<code>reduce</code>,<code>first</code>,<code>last</code> \u7B49\u7B49\u3002</p><ol start="4"><li>Subscription</li></ol><p>subscribe \u5F8C\u56DE\u50B3\u7684\u57F7\u884C\uFF0C\u4E3B\u8981\u7528\u65BC\u53D6\u6D88 Observable \u4E4B\u57F7\u884C</p><h2 id="observable" tabindex="-1"><a class="header-anchor" href="#observable" aria-hidden="true">#</a> Observable</h2><p>\u5EFA\u7ACB Observable \u7684\u65B9\u5F0F\u4E3B\u8981\u6709\u5169\u7A2E\uFF0C\u7B2C\u4E00\u7A2E\u662F\u76F4\u63A5 new \u4E00\u500B\uFF0C\u7B2C\u4E8C\u7A2E\u662F\u4F7F\u7528 <code>create operator</code> \u5982 <code>of</code>,<code>from</code>,<code>interval</code> \u7B49\u7B49\u9032\u884C\u5275\u5EFA\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Observable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> observable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">subscriber</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8ABF\u7528 Observable\uFF0C\u4F7F\u7528 subscribe\uFF0C\u5176\u4E2D\u63A5\u53D7\u4E00\u7D44 observer \u5305\u542B\u56DE\u8ABF\u4E8B\u4EF6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;got value &#39;</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">error</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;something wrong occurred: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;done&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7576\u5728 observable \u4E2D\u8ABF\u7528 <code>error</code> \u6216 <code>complete</code> \u56DE\u8ABF\u5F8C\uFF0C\u5176\u5F8C\u7684\u6240\u6709\u52D5\u4F5C\u90FD\u5C07\u4E0D\u518D\u88AB\u57F7\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> observable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">subscriber</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  subscriber<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9019\u88E1\u4E0D\u6703\u88AB\u57F7\u884C</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="operator" tabindex="-1"><a class="header-anchor" href="#operator" aria-hidden="true">#</a> Operator</h2><p>operator \u5C31\u662F\u4E00\u500B\u51FD\u6578\uFF0C\u56E0\u70BA\u6709\u7684\u9700\u8981\u50B3\u5165\u52D5\u4F5C\uFF0C\u6709\u4E9B\u4E0D\u7528\uFF0C\u6240\u4EE5\u7E3D\u662F\u4EE5\u8ABF\u7528\u7684\u65B9\u5F0F\u9032\u884C\u4E32\u63A5\uFF0C\u4E3B\u8981\u5206\u70BA <code>Pipeable</code> \u53CA <code>Creation</code> \u5169\u7A2E\uFF1A</p><ul><li>Pipeable\uFF1A<code>map</code>, <code>filter</code> \u7B49\u7B49\uFF0C\u4E3B\u8981\u63A5\u6536\u4E00\u500B Observable \u4E26\u9032\u884C\u8655\u7406\u5F8C\u56DE\u50B3\u65B0\u7684\uFF0C\u56E0\u6B64\u64CD\u4F5C\u5F8C\u4E0D\u5F71\u97FF\u539F\u4F86\u7684Observable\uFF0C\u4E14\u5C0D\u65B0\u7684 Observable \u8A02\u95B1\u4E00\u6A23\u6548\u679C\u3002</li><li>Creation: <code>of</code>, <code>from</code>, <code>interval</code> \u7B49\u7B49\uFF0C\u7528\u4EE5\u5FEB\u901F\u5275\u5EFA\u4E00\u500B\u65B0\u7684 Observable\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token keyword">of</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> map <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span><span class="token punctuation">;</span>

<span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u7576\u9700\u8981\u4E32\u63A5\u591A\u500B operator \u6642\uFF0C\u5C31\u6703\u5F88\u5BB9\u6613\u8B8A\u6210\u9019\u6A23\uFF0C\u53EF\u8B80\u6027\u975E\u5E38\u7684\u5DEE\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">op4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">op3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">op2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">op1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>obs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E5F\u56E0\u6B64\u4E00\u822C\u4E0D\u6703\u5982\u4E0A\u9762\u90A3\u6A23\u4F7F\u7528\uFF0C\u6211\u5011\u7528\u4F7F\u7528 <code>pipe</code> \u9019\u500B operator\u9032\u884C\u4E32\u63A5\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>obs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
  <span class="token function">op1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">op2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">op3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">op3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pipe" tabindex="-1"><a class="header-anchor" href="#pipe" aria-hidden="true">#</a> pipe</h3><p>\u5B98\u65B9\u63A8\u85A6\u5FC5\u7528\u5982\u4E0B\uFF1A</p><blockquote><p>As a stylistic matter, op()(obs) is never used, even if there is only one operator; obs.pipe(op()) is universally preferred</p></blockquote><h3 id="higher-order-observables" tabindex="-1"><a class="header-anchor" href="#higher-order-observables" aria-hidden="true">#</a> Higher-order Observables</h3><p>\u9AD8\u968E Observable \u662F Observable \u4E2D\u53C8\u6709 Observable\uFF0C\u6B64\u6642\u6703\u9700\u8981\u505A flattening \u7684\u52D5\u4F5C\u5C07\u5176\u56DE\u6B78\u6B63\u5E38\u7684\u72C0\u614B\uFF0C\u5E38\u898B\u7684 <code>flattening operators</code> \u5305\u542B\uFF1A<code>concatAll</code>,<code>mergeAll</code>,<code>switchAll</code>,<code>exhaust</code></p>`,32),d=a("\u7531\u65BC Operator \u7A2E\u985E\u975E\u5E38\u4E4B\u591A\uFF0C\u5B98\u65B9\u63D0\u4F9B\u4E86\u4E00\u500B\u76EE\u9304\u6E05\u55AE\u67E5\u8A62\u4F7F\u7528 "),b={href:"https://rxjs-dev.firebaseapp.com/guide/operators",target:"_blank",rel:"noopener noreferrer"},v=a("\u6E05\u55AE\u5728\u9019"),m=e(`<h2 id="subscription" tabindex="-1"><a class="header-anchor" href="#subscription" aria-hidden="true">#</a> Subscription</h2><p>\u662F\u4E00\u500B\u4E00\u6B21\u6027\u8CC7\u6E90\u7269\u4EF6\uFF0C\u6700\u4E3B\u8981\u5177\u6709 <code>unsubscribe</code> \u9019\u500B\u65B9\u6CD5\uFF0C\u9032\u884C\u8CC7\u6E90\u7684\u6E05\u9664\u52D5\u4F5C\u3002\u4E26\u4E14\u53EF\u4EE5\u4F7F\u7528 <code>add</code> \u65B9\u6CD5\uFF0C\u5C07\u591A\u500B subscriptions \u5408\u4F75\u5F8C\u4E00\u8D77\u9032\u884C\u79FB\u9664</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> subscription <span class="token operator">=</span> observable1<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;first: &#39;</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> childSubscription <span class="token operator">=</span> observable2<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;second: &#39;</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
subscription<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>childSubscription<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Unsubscribes BOTH subscription and childSubscription</span>
  subscription<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function h(f,g){const p=t("SocialBlock"),o=t("ExternalLinkIcon");return i(),u("div",null,[r,s(p,{hashtags:"javascript,rxjs"}),k,n("p",null,[d,n("a",b,[v,s(o)])]),m,s(p,{hashtags:"javascript,rxjs"})])}var j=c(l,[["render",h],["__file","rxjs-basic.html.vue"]]);export{j as default};
