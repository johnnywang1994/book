import{_ as c,r as o,o as i,c as l,a,d as n,e as s,f as t}from"./app.b1762916.js";const u={},r=n("h1",{id:"typescript-\u57FA\u790E\u7BC7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typescript-\u57FA\u790E\u7BC7","aria-hidden":"true"},"#"),s(" TypeScript \u57FA\u790E\u7BC7")],-1),k=t(`<p>\u6B64\u7BC7\u6587\u7AE0\u70BA\u770B\u5B8C\u962E\u4E00\u5C01\u524D\u8F29\u7684\u6559\u5B78\u5F8C\u96A8\u624B\u7B46\u8A18\uFF0C\u4F9B\u65E5\u5F8C\u5FEB\u901F\u8907\u7FD2\u4F7F\u7528\u3002</p><h2 id="\u539F\u59CB\u985E\u578B" tabindex="-1"><a class="header-anchor" href="#\u539F\u59CB\u985E\u578B" aria-hidden="true">#</a> \u539F\u59CB\u985E\u578B</h2><p><code>string</code>, <code>number</code>, <code>boolean</code>, <code>null</code>, <code>undefined</code>, <code>Symbol</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5DF2\u77E5</span>
<span class="token keyword">const</span> str <span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u672A\u77E5\u9810\u671F</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span> <span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5DF2\u77E5\u9810\u671F</span>
num <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8FD4\u56DE\u6578\u5B57\u7684\u51FD\u6578</span>
<span class="token keyword">function</span> <span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u7121\u8FD4\u56DE\u503C\u51FD\u6578</span>
<span class="token keyword">function</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4EFB\u610F\u503C-any" tabindex="-1"><a class="header-anchor" href="#\u4EFB\u610F\u503C-any" aria-hidden="true">#</a> \u4EFB\u610F\u503C any</h2><p>\u666E\u901A\u985E\u578B\u7684\u8B8A\u6578\uFF0C\u4E0D\u80FD\u5728\u904B\u7B97\u4E2D\u6539\u8B8A\u985E\u578B</p><ol><li>\u4E00\u500B any\uFF0C\u53EF\u4EE5\u5C0D\u4ED6\u505A\u4EFB\u4F55\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u7684\u5167\u5BB9\u90FD\u662F\u4EFB\u610F\u503C</li><li>\u7576\u8B8A\u91CF\u672A\u88AB\u660E\u78BA\u6307\u5B9A\u985E\u578B\u503C\u4E14\u5BA3\u544A\u6642\u6C92\u6709\u503C\u6642\uFF0C\u9810\u8A2D\u662F any</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> someText <span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span> <span class="token comment">// \u82E5\u6B64\u8A2D number \u5C07\u5831\u932F</span>
someText <span class="token operator">=</span> <span class="token string">&#39;someText&#39;</span><span class="token punctuation">;</span> <span class="token comment">// error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u985E\u578B\u63A8\u8AD6" tabindex="-1"><a class="header-anchor" href="#\u985E\u578B\u63A8\u8AD6" aria-hidden="true">#</a> \u985E\u578B\u63A8\u8AD6</h2><p>\u7576\u6C92\u6709\u660E\u78BA\u6307\u5B9A\u985E\u578B\uFF0C\u6703\u81EA\u52D5\u4F9D\u7167\u6B64\u898F\u5247\u63A8\u65B7\u51FA\u4E00\u500B\u985E\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> typeS <span class="token operator">=</span> <span class="token string">&#39;seven&#39;</span><span class="token punctuation">;</span>
typeS <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \u9019\u908A\u56E0\u521D\u59CB\u6709\u7D66\u503C\u70BA string\uFF0C\u81EA\u52D5\u63A8\u65B7\u70BA string \u985E\u578B</span>

<span class="token keyword">let</span> typeA<span class="token punctuation">;</span>
typeA <span class="token operator">=</span> <span class="token string">&#39;six&#39;</span><span class="token punctuation">;</span>
typeA <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span> <span class="token comment">// \u9019\u908A\u521D\u59CB\u6C92\u6709\u503C\uFF0C\u63A8\u65B7\u70BA any</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u806F\u5408\u985E\u578B" tabindex="-1"><a class="header-anchor" href="#\u806F\u5408\u985E\u578B" aria-hidden="true">#</a> \u806F\u5408\u985E\u578B</h2><p>\u8868\u793A\u53D6\u503C\u53EF\u70BA\u591A\u7A2E\u985E\u578B\u4E2D\u7684\u4E00\u7A2E\uFF0C\u4F7F\u7528 <code>|</code> \u5206\u9694\u591A\u500B\u985E\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> unionC<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token string">&#39;Ray&#39;</span><span class="token punctuation">;</span>
unionC <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getLength</span><span class="token punctuation">(</span>something<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> something<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// \u53EA\u80FD\u8A2A\u554F\u806F\u5408\u985E\u578B\u6240\u5171\u6709\u7684\u5C6C\u6027 error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5C0D\u8C61\u7684\u985E\u578B-\u63A5\u53E3-interface" tabindex="-1"><a class="header-anchor" href="#\u5C0D\u8C61\u7684\u985E\u578B-\u63A5\u53E3-interface" aria-hidden="true">#</a> \u5C0D\u8C61\u7684\u985E\u578B - \u63A5\u53E3(Interface)</h2><p>\u5E38\u7528\u65BC\u5C0D\u5C0D\u8C61 \u5F62\u72C0(Shape) \u7684\u63CF\u8FF0</p><ol><li>\u63A5\u53E3\u4E00\u822C\u9996\u5B57\u5927\u5BEB</li><li>\u5728\u5C6C\u6027\u540D\u5F8C\u52A0\u4E0A <code>?</code> \u914D\u7F6E\u300C\u53EF\u9078\u300D\u5C6C\u6027\uFF0C\u52A0\u5F37\u5C0D\u8C61\u985E\u578B\u7684\u5F48\u6027</li><li>\u53EF\u5141\u8A31\u4EFB\u610F\u5C6C\u6027\uFF0C\u4F46\u5176\u4ED6\u5C6C\u6027\u5FC5\u9808\u662F\u8A72\u4EFB\u610F\u5C6C\u6027\u985E\u578B\u7684\u5B50\u985E\u578B</li><li>\u5C6C\u6027\u540D\u524D\u52A0\u4E0A <code>readonly</code> \u6A19\u8A18\u300C\u53EA\u8B80\u300D\u5C6C\u6027</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u6B64 age \u70BA\u53EF\u9078\u5C6C\u6027</span>
  <span class="token punctuation">[</span>prop<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token comment">// \u6B64 prop \u70BA\u4EFB\u610F\u5C6C\u6027\u5B57\u4E32\uFF0C\u4E26\u63A5\u53D7\u4EFB\u610F\u985E\u578B</span>
  <span class="token comment">// [prop: string]: string; // \u56E0\u4EFB\u610F\u5C6C\u6027\u70BA\u5B57\u4E32\u985E\u578B\u503C\uFF0C\u4E0A\u65B9 age \u5C07\u4E0D\u53EF\u70BA number</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> tom<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token number">3387</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// age: 30,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u6B64\u7D04\u675F\u4E86 Tom \u5FC5\u9808\u8207 Person \u4FDD\u6301\u5F62\u72C0\u4E00\u81F4\u3002\uFF08\u591A\u6216\u5C11\u90FD\u4E0D\u884C\uFF09</span>

<span class="token comment">// \u7121\u6CD5\u5728\u521D\u59CB\u5316\u5F8C\u4FEE\u6539\u53EA\u8B80\u5C6C\u6027 error</span>
tom<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">4069</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u53EF\u4EE5\u5B9A\u7FA9\u51FD\u6578\u7684 interface \u6216\u662F\u5B50\u5C6C\u6027\u70BA\u51FD\u6578</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">MyFunction</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">MyObject</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">jump</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9663\u5217\u7684\u985E\u578B" tabindex="-1"><a class="header-anchor" href="#\u9663\u5217\u7684\u985E\u578B" aria-hidden="true">#</a> \u9663\u5217\u7684\u985E\u578B</h2><p>\u6709\u591A\u7A2E\u5B9A\u7FA9\u65B9\u5F0F</p><ol><li>\u985E\u578B + \u4E2D\u62EC\u865F</li><li>\u9663\u5217\u6CDB\u578B (Array)</li><li>interface \u63CF\u8FF0</li><li>\u985E\u6578\u7D44\uFF08IArguments, NodeList, HTMLCollection, Element...\uFF09</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// 1.</span>
<span class="token keyword">const</span> myArr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
myArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u76F8\u95DC\u65B9\u6CD5\u4E5F\u6703\u81EA\u52D5\u6AA2\u67E5 error</span>

<span class="token comment">// 2.</span>
<span class="token keyword">const</span> myArr2<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
myArr2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">;</span> <span class="token comment">// error</span>

<span class="token comment">// 3.</span>
<span class="token keyword">interface</span> <span class="token class-name">NumberArray</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> myArr3<span class="token operator">:</span> NumberArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// 4. \u5167\u5EFA\u985E\u6578\u7D44\u63A5\u53E3</span>
<span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> args<span class="token operator">:</span> IArguments <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),d={href:"https://willh.gitbook.io/typescript-tutorial/basics/built-in-objects",target:"_blank",rel:"noopener noreferrer"},m=t(`<h2 id="\u51FD\u6578\u7684\u985E\u578B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6578\u7684\u985E\u578B" aria-hidden="true">#</a> \u51FD\u6578\u7684\u985E\u578B</h2><p>\u5206\u70BA\u8072\u660E\u5F0F\u3001\u8868\u9054\u5F0F\uFF0C\u51FD\u6578\u5177\u6709\u8F38\u5165\u8207\u8F38\u51FA\uFF0C\u9700\u628A\u5169\u8005\u90FD\u8003\u616E\u5230</p><ol><li>\u8072\u660E\u5F0F</li><li>\u8868\u9054\u5F0F - \u5FC5\u9808\u5C07\u5DE6\u5074\u8B8A\u6578\u4E5F\u52A0\u4E0A\u5B9A\u7FA9\uFF0C\u6CE8\u610F\uFF01\u4E0D\u8981\u6DF7\u6DC6\u4E86 TS \u7684 =&gt; \u8DDF ES6 \u7684 =&gt; - \u56E0\u5BB9\u6613\u6DF7\u6DC6\uFF0C\u76E1\u91CF\u5C11\u7528</li><li>\u63A5\u53E3\u5B9A\u7FA9</li><li>\u4F7F\u7528 ? \u6A19\u8A18\u300C\u53EF\u9078\u300D\u53C3\u6578\uFF0C\u5176\u5F8C\u4E0D\u80FD\u6709\u5176\u4ED6\u5FC5\u9078\u53C3\u6578</li><li>\u53C3\u6578\u9ED8\u8A8D\u503C =&gt; \u5177\u9ED8\u8A8D\u503C\u5F97\u53C3\u6578\u6703\u81EA\u52D5\u8B8A\u70BA\u300C\u53EF\u9078\u300D</li><li>rest \u53C3\u6578\u53EF\u7528 any[] \u9663\u5217\u985E\u578B\u5B9A\u7FA9</li><li>\u91CD\u8F09\uFF1A\u5141\u8A31\u51FD\u6578\u63A5\u53D7\u4E0D\u540C\u6578\u91CF\u985E\u578B\u7684\u53C3\u6578\u6642\uFF0C\u505A\u51FA\u4E0D\u540C\u7684\u8655\u7406</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// 1.</span>
<span class="token keyword">function</span> <span class="token function">sumFn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">sumFn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error</span>
<span class="token function">sumFn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error</span>

<span class="token comment">// 2.</span>
<span class="token keyword">const</span> <span class="token function-variable function">sumFnEx</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function-variable function">number</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 3.</span>
<span class="token keyword">interface</span> <span class="token class-name">Isum</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> mySum<span class="token operator">:</span> <span class="token function-variable function">Isum</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 4. &amp; 5.</span>
<span class="token keyword">function</span> <span class="token function">buildName</span><span class="token punctuation">(</span>
  firstName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  lastName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">30</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, now age </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;johnny&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 6.</span>
<span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>items<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 7.</span>
<span class="token comment">// \u5FC5\u9808\u5B9A\u7FA9\u6578\u5B57\u9032\u6578\u5B57\u51FA\uFF0C\u4F7F\u7528\u91CD\u8F09\u5148\u884C\u7CBE\u78BA\u5B9A\u7FA9\u51FD\u6578\uFF0C\u6700\u5F8C\u9032\u884C\u51FD\u6578\u908F\u8F2F\u5BE6\u73FE</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u985E\u578B\u65B7\u8A00-type-assertion" tabindex="-1"><a class="header-anchor" href="#\u985E\u578B\u65B7\u8A00-type-assertion" aria-hidden="true">#</a> \u985E\u578B\u65B7\u8A00 - Type Assertion</h2><p>\u7528\u4EE5\u624B\u52D5\u6307\u5B9A\u4E00\u503C\u7684\u985E\u578B\uFF0C\u56E0\u5728 react \u7684 tsx(jsx \u7684 ts \u7248\u672C)\uFF0C\u4F7F\u7528\u7684\u662F\u4EE5 \u201C\u503C as \u985E\u578B\u201D \u7684\u65B9\u5F0F\u5340\u9694\uFF0C\u6545\u5EFA\u8B70\u90FD\u4F7F\u7528\u9019\u7A2E\u65B9\u5F0F\u907F\u514D\u6DF7\u6DC6</p><ol><li>\u4F7F\u7528\u806F\u5408\u985E\u578B\u6642\uFF0C\u6709\u6642\u5FC5\u9808\u5728\u9084\u4E0D\u78BA\u5B9A\u985E\u578B\u6642\u8A2A\u554F\u7279\u5B9A\u985E\u578B\u5C6C\u6027 - \u4F7F\u7528\u6642\u5FC5\u9808\u5C0F\u5FC3\uFF0C\u907F\u514D\u5728\u65B7\u8A00\u5F8C\u76F4\u63A5\u8ABF\u7528\u5C6C\u6027\uFF0C\u56E0\u7DE8\u8B6F\u6642\u6703\u901A\u904E\uFF0C\u4F46\u904B\u884C\u6642\u6703\u639B</li><li>\u7236\u985E\u5225\u7E7C\u627F\u95DC\u4FC2\u65B7\u8A00</li><li>&quot;XXX as any&quot; \u662F\u89E3\u6C7A TS \u985E\u578B\u554F\u984C\u7684<code>\u6700\u5F8C\u624B\u6BB5\uFF0C\u975E\u5FC5\u8981\u76E1\u91CF\u5C11\u7528</code></li><li><code>\u65B7\u8A00\u88DC\u5F37</code>\uFF08\u5C0D\u65BC\u8FD4\u56DE any \u985E\u578B\u7684\u820A\u4EE3\u78BC\uFF0C\u53EF\u4EE5\u5728\u8ABF\u7528\u8FD4\u56DE\u5F8C\u660E\u78BA\u65B7\u8A00\u4ED6\u7684\u985E\u578B\uFF09</li><li>\u985E\u578B\u65B7\u8A00<code>\u53EA\u6703\u5728\u7DE8\u8B6F\u6642\u6709\u6548</code>\uFF0C\u5C0D\u5BE6\u969B\u7DE8\u8B6F\u5F8C\u7684\u4EE3\u78BC\u4E0D\u5177\u4EFB\u4F55\u5F71\u97FF</li><li>\u985E\u578B\u8072\u660E\u6BD4\u985E\u578B\u65B7\u8A00\u66F4\u52A0\u56B4\u683C\uFF0C<code>\u76E1\u91CF\u90FD\u5148\u4F7F\u7528\u8072\u660E\u5F0F</code></li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// 1.</span>
<span class="token keyword">interface</span> <span class="token class-name">Cat</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Fish</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span>animal<span class="token operator">:</span> Cat <span class="token operator">|</span> Fish<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6B64\u6642\u56E0 Cat \u4E0D\u5177\u6709 swim \u5C6C\u6027\u6703\u5831\u932F</span>
  <span class="token comment">// if (typeof animal.swim === &#39;function&#39;) {</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span>animal <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span>swim <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Is a fish&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 2.</span>
<span class="token keyword">class</span> <span class="token class-name">ApiError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span>
  code<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">HttpError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span>
  statusCode<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isApiError</span><span class="token punctuation">(</span>error<span class="token operator">:</span> Error<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span>error <span class="token keyword">as</span> ApiError<span class="token punctuation">)</span><span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 3.</span>
<span class="token comment">// \u5C0D any \u985E\u578B\u8A2A\u554F\u4EFB\u4F55\u5C6C\u6027\u90FD\u662F\u5408\u6CD5\u7684\uFF0C\u4F46\u9019\u662F\u6700\u7D42\u624B\u6BB5</span>
window<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// error</span>
<span class="token punctuation">(</span>window <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">// 4.</span>
<span class="token keyword">function</span> <span class="token function">getCache</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>window <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Cat</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u985E\u578B\u65B7\u8A00</span>
<span class="token keyword">const</span> tomCat <span class="token operator">=</span> <span class="token function">getCache</span><span class="token punctuation">(</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Cat<span class="token punctuation">;</span>
<span class="token comment">// \u985E\u578B\u8072\u660E(\u8F03\u70BA\u56B4\u683C)</span>
<span class="token comment">// const tomCat: Cat = getCache(&#39;tom&#39;);</span>
tomCat<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8072\u660E\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u8072\u660E\u6587\u4EF6" aria-hidden="true">#</a> \u8072\u660E\u6587\u4EF6</h2><p>\u4F7F\u7528\u7B2C\u4E09\u65B9\u5EAB\u6642\uFF0C\u5FC5\u9808\u5F15\u7528\u4ED6\u7684\u8072\u660E\u6587\u4EF6\uFF0C\u4EE5\u63D0\u4F9B\u5C0D\u61C9\u7684\u985E\u578B\u6AA2\u67E5</p>`,10),v={href:"https://ts.xcatliu.com/basics/declaration-files.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://microsoft.github.io/TypeSearch/",target:"_blank",rel:"noopener noreferrer"},y=t(`<p>\u901A\u5E38\u6703\u628A\u8072\u660E\u8A9E\u53E5\u653E\u5165\u55AE\u7368\u6587\u4EF6\u4E2D\uFF0Ceg. jQuery.d.ts</p><ol><li><code>declare var/let/const</code></li><li><code>declare namespace</code> \u5275\u5EFA\u547D\u540D\u7A7A\u9593\uFF0C\u907F\u514D <code>interface</code> \u9020\u6210\u5168\u5C40\u6C61\u67D3\uFF0C\u4F7F\u7528\u8A72\u547D\u540D\u7A7A\u9593\u4E0B\u7684\u63A5\u53E3\u6642\u4E5F\u8981\u52A0\u4E0A\u8A72\u547D\u540D\u540D\u7A31</li><li>\u8A73\u7D30\u4E0D\u540C\u5EAB\u7684\u8072\u660E\u6587\u4EF6\uFF0C\u63A8\u85A6\u4F7F\u7528 <code>@types</code> \u7D71\u4E00\u7BA1\u7406\uFF0C\u76F4\u63A5\u5B89\u88DD\u5982 <code>npm install @types/jquery --save-dev</code>\uFF0C\u900F\u904E <code>@types</code> \u5B89\u88DD\u7684\u8072\u660E\u6587\u4EF6\uFF0C\u82E5\u70BA\u5168\u5C40\u8072\u660E\u5247\u4E0D\u7528\u518D\u9032\u884C\u4EFB\u4F55\u914D\u7F6E</li><li>NPM \u4E2D\u7684\u8072\u660E\u6587\u4EF6\u5FC5\u9808\u900F\u904E <code>export</code> \u548C <code>import</code> \u624D\u80FD\u5728\u6A21\u7D44\u5167\u4F7F\u7528</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// 1. \u4EE5 jQuery \u8209\u4F8B</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> <span class="token function-variable function">jQuery</span><span class="token operator">:</span> <span class="token punctuation">(</span>selector<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

<span class="token comment">// 2. \u8209\u4F8B\uFF0C\u50C5\u793A\u610F</span>
<span class="token keyword">declare</span> <span class="token keyword">namespace</span> Vue <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">component</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">mixin</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5BA3\u544A\u5408\u4F75" tabindex="-1"><a class="header-anchor" href="#\u5BA3\u544A\u5408\u4F75" aria-hidden="true">#</a> \u5BA3\u544A\u5408\u4F75</h3><p>\u4EE5 jQuery \u8209\u4F8B\uFF0C\u4ED6\u65E2\u662F\u4E00\u500B\u51FD\u5F0F\uFF0C\u53EF\u4EE5\u76F4\u63A5\u88AB\u547C\u53EB\uFF0C\u53C8\u662F\u4E00\u500B\u7269\u4EF6\uFF0C\u64C1\u6709\u5B50\u5C6C\u6027\uFF0C\u90A3\u9EBC\u6211\u5011\u53EF\u4EE5\u7D44\u5408\u591A\u500B\u5BA3\u544A\u8A9E\u53E5\uFF0C\u5B83\u5011\u6703\u4E0D\u885D\u7A81\u7684\u5408\u4F75\u8D77\u4F86\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">jQuery</span><span class="token punctuation">(</span>selector<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">namespace</span> jQuery <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> settings<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function g(f,h){const e=o("SocialBlock"),p=o("ExternalLinkIcon");return i(),l("div",null,[r,a(e,{hashtags:"typescript,basic"}),k,n("p",null,[s("\u95DC\u65BC\u5176\u4ED6\u5167\u5EFA\u7269\u4EF6"),n("a",d,[s("\u53EF\u67E5\u770B\u9019"),a(p)]),s("\u3002")]),m,n("ul",null,[n("li",null,[n("a",v,[s("\u8072\u660E\u8A9E\u6CD5\u6E05\u55AE"),a(p)])]),n("li",null,[n("a",b,[s("\u8072\u660E\u6587\u4EF6\u641C\u5C0B"),a(p)])])]),y,a(e,{hashtags:"typescript,basic"})])}const x=c(u,[["render",g],["__file","ts-basic.html.vue"]]);export{x as default};
