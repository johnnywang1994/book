import{_ as o,r as e,o as c,c as i,a,d as n,e as s,f as l}from"./app.3c6c98db.js";const u={},r=n("h1",{id:"vue-\u55AE\u5143\u6E2C\u8A66\u5B78\u7FD2\u7B46\u8A18",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vue-\u55AE\u5143\u6E2C\u8A66\u5B78\u7FD2\u7B46\u8A18","aria-hidden":"true"},"#"),s(" Vue \u55AE\u5143\u6E2C\u8A66\u5B78\u7FD2\u7B46\u8A18")],-1),k=n("p",null,"\u672C\u7BC7\u662F\u5B78\u7FD2 vue unit test \u7684\u96A8\u624B\u7B46\u8A18~",-1),d=n("h2",{id:"\u5B89\u88DD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B89\u88DD","aria-hidden":"true"},"#"),s(" \u5B89\u88DD")],-1),v=n("p",null,"\u9664\u4E86\u900F\u904E VueCli \u5167\u5EFA\u7684\u81EA\u52D5\u914D\u7F6E\u5B89\u88DD\uFF0C\u4E5F\u53EF\u53C3\u8003[\u9019\u500B\u5C08\u6848]\u7684\u4E00\u4E9B\u67B6\u69CB\u8DDF\u4F9D\u8CF4\u9032\u884C\u624B\u52D5\u5B89\u88DD",-1),m={href:"https://stackoverflow.com/questions/68065635/vue-test-utils-typeerror-cannot-destructure-property-config-of-undefined-or",target:"_blank",rel:"noopener noreferrer"},b=l(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">yarn</span> <span class="token function">add</span> @vue/test-utils vue3-jest@27 jest@27 ts-jest@27 babel-jest@27 jest-environment-jsdom@27 <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="babel" tabindex="-1"><a class="header-anchor" href="#babel" aria-hidden="true">#</a> Babel</h3><p>\u53E6\u5916\u56E0\u70BA\u6703\u9700\u8981\u7528\u5230 <code>babel</code>\uFF0C\u5982\u679C\u5C08\u6848\u4E2D\u539F\u672C\u6C92\u6709\u914D\u7F6E babel \u4E5F\u8981\u5B89\u88DD\u4E0B\u9762\u9019\u4E9B\u5957\u4EF6</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">yarn</span> <span class="token function">add</span> @babel/core @babel/preset-env <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u65B0\u589E <code>babel.config.js</code>(\u9019\u908A\u662F\u7BC4\u4F8B\uFF0C\u5982\u679C\u672C\u4F86\u5DF2\u7D93\u6709\u914D\u7F6E\u53EF\u5FFD\u7565\u9019\u88E1)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token string">&#39;current&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E" aria-hidden="true">#</a> \u914D\u7F6E</h2><p>\u63A5\u4E0B\u4F86\u8981\u914D\u7F6E <code>package.json</code> \u4EE5\u53CA <code>jest.config.js</code> \u5982\u4E0B</p><ul><li>package.json</li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yarn jest&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>jest.config.js</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">preset</span><span class="token operator">:</span> <span class="token string">&#39;ts-jest&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">globals</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">testEnvironment</span><span class="token operator">:</span> <span class="token string">&#39;jsdom&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;^.+\\\\.vue$&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue3-jest&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;^.+\\\\js$&quot;</span><span class="token operator">:</span> <span class="token string">&quot;babel-jest&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">moduleFileExtensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;jsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ts&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;node&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6E2C\u8A66\u6A94\u6848\u8DEF\u5F91" tabindex="-1"><a class="header-anchor" href="#\u6E2C\u8A66\u6A94\u6848\u8DEF\u5F91" aria-hidden="true">#</a> \u6E2C\u8A66\u6A94\u6848\u8DEF\u5F91</h3><p>\u9810\u8A2D\u6703\u81EA\u52D5\u5728\u5C08\u6848\u8CC7\u6599\u593E\u4E0B\u5C0B\u627E <code>__test__</code> \u8CC7\u6599\u593E\u5167\u7684\u6E2C\u8A66\u6A94\u6848\u9032\u884C\u8655\u7406</p><h2 id="jest-\u5167\u5EFA\u6E2C\u8A66\u51FD\u6578" tabindex="-1"><a class="header-anchor" href="#jest-\u5167\u5EFA\u6E2C\u8A66\u51FD\u6578" aria-hidden="true">#</a> Jest \u5167\u5EFA\u6E2C\u8A66\u51FD\u6578</h2><h3 id="describe" tabindex="-1"><a class="header-anchor" href="#describe" aria-hidden="true">#</a> describe</h3><p>\u5B9A\u7FA9\u6E2C\u8A66\u96C6</p><h3 id="test-it" tabindex="-1"><a class="header-anchor" href="#test-it" aria-hidden="true">#</a> test/it</h3><p>\u5B9A\u7FA9\u6E2C\u8A66\u9805\u76EE</p><h3 id="beforeeach" tabindex="-1"><a class="header-anchor" href="#beforeeach" aria-hidden="true">#</a> beforeEach</h3><p>\u5B9A\u7FA9\u6BCF\u6B21\u6E2C\u8A66\u9805\u76EE\u4E4B\u524D\u57F7\u884C\u7684\u52D5\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Test Task&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> wrapper
  <span class="token keyword">const</span> minLength <span class="token operator">=</span> <span class="token number">6</span>

  <span class="token comment">// \u5728\u6BCF\u4E00\u500B test() \u57F7\u884C\u524D\u904B\u884C\u7684\u4E00\u500B\u51FD\u5F0F\uFF0C\u5E38\u6703\u7528\u4F86\u521D\u59CB\u5316 wrapper</span>
  <span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Component<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;Test Case&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6E2C\u8A66\u7BC4\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u6E2C\u8A66\u7BC4\u4F8B" aria-hidden="true">#</a> \u6E2C\u8A66\u7BC4\u4F8B</h2><h3 id="\u521D\u59CB\u5316-vue-\u7D44\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316-vue-\u7D44\u4EF6" aria-hidden="true">#</a> \u521D\u59CB\u5316 Vue \u7D44\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;TodoApp Test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>TodoApp<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello World&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">exist</span><span class="token operator">:</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D6\u503C-\u67E5\u627E\u5143\u7D20-\u6AA2\u67E5" tabindex="-1"><a class="header-anchor" href="#\u53D6\u503C-\u67E5\u627E\u5143\u7D20-\u6AA2\u67E5" aria-hidden="true">#</a> \u53D6\u503C, \u67E5\u627E\u5143\u7D20, \u6AA2\u67E5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// get: \u67E5\u627E\uFF0C\u6C92\u627E\u5230\u5674\u932F\uFF0C\u901A\u5E38\u7528\u65BC\u5FC5\u9808\u5B58\u5728\u6642</span>
<span class="token comment">// toBe: \u6AA2\u67E5\u7B49\u65BC</span>
<span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;[data-test=&quot;todo&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;Profile&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// find: \u67E5\u627E\uFF0C\u6C92\u627E\u5230\u4E0D\u5674\u932F\uFF0C\u901A\u5E38\u7528\u65BC\u6AA2\u67E5\u662F\u5426\u5B58\u5728\u6642</span>
<span class="token comment">// exists: \u6AA2\u67E5\u5B58\u5728</span>
<span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;#admin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// html: \u7372\u53D6\u6E32\u67D3\u7684 html</span>
<span class="token comment">// toContain: \u6AA2\u67E5\u5305\u542B</span>
<span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// isVisible: \u6AA2\u67E5\u53EF\u8996(display: none, opacity: 0, visibility: hidden)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#visible&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isVisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D6\u5F97\u3001\u4FEE\u6539\u72C0\u614B\u503C" tabindex="-1"><a class="header-anchor" href="#\u53D6\u5F97\u3001\u4FEE\u6539\u72C0\u614B\u503C" aria-hidden="true">#</a> \u53D6\u5F97\u3001\u4FEE\u6539\u72C0\u614B\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;render admin link&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;#admin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// setData: \u4FEE\u6539\u72C0\u614B</span>
  <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">admin</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;#admin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;check data value&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// vm: \u53D6\u5F97 vue instance</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>email<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token constant">TEST_VALUE</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;not render error if prop showError is false&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;[data-test=&quot;password&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&#39;abcde&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// setProps: \u4FEE\u6539 props \u8CC7\u6599</span>
  <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span><span class="token function">setProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">showError</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;[data-test=&quot;errorMsg&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D6\u5F97\u3001\u4FEE\u6539-dom-\u503C" tabindex="-1"><a class="header-anchor" href="#\u53D6\u5F97\u3001\u4FEE\u6539-dom-\u503C" aria-hidden="true">#</a> \u53D6\u5F97\u3001\u4FEE\u6539 DOM \u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;check input value&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// setValue: \u4FEE\u6539\u8868\u55AE\u5143\u7D20\u503C</span>
  <span class="token keyword">await</span> emailInput<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token constant">TEST_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// element: \u53D6\u5F97 DOM \u5143\u7D20</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>emailInput<span class="token punctuation">.</span>element<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token constant">TEST_VALUE</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u547C\u53EB setValue \u7684\u5C0D\u8C61\u70BA OPTION\u3001CHECKBOX \u6216 RADIO \u6642\uFF0C \u5982\u679C\u6C92\u6709\u50B3\u53C3\u6578\u7D66 setValue \u5247\u8868\u793A\u70BA checked</p></blockquote><h3 id="\u89F8\u767C-dom-event" tabindex="-1"><a class="header-anchor" href="#\u89F8\u767C-dom-event" aria-hidden="true">#</a> \u89F8\u767C DOM Event</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;count became 1 after clicked once&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// trigger: \u89F8\u767C DOM \u4E8B\u4EF6</span>
  <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;[data-test=&quot;button&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;[data-test=&quot;count&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6AA2\u67E5\u3001\u89F8\u767C-emit-event" tabindex="-1"><a class="header-anchor" href="#\u6AA2\u67E5\u3001\u89F8\u767C-emit-event" aria-hidden="true">#</a> \u6AA2\u67E5\u3001\u89F8\u767C Emit Event</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;check emit triggered&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;[data-test=&quot;count&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u89F8\u767C\u4E8B\u4EF6</span>
  <span class="token keyword">await</span> count<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6AA2\u67E5\u89F8\u767C\u4E8B\u4EF6\u4E2D\u5305\u542B greet emit \u4E8B\u4EF6</span>
  <span class="token comment">// emitted: \u56DE\u50B3\u4E00\u500B\u7D00\u9304\u5143\u4EF6\u767C\u51FA\u7684\u6240\u6709\u4E8B\u4EF6\u7684\u7269\u4EF6\uFF0C\u4E5F\u53EF\u53D6\u5F97\u6307\u5B9A\u4E8B\u4EF6\u5167\u5BB9</span>
  <span class="token comment">// toHaveProperty: jest \u6AA2\u67E5\u7269\u4EF6\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u5C6C\u6027</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;greet&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> greetEvent <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token string">&#39;greet&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// toEqual: \u6BD4\u8F03\u7269\u4EF6\u7684\u6240\u6709\u5C6C\u6027\u6216\u9663\u5217\u7684\u6240\u6709\u5143\u7D20\u662F\u5426\u76F8\u7B49</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>greetEvent<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// emitted \u89F8\u767C\u5169\u6B21\u56DE\u50B3\u7D50\u69CB</span>
<span class="token keyword">const</span> emittedResponse <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">increment</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;uses shallowMount&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>
  <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span><span class="token function">findComponent</span><span class="token punctuation">(</span>Hello<span class="token punctuation">)</span><span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;greet&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40),g=n("h3",{id:"pinia-test",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pinia-test","aria-hidden":"true"},"#"),s(" Pinia Test")],-1),h={href:"https://pinia.vuejs.org/cookbook/testing.html",target:"_blank",rel:"noopener noreferrer"};function f(j,y){const t=e("SocialBlock"),p=e("ExternalLinkIcon");return c(),i("div",null,[r,a(t,{hashtags:"javascript,unit-test,vue-jest,vue,jest"}),k,d,v,n("blockquote",null,[n("p",null,[s("\u9019\u88E1\u8981\u7279\u5225\u6CE8\u610F\u76F8\u4F9D\u5957\u4EF6\u7684\u7248\u672C\u5FC5\u9808\u76F8\u540C\uFF0C\u5982\u679C\u76F4\u63A5\u5B89\u88DD jest \u6700\u65B0\u7248\u672C\u5C07\u6709\u53EF\u80FD\u5C0E\u81F4\u932F\u8AA4\uFF0C\u56E0\u70BA vue3-jest \u53EF\u80FD\u9084\u6C92\u76F8\u61C9\u5347\u7D1A\u7248\u672C\uFF0C\u53EF\u4EE5"),n("a",m,[s("\u53C3\u8003\u9019\u500B\u8A0E\u8AD6"),a(p)])])]),b,a(t,{hashtags:"javascript,unit-test,vue-jest,vue,jest"}),g,n("p",null,[n("a",h,[s("\u53C3\u8003 Pinia \u5B98\u65B9\u8AAA\u660E"),a(p)])])])}const w=o(u,[["render",f],["__file","vue-jest-memo.html.vue"]]);export{w as default};
