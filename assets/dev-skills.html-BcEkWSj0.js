import{_ as t,c as p,b as s,a as e,d as l,r as c,o}from"./app-CD0kgWCL.js";const i={};function u(r,n){const a=c("SocialBlock");return o(),p("div",null,[n[0]||(n[0]=s("h1",{id:"js-實戰開發特殊小技巧",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#js-實戰開發特殊小技巧"},[s("span",null,"JS 實戰開發特殊小技巧")])],-1)),e(a,{hashtags:"javascript"}),n[1]||(n[1]=l(`<p>本篇主要記錄一些開發 js 時的一些小技巧筆記～</p><h2 id="清空和截短數组" tabindex="-1"><a class="header-anchor" href="#清空和截短數组"><span>清空和截短數组</span></a></h2><p>除了常見的 slice, splice 以外，我們可以使用 length 操作</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">//[1, 2, 3, 4, 5]</span></span>
<span class="line">arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 清空</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="條件短路" tabindex="-1"><a class="header-anchor" href="#條件短路"><span>條件短路</span></a></h2><blockquote><p>需注意 eslint 可能限制</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>hungry<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">goToFridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">hungry <span class="token operator">&amp;&amp;</span> <span class="token function">goToFridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="逗號運算符" tabindex="-1"><a class="header-anchor" href="#逗號運算符"><span>逗號運算符</span></a></h2><p>二元運算符，它能先執行運算符左側的操作數，然後再執行右側的操作數，最後返回右側操作數的值。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">myFunc</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// the same as return ++x;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="快速移除重複項" tabindex="-1"><a class="header-anchor" href="#快速移除重複項"><span>快速移除重複項</span></a></h2><p>使用 Set 物件的不重複特性與數組解構</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">removeDuplicate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> myFruit <span class="token operator">=</span> <span class="token function">removeDuplicate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myFruit<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;apple&#39;, &#39;banana&#39;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="取消選取、防止複製" tabindex="-1"><a class="header-anchor" href="#取消選取、防止複製"><span>取消選取、防止複製</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">onselectstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>return false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="不允許貼上" tabindex="-1"><a class="header-anchor" href="#不允許貼上"><span>不允許貼上</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">onpaste</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>return false<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="防複製、剪下" tabindex="-1"><a class="header-anchor" href="#防複製、剪下"><span>防複製、剪下</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">oncopy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>return false<span class="token punctuation">&quot;</span></span> <span class="token attr-name">oncut</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>return false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Content cant be copy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,19)),e(a,{hashtags:"javascript"})])}const k=t(i,[["render",u],["__file","dev-skills.html.vue"]]),m=JSON.parse('{"path":"/articles/memo/js/dev-skills.html","title":"JS 實戰開發特殊小技巧","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"清空和截短數组","slug":"清空和截短數组","link":"#清空和截短數组","children":[]},{"level":2,"title":"條件短路","slug":"條件短路","link":"#條件短路","children":[]},{"level":2,"title":"逗號運算符","slug":"逗號運算符","link":"#逗號運算符","children":[]},{"level":2,"title":"快速移除重複項","slug":"快速移除重複項","link":"#快速移除重複項","children":[]},{"level":2,"title":"取消選取、防止複製","slug":"取消選取、防止複製","link":"#取消選取、防止複製","children":[]},{"level":2,"title":"不允許貼上","slug":"不允許貼上","link":"#不允許貼上","children":[]},{"level":2,"title":"防複製、剪下","slug":"防複製、剪下","link":"#防複製、剪下","children":[]}],"git":{"updatedTime":1649601399000,"contributors":[{"name":"Johnny Wang","username":"Johnny Wang","email":"wangj@garena.com","commits":1,"url":"https://github.com/Johnny Wang"},{"name":"johnnywang1994","username":"johnnywang1994","email":"johnny29621189@kimo.com","commits":2,"url":"https://github.com/johnnywang1994"},{"name":"johnnywang","username":"johnnywang","email":"johnny29621189@kimo.com","commits":1,"url":"https://github.com/johnnywang"}]},"filePathRelative":"articles/memo/js/dev-skills.md"}');export{k as comp,m as data};
