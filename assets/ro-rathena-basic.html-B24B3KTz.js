import{_ as a,c as r,d as o,o as n}from"./app-DZhdvvpJ.js";const c={};function s(t,e){return n(),r("div",null,[...e[0]||(e[0]=[o('<h1 id="ro-rathena-hercules-版本介紹" tabindex="-1"><a class="header-anchor" href="#ro-rathena-hercules-版本介紹"><span>RO - rAthena, Hercules 版本介紹</span></a></h1><p>本篇記錄 RO 仙境傳說私服研究的筆記，純作為教育用途，本人在這方面是菜鳥，如有理解謬誤還請見諒</p><p>仙境傳說遊戲本體分為幾個發展時期，主要是 prere, renew 復興版本等，差異最主要是職業二轉、三轉、四轉的開放</p><h2 id="hercules-版本" tabindex="-1"><a class="header-anchor" href="#hercules-版本"><span>Hercules 版本</span></a></h2><p>此版本遊戲內容普遍被認為較舊，優點是整體技術穩定性比 rathena 高，如果沒有特別要求跟上官方進度的可以考慮</p><h3 id="架構" tabindex="-1"><a class="header-anchor" href="#架構"><span>架構</span></a></h3><p>使用 <a href="https://laragon.org/" target="_blank" rel="noopener noreferrer">Laragon</a> 整合一系列的 DB, Apache 等等技術，讓想在本地單機遊玩的玩家可以快速一鍵搭起服務，對只想在本地回味的初學者友善，使用流程大致如下</p><ul><li>在下載的 Hercules 版本的資料夾中找到 <code>laragon.exe</code> 並啟動，會開啟一個 panel 視窗，點擊左邊的 <code>start all</code> 啟動所有需要的服務</li><li>開啟 <code>emulator</code> 資料夾中的 <code>run-server.bat</code> 腳本，會依序啟動以下幾個 server 的執行檔(依賴關係)，並開啟三個終端機視窗 <ul><li><code>login-server.exe</code></li><li><code>char-server.exe</code></li><li><code>map-server.exe</code></li></ul></li><li>如果 emulator 資料夾中沒有以上三個 server，可能需要使用 Visual Studio 的編譯桌面 APP 功能編譯出執行檔，可參考隔壁 rathena 文件中的這篇 <a href="https://github.com/rathena/rathena/wiki/Install-on-Windows" target="_blank" rel="noopener noreferrer">Install on Windows</a></li><li>最後前往 <code>ro-client</code> 或是 <code>kRO</code> 等放置客戶端工具的資料夾(需要對應的版本，至少不要差太多版本)，開啟 <code>2019-06-05fRagexe_patched.exe</code> 或類似的執行檔開始遊玩</li></ul><h2 id="rathena-版本" tabindex="-1"><a class="header-anchor" href="#rathena-版本"><span>rAthena 版本</span></a></h2><ul><li><a href="https://github.com/rathena/rathena" target="_blank" rel="noopener noreferrer">rAthena</a> 此版本內容通常跟官方比較緊，但技術穩定度比 Hercules 低些，使用時除非具備一定的 Docker 知識，可以使用 docker-compose 快速部屬，但對不懂得初學者門檻較高，無法像 Hercules 那樣無腦部屬</li></ul><h3 id="windows-架構" tabindex="-1"><a class="header-anchor" href="#windows-架構"><span>Windows 架構</span></a></h3><ul><li>可參考官方文件 <a href="https://github.com/rathena/rathena/wiki/Install-on-Windows" target="_blank" rel="noopener noreferrer">Install on Windows</a></li></ul><h3 id="docker-架構" tabindex="-1"><a class="header-anchor" href="#docker-架構"><span>Docker 架構</span></a></h3><ul><li>可參考官方文件 <a href="https://rathena.github.io/user-guides/installing/docker/" target="_blank" rel="noopener noreferrer">Install on Docker</a></li><li>確保本地已安裝 Docker</li><li>在下載的 rAthena 版本的資料夾中開啟 <code>tools/docker</code></li><li>執行 <code>docker-compose up</code>，第一次會自動搭起資料庫及 server，並跳出 exit code 0，關閉後再次執行 <code>docker-compose up</code> 即可啟動環境，需要注意 <code>sql-files</code> 裡面資料庫初始化的動作只有在第一次執行 up 指令時建立 volumes，第二次就不會再次建立，如果同時在測試多個不同版本的 rAthena 專案需要特別留意，避免資料庫異常導致啟動失敗</li><li>與 Hercules 版本最後步驟相同</li></ul><h3 id="issues" tabindex="-1"><a class="header-anchor" href="#issues"><span>Issues</span></a></h3><ul><li>Invalid password 問題 在使用 docker-compose up 啟動服務的過程裡，如果遇到 Invalid password 問題，首先可以檢查配置裡的 <code>char_athena.conf</code> or <code>map_athena.conf</code> 的 userid, passwd，是否跟 <code>sql-files/main.sql</code> login table 後面加入的初始帳號相同，如果相同的情況下還是跳出這個 error，則可能是 rathena 在解析 password decrypt 時發生 bug，這個環節是在 char-server 要連上 login-server 時發生，檢查是否在 <code>login_athena.conf</code> 或 <code>import/login_conf.txt</code> 中的 <code>use_MD5_passwords</code> 被設定成 <code>yes</code>，如果是則可能就會發生 decrypt 解密問題，改成 <code>no</code> 應該可以解決，此問題比較常出現在舊版上，新版的 rathena 似乎已解決此問題</li></ul><h3 id="客戶端主程式-endpoint-調整" tabindex="-1"><a class="header-anchor" href="#客戶端主程式-endpoint-調整"><span>客戶端主程式 endpoint 調整</span></a></h3><p>找到 server 版本對應的客戶端主程式專案後，找到資料夾內的 <code>data.grf</code>，或是打開 <code>data.ini</code> 查看裡面相關的 grf 檔案，透過 GRF Editor 打開，打開後找到 <code>sclientinfo.txt</code> 或 <code>clientinfo.txt</code> 檔案，把對應的 ip 位置替換成你的 login server ip 即可</p>',18)])])}const d=a(c,[["render",s]]),i=JSON.parse('{"path":"/articles/memo/ro-rathena-basic.html","title":"RO - rAthena, Hercules 版本介紹","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1755602919000,"contributors":[{"name":"JohnnyWang","username":"JohnnyWang","email":"meiliao1207@gmail.com","commits":2,"url":"https://github.com/JohnnyWang"}],"changelog":[{"hash":"84e0354c7e97262590d05dda32c4408dc3379c8d","time":1755602919000,"email":"meiliao1207@gmail.com","author":"JohnnyWang","message":"UPD","tag":"v1.2.1"},{"hash":"35db9759ca2289f3ee0392daa62f5870be6d99dd","time":1754105820000,"email":"meiliao1207@gmail.com","author":"JohnnyWang","message":"UPD: add geo-chat side project"}]},"filePathRelative":"articles/memo/ro-rathena-basic.md"}');export{d as comp,i as data};
