import{_ as i,r as p,o as l,c as u,a,d as s,e as n,w as r,f as e}from"./app.e113856e.js";const d={},k=s("h1",{id:"\u5FEB\u901F\u4E0A\u624B-nextjs-v13-data-fetching-caching-revalidating-\u7BC7",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u5FEB\u901F\u4E0A\u624B-nextjs-v13-data-fetching-caching-revalidating-\u7BC7","aria-hidden":"true"},"#"),n(" \u5FEB\u901F\u4E0A\u624B NextJS v13 - Data Fetching, Caching, Revalidating \u7BC7")],-1),v=s("h2",{id:"\u524D\u8A00",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u524D\u8A00","aria-hidden":"true"},"#"),n(" \u524D\u8A00")],-1),m=s("code",null,"Date Fetching",-1),g=s("code",null,"Caching",-1),h=s("code",null,"Revalidating",-1),b=s("code",null,"Forms and Mutations",-1),f={href:"https://nextjs.org/docs/app/building-your-application/data-fetching/forms-and-mutations",target:"_blank",rel:"noopener noreferrer"},y=e('<h2 id="data-fetching-caching-and-revalidating" tabindex="-1"><a class="header-anchor" href="#data-fetching-caching-and-revalidating" aria-hidden="true">#</a> Data Fetching, Caching, and Revalidating</h2><p>\u9019\u90E8\u5206\u7B97\u662F Next13 \u4E3B\u8981\u6838\u5FC3\u529F\u80FD\u4E4B\u4E00\uFF0C\u4E3B\u8981\u6709\u4EE5\u4E0B\u56DB\u7A2E data fetching \u7684\u65B9\u5F0F\uFF1A</p><ol><li>\u5728 Server \u7AEF\u4F7F\u7528 fetch</li><li>\u5728 Server \u7AEF\u4F7F\u7528 NPM \u4F9D\u8CF4</li><li>\u5728 Client \u7AEF\u4F7F\u7528 Route Handler(\u985E\u4F3C\u820A\u7684 <code>pages/api</code>)</li><li>\u5728 Client \u7AEF\u4F7F\u7528 NPM \u4F9D\u8CF4</li></ol><h2 id="\u5728-server-\u7AEF\u4F7F\u7528-fetch" tabindex="-1"><a class="header-anchor" href="#\u5728-server-\u7AEF\u4F7F\u7528-fetch" aria-hidden="true">#</a> \u5728 Server \u7AEF\u4F7F\u7528 fetch</h2><p>Next13 \u5728 server \u7AEF\u64F4\u5C55\u4E86\u539F\u751F\u7684 fetch api\uFF0C\u8B93\u958B\u767C\u8005\u53EF\u4EE5\u66F4\u65B9\u4FBF\u9032\u884C <code>caching</code>, <code>revalidating</code>\uFF0C\u5728 <code>ServerComponent</code>, <code>RouteHandler</code>, <code>ServerAction</code> \u90FD\u80FD\u76F4\u63A5\u900F\u904E <code>async/await</code> \u4F7F\u7528 fetch\uFF1A</p>',5),w={href:"https://nextjs.org/docs/app/api-reference/functions/fetch",target:"_blank",rel:"noopener noreferrer"},x=e(`<blockquote><p>React \u672C\u8EAB\u64F4\u5C55\u4E86 fetch\uFF0C\u5728 react component \u4E2D\u7684 request \u6703\u88AB <code>memoize</code></p></blockquote><p>\u6BD4\u5982\u5728 <code>app/page.tsx</code> \u4E2D</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.example.com/...&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// The return value is *not* serialized</span>
  <span class="token comment">// You can return Date, Map, Set, etc.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9019\u6703\u555F\u52D5\u6700\u8FD1\u7684 \`error.js\` Error Boundary</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Failed to fetch data&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6CE8\u610F\u9EDE 1\uFF1ANext \u63D0\u4F9B\u7684 <code>cookies</code>, <code>headers</code> \u5728 Server Component \u4E2D\u4F7F\u7528\uFF0C\u6703\u56E0\u70BA\u5176\u5305\u542B\u6642\u9593\u7684\u7279\u6027\uFF0C\u8B93\u4F7F\u7528\u7684\u8DEF\u7531\u88AB Dynamic Render</p></blockquote><blockquote><p>\u6CE8\u610F\u9EDE 2\uFF1ARoute Handler \u4E2D\u4F7F\u7528\u7684 fetch \u56E0\u70BA\u4E0D\u5728 React component \u7D50\u69CB\u4E2D\uFF0C\u6545\u4E0D\u6703\u88AB <code>memoize</code></p></blockquote><blockquote><p>\u6CE8\u610F\u9EDE 3\uFF1A\u5982\u679C\u9700\u8981\u5728 Server Component \u4E2D\u4F7F\u7528 <code>async/await</code>\uFF0C<code>typescript</code>\u7248\u672C\u9700\u9AD8\u65BC<code>5.1.3</code>\uFF0C<code>@types/react</code> \u5247\u9700\u9AD8\u65BC <code>18.2.8</code></p></blockquote><h3 id="caching-data" tabindex="-1"><a class="header-anchor" href="#caching-data" aria-hidden="true">#</a> Caching Data</h3>`,7),_={href:"https://nextjs.org/docs/app/building-your-application/caching#data-cache",target:"_blank",rel:"noopener noreferrer"},j=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// &#39;force-cache&#39; \u70BA\u9810\u8A2D\u503C, \u53EF\u4EE5\u7701\u7565</span>
<span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://...&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token string">&#39;force-cache&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>POST fetch \u540C\u6A23\u6703\u81EA\u52D5\u88AB cache\uFF0C\u9664\u975E\u662F\u5728 <code>Route Handler</code> \u4E2D\u7684 POST \u5247\u4E0D\u6703\u88AB cache</p><h3 id="revalidating-data" tabindex="-1"><a class="header-anchor" href="#revalidating-data" aria-hidden="true">#</a> Revalidating Data</h3><p><code>Revalidating</code> \u662F\u4E00\u500B\u6E05\u9664 cache data \u4E26\u91CD\u65B0\u7372\u53D6\u6700\u65B0 data \u7684\u904E\u7A0B\uFF0C\u7576 data \u88AB\u66F4\u65B0\u5F8C\uFF0C\u800C\u9700\u8981\u7372\u53D6\u5176\u6700\u65B0\u72C0\u614B\u6642\u4F7F\u7528\u3002</p><p>\u4E3B\u8981\u6709\u5169\u7A2E\u65B9\u5F0F\u9032\u884C\uFF1A</p>`,5),q={href:"https://nextjs.org/docs/app/building-your-application/caching#time-based-revalidation",target:"_blank",rel:"noopener noreferrer"},R=e(`<ul><li>\u5728\u55AE\u4E00 fetch \u7684 option \u4E2D\u8A2D\u5B9A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://...&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">revalidate</span><span class="token operator">:</span> <span class="token number">3600</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u5728 route segment \u4E2D\u5C0D\u8A72 route \u4E2D\u5168\u90E8 fetch \u8A2D\u5B9A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* layout.js/page.js */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> revalidate <span class="token operator">=</span> <span class="token number">3600</span><span class="token punctuation">;</span>
<span class="token comment">// revalidate at most every hour</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5728 static render \u7684\u9801\u9762\u4E2D\uFF0C\u5982\u679C\u4F7F\u7528\u4E86\u8A31\u591A\u8A2D\u5B9A\u4E0D\u540C revalidate time \u7684 fetch\uFF0C\u5247\u6240\u6709 fetch \u90FD\u6703\u5957\u7528\u6700\u77ED\u7684\u90A3\u500B fetch revalidate time</p></blockquote><blockquote><p>\u5728 dynamic render \u7684\u9801\u9762\u4E2D\uFF0C\u6BCF\u500B fetch \u7684 revalidate time \u90FD\u662F\u7368\u7ACB\u7684</p></blockquote>`,6),S={start:"2"},P=s("strong",null,"On-demand revalidation",-1),N={href:"https://nextjs.org/docs/app/api-reference/functions/revalidateTag",target:"_blank",rel:"noopener noreferrer"},D={href:"https://nextjs.org/docs/app/api-reference/functions/revalidatePath",target:"_blank",rel:"noopener noreferrer"},I=s("code",null,"Route Handler",-1),A=s("code",null,"Server Actions",-1),C=e(`<ul><li>\u5982\u4E0B\u5C0D fetch \u52A0\u5165 <code>collection</code> tag\uFF0C\u4E4B\u5F8C\u53EA\u9700\u8981\u900F\u904E <code>revalidateTag</code> \u5C31\u53EF\u4EE5\u5237\u65B0\u6A19\u6CE8\u4E86\u7279\u5B9A tag \u7684 fetch cache</li></ul><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">/* app/page.tsx */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// add tag name</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://...&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> next<span class="token operator">:</span> <span class="token punctuation">{</span> tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;collection&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5982\u679C\u4F7F\u7528 Route Handler\uFF0C\u5247\u5EFA\u8B70\u7D66 Next.js app \u7522\u751F\u4E00\u500B\u53EA\u6709 app \u672C\u8EAB\u77E5\u9053\u7684 secret token\uFF0C\u85C9\u6B64\u907F\u514D\u672A\u6388\u6B0A\u7684\u975E\u6CD5 revalidate \u8ACB\u6C42\uFF0C\u5982\u4E0B\u7BC4\u4F8B</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>https://&lt;your-site.com&gt;/api/revalidate?tag=collection&amp;secret=&lt;token&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NextRequest<span class="token punctuation">,</span> NextResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/server&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> revalidateTag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/cache&#39;</span>

<span class="token comment">// e.g a webhook to \`your-website.com/api/revalidate?tag=collection&amp;secret=&lt;token&gt;\`</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">POST</span><span class="token punctuation">(</span>request<span class="token operator">:</span> NextRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> secret <span class="token operator">=</span> request<span class="token punctuation">.</span>nextUrl<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;secret&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> tag <span class="token operator">=</span> request<span class="token punctuation">.</span>nextUrl<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;tag&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>secret <span class="token operator">!==</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MY_SECRET_TOKEN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> NextResponse<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;Invalid secret&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">401</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> NextResponse<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;Missing tag param&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">400</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">revalidateTag</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span>

  <span class="token keyword">return</span> NextResponse<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> revalidated<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> now<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u662F\u900F\u904E <code>revalidatePath</code> \u4E5F\u53EF\u4EE5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NextRequest<span class="token punctuation">,</span> NextResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/server&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> revalidatePath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/cache&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">POST</span><span class="token punctuation">(</span>request<span class="token operator">:</span> NextRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> path <span class="token operator">=</span> request<span class="token punctuation">.</span>nextUrl<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> NextResponse<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;Missing path param&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">400</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">revalidatePath</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

  <span class="token keyword">return</span> NextResponse<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> revalidated<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> now<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),T={href:"https://nextjs.org/docs/app/building-your-application/rendering/edge-and-nodejs-runtimes#nodejs-runtime",target:"_blank",rel:"noopener noreferrer"},F=e(`<blockquote><p>\u6CE8\u610F\u9EDE 2\uFF1A\u82E5\u5728 revalidate \u904E\u7A0B\u51FA\u73FE error\uFF0C\u5247\u820A\u7684 data \u4ECD\u5C07\u88AB cache \u7E7C\u7E8C\u4F7F\u7528\uFF0C\u4E26\u5728\u4E0B\u4E00\u6B21 request \u4E2D\u518D\u6B21\u5617\u8A66\u9032\u884C revalidate</p></blockquote><h3 id="\u4EC0\u9EBC\u6642\u5019\u4E0D\u6703-cache" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u9EBC\u6642\u5019\u4E0D\u6703-cache" aria-hidden="true">#</a> \u4EC0\u9EBC\u6642\u5019\u4E0D\u6703 cache\uFF1F</h3><ul><li>fetch \u7684 option \u8A2D\u5B9A\u70BA <code>cache: &#39;no-cache&#39;</code></li><li>fetch \u7684 option \u8A2D\u5B9A\u70BA <code>revalidate: 0</code></li><li>Route Handler POST method \u4E2D\u7684 fetch</li><li>\u5728\u4F7F\u7528 <code>cookies</code>, <code>headers</code> \u5F8C\u7684 fetch</li><li>Route segment option \u8A2D\u5B9A\u70BA <code>const dynamic = &#39;force-dynamic&#39;</code></li><li>Route segment option \u8A2D\u5B9A <code>fetchCache</code> \u70BA skip cache</li><li>fetch \u4E2D\u4F7F\u7528 <code>Authorization</code>, <code>Cookie</code> header\uFF0C\u4E14\u5176\u524D\u9762\u6709\u4E00\u500B\u6C92\u88AB cached \u7684 request \u5728 component \u4E2D</li></ul><p>\u5C0D\u55AE\u4E00 fetch \u8A2D\u5B9A\u4E0D\u8981 cache</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// layout.js or page.js</span>
<span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://...&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token string">&#39;no-store&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5728-server-\u7AEF\u4F7F\u7528\u7B2C\u4E09\u65B9-npm-\u4F9D\u8CF4" tabindex="-1"><a class="header-anchor" href="#\u5728-server-\u7AEF\u4F7F\u7528\u7B2C\u4E09\u65B9-npm-\u4F9D\u8CF4" aria-hidden="true">#</a> \u5728 Server \u7AEF\u4F7F\u7528\u7B2C\u4E09\u65B9 NPM \u4F9D\u8CF4</h2>`,6),H={href:"https://nextjs.org/docs/app/api-reference/file-conventions/route-segment-config",target:"_blank",rel:"noopener noreferrer"},E=s("code",null,"cache",-1),M=e(`<blockquote><p>data \u662F\u5426\u88AB cache \u53D6\u6C7A\u65BC\u8A72 route \u662F static \u6216 dynamic rendered</p></blockquote><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><p>\u4EE5\u4E0B\u7BC4\u4F8B\u4E2D\uFF1A</p><ul><li>revalidate \u88AB\u8A2D\u5B9A\u70BA <code>3600</code></li><li>\u4F7F\u7528 React <code>cache</code> function \u4F86 memoize request</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* utils/get-item.ts */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> cache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> revalidate <span class="token operator">=</span> <span class="token number">3600</span> <span class="token comment">// revalidate the data at most every hour</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> getItem <span class="token operator">=</span> <span class="token function">cache</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>item<span class="token punctuation">.</span><span class="token function">findUnique</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> item
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u96D6\u7136\u5728 Layout, Page \u4E2D\u5171\u4F7F\u7528\u4E86\u5169\u6B21 getItem\uFF0C\u4F46\u5BE6\u969B\u53EA\u6703\u9001\u51FA\u4E00\u500B request</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">/* app/item/layout.tsx */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/get-item&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Layout</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getItem</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">/* app/item/[id]/page.tsx */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/get-item&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getItem</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5728-client-\u7AEF\u4F7F\u7528-route-handlers" tabindex="-1"><a class="header-anchor" href="#\u5728-client-\u7AEF\u4F7F\u7528-route-handlers" aria-hidden="true">#</a> \u5728 Client \u7AEF\u4F7F\u7528 Route Handlers</h2><p>\u5982\u679C\u9700\u8981\u5728 client \u7AEF fetch data\uFF0C\u53EF\u4EE5\u900F\u904E Route Handler \u5728 server \u7AEF\u57F7\u884C\u5F8C\u8FD4\u56DE data \u5230 client \u7AEF\uFF0C\u9069\u7528\u65BC\u4E0D\u60F3\u66B4\u9732\u654F\u611F\u8CC7\u6599\uFF08\u6BD4\u5982 api token\uFF09\u5728 client \u7AEF\u7684\u5834\u666F</p><h2 id="\u5728-client-\u7AEF\u4F7F\u7528\u7B2C\u4E09\u65B9-npm-\u4F9D\u8CF4" tabindex="-1"><a class="header-anchor" href="#\u5728-client-\u7AEF\u4F7F\u7528\u7B2C\u4E09\u65B9-npm-\u4F9D\u8CF4" aria-hidden="true">#</a> \u5728 Client \u7AEF\u4F7F\u7528\u7B2C\u4E09\u65B9 NPM \u4F9D\u8CF4</h2><p>\u4E5F\u53EF\u4EE5\u5728 client \u7AEF\u4F7F\u7528\u50CF\u662F <code>SWR</code>, <code>React Query</code>\uFF0C\u9019\u4E9B\u5957\u4EF6\u90FD\u6709\u505A\u6BD4\u5982 <code>memoizing requests</code>, <code>caching</code>, <code>revalidating</code>, <code>mutating data</code> \u7B49\u529F\u80FD</p>`,12),O={href:"https://github.com/acdlite/rfcs/blob/first-class-promises/text/0000-first-class-support-for-promises.md#usepromise",target:"_blank",rel:"noopener noreferrer"},z=s("code",null,"use",-1),L=e('<h2 id="data-fetching-patterns" tabindex="-1"><a class="header-anchor" href="#data-fetching-patterns" aria-hidden="true">#</a> Data Fetching Patterns</h2><p>\u4EE5\u4E0B\u662F\u5728 React \u548C Next.js \u4E2D\u7372\u53D6 data \u7684\u63A8\u85A6\u6A21\u5F0F\u548C\u6700\u4F73\u5BE6\u8E10</p><h3 id="fetching-data-\u5728-server-\u7AEF" tabindex="-1"><a class="header-anchor" href="#fetching-data-\u5728-server-\u7AEF" aria-hidden="true">#</a> Fetching Data \u5728 Server \u7AEF</h3><p>\u53EA\u8981\u689D\u4EF6\u5141\u8A31\uFF0C\u76E1\u91CF\u5728 server \u7AEF fetch data</p><ul><li>\u5C0D\u5F8C\u7AEF\u8CC7\u6E90\u53EF\u4EE5\u76F4\u63A5\u7372\u53D6</li><li>\u4F7F app \u66F4\u52A0\u5B89\u5168\uFF0C\u907F\u514D\u654F\u611F\u8CC7\u6599\u5916\u6D41</li><li>fetch \u548C render \u5728\u540C\u4E00\u74B0\u5883\u9032\u884C\uFF0C\u6E1B\u5C11 client, server \u6E9D\u901A\u6210\u672C</li></ul><h3 id="\u54EA\u88E1\u4F7F\u7528\u8CC7\u6599\u5C31\u5728\u54EA-fetch" tabindex="-1"><a class="header-anchor" href="#\u54EA\u88E1\u4F7F\u7528\u8CC7\u6599\u5C31\u5728\u54EA-fetch" aria-hidden="true">#</a> \u54EA\u88E1\u4F7F\u7528\u8CC7\u6599\u5C31\u5728\u54EA fetch</h3><p>\u5982\u679C\u9700\u8981\u5728\u591A\u500B\u5730\u65B9\u4F7F\u7528\u76F8\u540C\u8CC7\u6599\uFF0C\u53EA\u9700\u76F4\u63A5\u5728\u9700\u8981\u4F7F\u7528\u8CC7\u6599\u7684\u5730\u65B9\u9032\u884C fetch\uFF0C\u800C\u4E0D\u662F\u900F\u904E\u4E00\u500B global \u72C0\u614B\u7BA1\u7406\u5668\u6216\u662F\u50B3\u905E props data\uFF0C\u4E0D\u7528\u64D4\u5FC3\u6703\u5C0D\u540C\u6A23\u7684\u8CC7\u6599\u9032\u884C\u591A\u6B21\u7684 request\uFF08\u56E0\u70BA\u6709\u81EA\u52D5 cache \u6A5F\u5236\uFF09</p><h3 id="streaming" tabindex="-1"><a class="header-anchor" href="#streaming" aria-hidden="true">#</a> Streaming</h3>',8),B={href:"https://nextjs.org/docs/app/building-your-application/routing/loading-ui-and-streaming",target:"_blank",rel:"noopener noreferrer"},U={href:"https://nextjs.org/docs/app/building-your-application/routing/loading-ui-and-streaming#streaming-with-suspense",target:"_blank",rel:"noopener noreferrer"},V=e(`<h3 id="parallel-\u53CA-sequential-data-fetching" tabindex="-1"><a class="header-anchor" href="#parallel-\u53CA-sequential-data-fetching" aria-hidden="true">#</a> Parallel \u53CA Sequential Data Fetching</h3><p>\u5728 React app \u4E2D\u6709\u5169\u7A2E data fetching \u6A21\u5F0F\u5982\u4E0B\uFF1A</p><ul><li><strong>Sequential data fetching</strong>: \u5728\u4E00\u500B route \u4E2D\uFF0Crequest \u4E4B\u9593\u5F7C\u6B64\u4F9D\u8CF4\uFF0C\u4E00\u500B\u63A5\u4E00\u500B\u57F7\u884C\uFF0C\u901A\u5E38\u9069\u7528\u5728\u4E00\u500B request \u4F9D\u8CF4\u524D\u4E00\u500B request \u56DE\u50B3\u7684\u5167\u5BB9\u6642\uFF0C\u4F46\u4E5F\u53EF\u80FD\u662F\u7121\u5FC3\u7684\u64CD\u4F5C\uFF0C\u5BB9\u6613\u5C0E\u81F4\u591A\u9918\u4E0D\u5FC5\u8981\u7684\u5197\u9577\u8ACB\u6C42\u6642\u9593</li><li><strong>parallel data fetching</strong>: \u5728\u4E00\u500B route \u4E2D\uFF0Crequest \u540C\u6642\u4E26\u884C\u9032\u884C\uFF0C\u85C9\u6B64\u6E1B\u5C11 <code>client-server waterfalls</code> \u53CA\u6574\u9AD4\u8ACB\u6C42\u5B8C\u7562\u7684\u6642\u9593</li></ul><h4 id="sequential-data-fetching" tabindex="-1"><a class="header-anchor" href="#sequential-data-fetching" aria-hidden="true">#</a> Sequential Data Fetching</h4><p>\u5728 Next13 \u4E2D\uFF0C\u5982\u679C\u5728 nested component \u4E2D\u7684\u5404\u7D44\u4EF6\u4E2D\u9032\u884C data fetching\uFF0C\u5982\u679C\u9019\u4E9B data fetching \u7684\u76EE\u6A19\u5167\u5BB9\u4E0D\u76F8\u540C\u5247\u9019\u4E9B\u64CD\u4F5C\u6703\u4EE5 <code>Sequential</code> \u7684\u65B9\u5F0F\u9032\u884C\uFF08\u76F8\u540C\u76EE\u6A19\u5167\u5BB9\u7684 fetch \u6703\u81EA\u52D5\u88AB memoized\uFF09</p><p>\u6BD4\u5982\u4E0B\u9762 <code>Playlists</code> \u4E2D\u7684 request\uFF0C\u6703\u7B49\u5230 <code>getArtist</code> \u5B8C\u7562\u5F8C\u624D\u57F7\u884C\uFF0C\u56E0\u70BA <code>Playlists</code> \u4F9D\u8CF4 prop <code>artistID</code></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Playlists</span><span class="token punctuation">(</span><span class="token punctuation">{</span> artistID <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> artistID<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Wait for the playlists</span>
  <span class="token keyword">const</span> playlists <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getArtistPlaylists</span><span class="token punctuation">(</span>artistID<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>playlists<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>playlist<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>playlist<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>playlist<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> username <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> username<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Wait for the artist</span>
  <span class="token keyword">const</span> artist <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getArtist</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>artist<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Suspense</span></span> <span class="token attr-name">fallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Playlists</span></span> <span class="token attr-name">artistID</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>artist<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Suspense</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),W={href:"https://nextjs.org/docs/app/building-your-application/routing/loading-ui-and-streaming",target:"_blank",rel:"noopener noreferrer"},J={href:"https://nextjs.org/docs/app/building-your-application/routing/loading-ui-and-streaming#streaming-with-suspense",target:"_blank",rel:"noopener noreferrer"},Y=s("code",null,"<Suspense>",-1),$=e(`<h4 id="parallel-data-fetching" tabindex="-1"><a class="header-anchor" href="#parallel-data-fetching" aria-hidden="true">#</a> Parallel Data Fetching</h4><p>\u82E5\u8981\u5C07\u8ACB\u6C42\u4E26\u884C\u8655\u7406\uFF0C\u5247\u53EF\u4EE5\u628A request \u908F\u8F2F\u62BD\u96E2 component \u653E\u5728\u5916\u90E8\uFF0C\u63A5\u8457\u5728 component \u4E2D\u4E26\u884C\u8ABF\u7528\uFF0C\u85C9\u6B64\u6E1B\u5C11\u6240\u6709\u8ACB\u6C42\u5B8C\u6210\u7684\u6642\u9593\uFF0C\u4F46\u9019\u9EBC\u505A\u7528\u6236\u5FC5\u9808\u7B49\u5F85\u4E26\u884C request \u90FD\u5B8C\u6210\u5F8C\u624D\u770B\u5F97\u5230\u756B\u9762</p><p>\u5982\u4E0B\u7BC4\u4F8B\u4E2D\uFF0C\u628A <code>getArtist</code>, <code>getArtistAlbums</code> \u5B9A\u7FA9\u5728\u7D44\u4EF6\u5916\u90E8</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> Albums <span class="token keyword">from</span> <span class="token string">&#39;./albums&#39;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getArtist</span><span class="token punctuation">(</span>username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://api.example.com/artist/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getArtistAlbums</span><span class="token punctuation">(</span>username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://api.example.com/artist/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/albums</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> username <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> username<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Initiate both requests in parallel</span>
  <span class="token keyword">const</span> artistData <span class="token operator">=</span> <span class="token function">getArtist</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>
  <span class="token keyword">const</span> albumsData <span class="token operator">=</span> <span class="token function">getArtistAlbums</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>

  <span class="token comment">// Wait for the promises to resolve</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>artist<span class="token punctuation">,</span> albums<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>artistData<span class="token punctuation">,</span> albumsData<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>artist<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Albums</span></span> <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>albums<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Albums</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),K={href:"https://nextjs.org/docs/app/building-your-application/routing/loading-ui-and-streaming",target:"_blank",rel:"noopener noreferrer"},Q=e(`<h3 id="preloading-data" tabindex="-1"><a class="header-anchor" href="#preloading-data" aria-hidden="true">#</a> Preloading Data</h3><p>\u8981\u6E1B\u5C11 client-server waterfalls\uFF0C\u4E5F\u53EF\u4EE5\u5728\u7D44\u4EF6\u6A94\u6848\u4E2D\u5B9A\u7FA9\u4E00\u500B <code>preload</code> function(\u540D\u7A31\u53EF\u4EE5\u81EA\u7531\u547D\u540D)\uFF0C\u4E26\u5728\u4F7F\u7528\u7D44\u4EF6\u7684\u5730\u65B9\u63D0\u524D\u4E26\u884C\u8ABF\u7528\uFF0C\u5E6B\u52A9\u7D44\u4EF6\u5728\u4E4B\u5F8C\u7684 render \u904E\u7A0B\u52A0\u901F</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">/* components/Item.tsx */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/get-item&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">preload</span> <span class="token operator">=</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// void evaluates the given expression and returns undefined</span>
  <span class="token comment">// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/void</span>
  <span class="token keyword">void</span> <span class="token function">getItem</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Item</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getItem</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">/* app/item/[id]/page.tsx */</span>
<span class="token keyword">import</span> Item<span class="token punctuation">,</span> <span class="token punctuation">{</span> preload<span class="token punctuation">,</span> checkIsAvailable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/Item&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// starting loading item data</span>
  <span class="token function">preload</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
  <span class="token comment">// perform another asynchronous task</span>
  <span class="token keyword">const</span> isAvailable <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">checkIsAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> isAvailable <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span></span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span> <span class="token operator">:</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528-react-cache-server-only-\u548C-preload-pattern" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-react-cache-server-only-\u548C-preload-pattern" aria-hidden="true">#</a> \u4F7F\u7528 React cache, server-only \u548C Preload Pattern</h3><p>\u53EF\u4EE5\u900F\u904E React <code>cache</code>, <code>server-only</code> package, \u4EE5\u53CA preload pattern \u88FD\u4F5C\u5DE5\u5177\u5982\u4E0B\uFF0C\u78BA\u4FDD\u6B64 request \u80FD\u4E26\u884C\u57F7\u884C\u3001cache data\u3001\u4E14\u53EA\u5728 server \u7AEF\u8ACB\u6C42\uFF0C\u4E26\u5728\u4E4B\u5F8C\u7531 <code>layout</code>, <code>page</code>, <code>component</code> \u5F15\u5165\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> cache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;server-only&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">preload</span> <span class="token operator">=</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">void</span> <span class="token function">getItem</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> getItem <span class="token operator">=</span> <span class="token function">cache</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),G=s("h2",{id:"\u7D50\u8AD6",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u7D50\u8AD6","aria-hidden":"true"},"#"),n(" \u7D50\u8AD6")],-1),X=s("p",null,"\u672C\u7BC7\u4E3B\u8981\u662F\u95B1\u8B80\u5B98\u65B9\u6587\u4EF6\u7684\u7B46\u8A18\u8F49\u5316\u5F8C\u5BEB\u6210\uFF0C\u5E0C\u671B\u5927\u5BB6\u4E0D\u6703\u5ACC\u68C4\u5167\u5BB9\u592A\u591A\uFF0C\u4E0B\u4E00\u7BC7\u9810\u8A08\u6703\u662F\u4F7F\u7528\u5F8C\u7D71\u6574\u7684\u9032\u968E\u7B46\u8A18\uFF0C\u90A3\u5C31\u4E0B\u7BC7\u898B\u62C9\uFF5E=V=",-1);function Z(nn,sn){const o=p("SocialBlock"),c=p("RouterLink"),t=p("ExternalLinkIcon");return l(),u("div",null,[k,a(o,{hashtags:"javascript,react,Next.js,Data Fetching,Caching,Revalidating"}),v,s("p",null,[n("Hi \u5927\u5BB6\u597D\uFF0C\u6211\u662F Johnny\uFF0C\u672C\u7BC7\u5C07\u63A5\u7E8C\u524D\u4E00\u7BC7"),a(c,{to:"/articles/js/next13-intro-approuter.html"},{default:r(()=>[n("\u5FEB\u901F\u4E0A\u624B NextJS v13 - \u57FA\u790E\u89C0\u5FF5 AppRouter \u7BC7")]),_:1}),n("\uFF0C\u91DD\u5C0D Next13 "),m,n(", "),g,n(", "),h,n(" \u7B49\u90E8\u5206\u9032\u884C\u4ECB\u7D39\uFF0C\u95DC\u65BC "),b,n(" \u90E8\u5206\u5C6C\u65BC\u5BE6\u4F5C\uFF0C\u5EFA\u8B70\u76F4\u63A5"),s("a",f,[n("\u67E5\u770B\u5B98\u7DB2\u7BC4\u4F8B\u5B78\u7FD2"),a(t)]),n("\uFF0C\u9084\u6C92\u770B\u904E\u524D\u4E00\u7BC7\u7684\u540C\u5FD7\u5011\uFF0C\u5EFA\u8B70\u5148\u95B1\u8B80\u5B8C\u524D\u7BC7\u4E4B\u5F8C\u518D\u4F86\u95B1\u8B80\u9019\u7BC7\u5594")]),y,s("ul",null,[s("li",null,[s("a",w,[n("\u95DC\u65BC Next13 \u7684 fetch"),a(t)])])]),x,s("p",null,[n("Next13 \u9810\u8A2D\u6703\u5C07 fetch \u8FD4\u56DE\u7684\u5167\u5BB9\u5B58\u653E\u5728 server \u7AEF\u7684 "),s("a",_,[n("Data Cache"),a(t)]),n(" \u7576\u4E2D\uFF0C\u4E5F\u4EE3\u8868\u8A72 request \u53EF\u4EE5\u5728 build time, request time \u89F8\u767C\uFF0C\u4E26 cache \u8CC7\u6599")]),j,s("ol",null,[s("li",null,[s("strong",null,[s("a",q,[n("Time-based revalidation"),a(t)])]),n(": \u5728\u56FA\u5B9A\u6642\u9593\u5F8C\u81EA\u52D5\u5237\u65B0\uFF0C\u9069\u7528\u65BC\u975E\u95DC\u9375\u4E14\u4E0D\u6703\u983B\u7E41\u66F4\u65B0\u7684 data\uFF0C\u4F7F\u7528\u65B9\u5F0F\u5982\u4E0B")])]),R,s("ol",S,[s("li",null,[P,n(": \u624B\u52D5\u7531\u4E8B\u4EF6\u89F8\u767C\u5237\u65B0\uFF08\u6BD4\u5982 form \u8868\u55AE\uFF09\uFF0C\u5176\u4E2D\u53C8\u5206\u70BA "),s("a",N,[n("revalidateTag"),a(t)]),n(", "),s("a",D,[n("revalidatePath"),a(t)]),n(" \u5169\u7A2E\u65B9\u5F0F\u5C0D data group \u4E00\u6B21\u6027\u5237\u65B0\uFF0C\u9069\u7528\u65BC\u95DC\u9375\u4E14\u53EF\u80FD\u983B\u7E41\u88AB\u66F4\u65B0\u7684 data\uFF0C\u4F7F\u7528\u65BC "),I,n(", "),A,n(" \u4E2D")])]),C,s("blockquote",null,[s("p",null,[n("\u6CE8\u610F\u9EDE 1\uFF1ARevalidation \u53EA\u5728 "),s("a",T,[n("Nodejs Runtime"),a(t)]),n("\uFF08\u9810\u8A2D\uFF09\u4E2D\u751F\u6548")])]),F,s("p",null,[n("\u5728 server \u7AEF\u4F7F\u7528\u7B2C\u4E09\u65B9\u5957\u4EF6\u6642\uFF0C\u7121\u6CD5\u76F4\u63A5\u91DD\u5C0D fetch \u9032\u884C\u8A2D\u5B9A\uFF0C\u5FC5\u9808\u900F\u904E "),s("a",H,[n("Route Segment Config Option"),a(t)]),n(" \u6216 React \u7684 "),E,n(" function \u8A2D\u5B9A")]),M,s("blockquote",null,[s("p",null,[n("\u672A\u4F86 "),s("a",O,[n("React RFC"),a(t)]),n(" \u7684 "),z,n(" function \u4E0D\u5EFA\u8B70\u5728 client component \u5167\u5305\u88F9 fetch \u4F7F\u7528\uFF0C\u53EF\u80FD\u5C0E\u81F4 component \u591A\u6B21 rerender")])]),L,s("p",null,[n("Streaming \u548C Suspense \u662F React \u7684\u6A5F\u5236\uFF0C\u5141\u8A31\u958B\u767C\u8005\u5728 client side \u9032\u884C\u6F38\u9032\u5F0F\u7684 UI render\uFF0C\u900F\u904E Server Component\uFF0C\u53EF\u4EE5\u8B93\u4E0D\u9700\u8981 data \u7684\u5340\u584A\u5167\u5BB9\u5FEB\u901F\u986F\u793A\uFF0C\u50C5\u5728\u9700\u8981 data \u7684\u5340\u584A\u5C55\u793A loading \u72C0\u614B\uFF0C\u8B93\u7528\u6236\u4E0D\u9700\u8981\u7B49\u5F85\u6574\u500B\u9801\u9762\u90FD\u8F09\u5165\u5B8C\u6210\uFF0C\u5C31\u80FD\u5920\u700F\u89BD\u5230\u90E8\u5206\u7684\u756B\u9762\uFF0C\u8A73\u7D30\u53EF\u53C3\u8003"),s("a",B,[n("Loading UI"),a(t)]),n("\u3001"),s("a",U,[n("Streaming \u548C Suspense"),a(t)]),n("\u76F8\u95DC\u4ECB\u7D39")]),V,s("p",null,[n("\u5728\u9019\u7A2E\u60C5\u6CC1\u4E0B\uFF0C\u53EF\u4EE5\u900F\u904E "),s("a",W,[n("loading.js"),a(t)]),n("(for route segments) \u6216\u662F "),s("a",J,[n("React "),Y,a(t)]),n(" \u5C0D\u8ACB\u6C42\u4E2D\u7684\u7D44\u4EF6\u9032\u884C\u8655\u7406\uFF0C\u907F\u514D\u6574\u500B\u756B\u9762\u88AB\u8ACB\u6C42\u963B\u585E\u4F4F\uFF0C\u5C0E\u81F4\u7528\u6236\u7121\u6CD5\u8207\u756B\u9762\u4E2D\u7684\u5176\u4ED6\u90E8\u5206\u4E92\u52D5")]),$,s("p",null,[n("\u4E26\u884C\u4F7F\u7528\u7684\u65B9\u5F0F\u53EF\u4EE5\u900F\u904E "),s("a",K,[n("Suspense Boundary"),a(t)]),n("\uFF0C\u512A\u5316\u4F7F\u7528\u8005\u9AD4\u9A57")]),Q,a(o,{hashtags:"javascript,react,Next.js,Data Fetching,Caching,Revalidating"}),G,X])}const tn=i(d,[["render",Z],["__file","next13-intro-datafetching.html.vue"]]);export{tn as default};
