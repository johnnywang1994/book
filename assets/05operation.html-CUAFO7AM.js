import{_ as a,c as e,d as n,o as l}from"./app-DSyX4Wk3.js";const i={};function t(p,s){return l(),e("div",null,s[0]||(s[0]=[n(`<h1 id="operation-算數表達式" tabindex="-1"><a class="header-anchor" href="#operation-算數表達式"><span>Operation 算數表達式</span></a></h1><ul><li>自增減：<code>i++</code>, <code>i--</code>, <code>++i</code>, <code>--i</code></li><li>正負：<code>+i</code>, <code>-i</code></li><li>基本運算：<code>+ - \\* / %</code></li><li>賦值：<code>= += -=</code></li><li>比較：<code>== != &gt; &lt; &lt;= &gt;=</code></li><li>邏輯運算：<code>! &amp;&amp; ||</code></li><li>三元運算：<code>expr1 ? expr2 : expr3</code></li></ul><blockquote><p>邏輯運算、比較運算中，0 表示 true, 1 表示 false</p></blockquote><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><ul><li>算式展開 <code>$(( expression ))</code></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">sum</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">1</span><span class="token variable">))</span></span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token variable">$sum</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>let</code> 命令</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">let</span> <span class="token assign-left variable">sum</span><span class="token operator">=</span><span class="token number">1</span>+1<span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token variable">$sum</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或是用 <code>let</code> 簡寫</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token variable"><span class="token punctuation">((</span>sum<span class="token operator">=</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token variable">$sum</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><code>(( expr ))</code> 和 <code>let expr</code> 指令會在結果不為 0 時，返回狀態碼 0，反之則狀態碼 1。</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span> <span class="token number">1</span> <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token variable">$?</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token variable">$?</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li><a href="https://juejin.cn/post/7130983293347954718" target="_blank" rel="noopener noreferrer">Shell 腳本編程</a></li></ul>`,14)]))}const o=a(i,[["render",t],["__file","05operation.html.vue"]]),r=JSON.parse('{"path":"/articles/memo/bash/05operation.html","title":"Operation 算數表達式","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1670248094000,"contributors":[{"name":"johnnywang","email":"johnnywang@test.com","commits":1}]},"filePathRelative":"articles/memo/bash/05operation.md"}');export{o as comp,r as data};
