import{_ as n,r as t,o,c,d as e,e as a,a as r,f as p}from"./app-6147e6e2.js";const u={},i=e("h1",{id:"subtree-子樹",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subtree-子樹","aria-hidden":"true"},"#"),a(" Subtree 子樹")],-1),d=e("p",null,"這篇稍微難度較高，如果對於 Git 基礎還未完全掌握的朋友們，強烈建議先把 Git 基礎的操作知識熟悉後再學習這章節～",-1),l={href:"https://blog.puckwang.com/posts/2020/git-submodule-vs-subtree/",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="從遠端分支拉取建立-subtree" tabindex="-1"><a class="header-anchor" href="#從遠端分支拉取建立-subtree" aria-hidden="true">#</a> 從遠端分支拉取建立 subtree</h2><p>從遠端來建立本地 subtree 的指令如下，這會把遠端倉庫的指定分支內容加入到當前專案的指定路徑位置，並且自動提交一個 commit 在原專案中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> subtree <span class="token function">add</span> <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token punctuation">[</span>sub-folder-path<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-url<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-branch<span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="將本地-subtree-推送到遠端分支" tabindex="-1"><a class="header-anchor" href="#將本地-subtree-推送到遠端分支" aria-hidden="true">#</a> 將本地 subtree 推送到遠端分支</h2><p>從本地將 subtree 內容推上遠端，這個指令會把本地關於指定路徑的 commit 過濾出來後推送出去</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> subtree push <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token punctuation">[</span>sub-folder-path<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-url<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-branch<span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="從遠端分支拉取更新本地-subtree" tabindex="-1"><a class="header-anchor" href="#從遠端分支拉取更新本地-subtree" aria-hidden="true">#</a> 從遠端分支拉取更新本地 subtree</h2><p>此命令會把遠端分支的內容更新到本地已建立的指定 subtree 上</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> subtree pull <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token punctuation">[</span>sub-folder-path<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-url<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-branch<span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>這邊 pull 時，如果本地對應 prefix 不是透過 <code>subtree add</code> 建立，將會發生<code>fatal: 拒絕合併無關的歷史</code> 的問題，通常會發生在 <code>subtree push</code> 時，指定內容不是透過 <code>subtree add</code> 建立</p></blockquote><blockquote><p>因為對 git 來說，如果跳過 <code>subtree add</code> 的步驟，git 將無法得知本地倉庫有這個子樹的存在， <code>subtree push</code> 並不會對本地 commit 加入子樹，只會單純把部分 commit 推送出去，事後 <code>subtree pull</code> 時 git 會把整個專案 commit 拿去比對就會出錯，建議不論遠端是否為空專案，都先以 <code>subtree add</code> 加入子樹後再進行 <code>subtree push, pull</code> 的操作比較不容易發生問題</p></blockquote><ul><li>有時候就是已經開發到一半才想要把內容拆分建立新的 repo 時怎辦？</li></ul><p>其實也不是完全沒救，可以先把本地指定位置的內容 <code>subtree push</code> 到遠端儲存，然後刪除本地的內容並下一個 commit，接著再使用 <code>subtree add</code> 重新把剛剛推送的內容給拉回來就行了，只是歷史紀錄看起來就會稍微醜一點</p>`,13);function h(m,k){const s=t("ExternalLinkIcon");return o(),c("div",null,[i,d,e("p",null,[a("子樹顧名思義就是在本來 Git 項目中，插入另一個 Git 項目的概念，藉此達到拆分維護發布等等功能，相關的技術還有 "),e("a",l,[a("SubModules-子模組"),r(s)]),a(" 可以參考這篇講得很完整")]),b])}const v=n(u,[["render",h],["__file","subtree.html.vue"]]);export{v as default};
