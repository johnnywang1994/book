import{_ as s,c as a,d as e,o as l}from"./app-DUXFSTbR.js";const i={};function t(c,n){return l(),a("div",null,n[0]||(n[0]=[e(`<h1 id="function-函數" tabindex="-1"><a class="header-anchor" href="#function-函數"><span>Function 函數</span></a></h1><h2 id="基本語法" tabindex="-1"><a class="header-anchor" href="#基本語法"><span>基本語法</span></a></h2><ul><li><code>return</code> 退出函數，函數中最後一行 return 可省略</li><li>函數定義本身也是一個命令，除非語法錯誤，否則總是狀態碼 0</li><li>函數須在使用前定義</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function-name function">fname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  commands</span>
<span class="line">  <span class="token builtin class-name">return</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="函數使用" tabindex="-1"><a class="header-anchor" href="#函數使用"><span>函數使用</span></a></h2><p>shell 函數可視為指令，執行函數和執行其他命令是一樣的</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">fname <span class="token punctuation">[</span>arguments<span class="token punctuation">..</span>.<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="函數內的變數位置" tabindex="-1"><a class="header-anchor" href="#函數內的變數位置"><span>函數內的變數位置</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function-name function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment"># $0 仍然指向腳本文件名稱</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;\\<span class="token variable">$0</span> = <span class="token variable">$0</span>&quot;</span></span>
<span class="line">  <span class="token comment"># 其它位置參數被更新成函數調用時的參數</span></span>
<span class="line">  <span class="token builtin class-name">echo</span>  <span class="token string">&quot;參數個數 <span class="token variable">$#</span>, 分別為 <span class="token variable">$@</span>&quot;</span></span>
<span class="line">  <span class="token comment"># 函數的名稱存在環境變數 FUNCNAME 中</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token variable">$FUNCNAME</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 给這個函數傳參執行</span></span>
<span class="line">func <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="局部變數" tabindex="-1"><a class="header-anchor" href="#局部變數"><span>局部變數</span></a></h2><p>透過 <code>local</code> 在函數內部定義局部變數</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function-name function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin class-name">local</span> <span class="token assign-left variable">var</span><span class="token operator">=</span><span class="token string">&quot;var in foo&quot;</span></span>
<span class="line">  bar</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function-name function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token variable">$var</span></span>
<span class="line">  <span class="token assign-left variable">var</span><span class="token operator">=</span><span class="token string">&quot;var in bar&quot;</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token variable">$var</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">var</span><span class="token operator">=</span><span class="token string">&quot;var in global&quot;</span></span>
<span class="line">foo</span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$var</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li><a href="https://juejin.cn/post/7130983293347954718" target="_blank" rel="noopener noreferrer">Shell 腳本編程</a></li></ul>`,14)]))}const o=s(i,[["render",t],["__file","06function.html.vue"]]),r=JSON.parse('{"path":"/articles/memo/bash/06function.html","title":"Function 函數","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"基本語法","slug":"基本語法","link":"#基本語法","children":[]},{"level":2,"title":"函數使用","slug":"函數使用","link":"#函數使用","children":[]},{"level":2,"title":"函數內的變數位置","slug":"函數內的變數位置","link":"#函數內的變數位置","children":[]},{"level":2,"title":"局部變數","slug":"局部變數","link":"#局部變數","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1670248094000,"contributors":[{"name":"johnnywang","email":"johnnywang@test.com","commits":1}]},"filePathRelative":"articles/memo/bash/06function.md"}');export{o as comp,r as data};
