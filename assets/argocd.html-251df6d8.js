import{_ as n,r as t,o,c,d as e,e as a,a as s,f as i}from"./app-7841ac8a.js";const l={},d=e("h1",{id:"argocd-學習筆記",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#argocd-學習筆記","aria-hidden":"true"},"#"),a(" ArgoCD 學習筆記")],-1),p={href:"https://argo-cd.readthedocs.io/en/stable/getting_started/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.youtube.com/watch?v=N_yakFFbr9w",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/argoproj/argocd-example-apps",target:"_blank",rel:"noopener noreferrer"},g=i(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ kubectl create namespace argocd
$ kubectl apply <span class="token parameter variable">-n</span> argocd <span class="token parameter variable">-f</span> https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="access-argo-server" tabindex="-1"><a class="header-anchor" href="#access-argo-server" aria-hidden="true">#</a> Access Argo Server</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ kubectl port-forward svc/argocd-server <span class="token parameter variable">-n</span> argocd <span class="token number">8080</span>:443
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The API server can then be accessed using https://localhost:8080</p><h2 id="login-with-default-user" tabindex="-1"><a class="header-anchor" href="#login-with-default-user" aria-hidden="true">#</a> Login with default user</h2><p>預設 argocd 會在產生一組帳號 admin，以及一個 secret 在 <code>argocd-initial-admin-secret</code>，可透過以下指令拿到admin 帳號預設密碼，記得登入後前往修改密碼即可。（修改完密碼後就可以把預設的 secret 刪掉摟）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ kubectl <span class="token parameter variable">-n</span> argocd get secret argocd-initial-admin-secret <span class="token parameter variable">-o</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span><span class="token string">&quot;{.data.password}&quot;</span> <span class="token operator">|</span> base64 -d<span class="token punctuation">;</span> <span class="token builtin class-name">echo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="project" tabindex="-1"><a class="header-anchor" href="#project" aria-hidden="true">#</a> Project</h2><p>project 主要用來區分你的 Application 歸屬，每個 Application 在建立時必須指定歸在哪一個 project 中，預設 project 為 <code>default</code>，每個 project 可個別設定配置 repository 來源進行管理</p><h2 id="repository" tabindex="-1"><a class="header-anchor" href="#repository" aria-hidden="true">#</a> Repository</h2><p>repository 主要用來連結你的 git 專案位置，同樣在創建 application 時必須提供對應的 repo，而一個 git 專案內可以有許多配置，在建立 application 時可以明確指定 git repo path，ArgoCD 會自動偵測你的 git repo 底下有哪些 config 路徑並給予下拉選單選取</p><h2 id="application" tabindex="-1"><a class="header-anchor" href="#application" aria-hidden="true">#</a> Application</h2><p>application 是 ArgoCD 當中的一個實體，選取所屬 project, repository 的 config 設定後，就會根據配置進行部署，可以設定自動同步或是手動同步，如果是自動同步則每當 git repo 中設定變更時 ArgoCD 將偵測並且進行重新部署</p><h2 id="create-image-pull-secret" tabindex="-1"><a class="header-anchor" href="#create-image-pull-secret" aria-hidden="true">#</a> create image pull secret</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ kubectl create secret docker-registry <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> --docker-server<span class="token operator">=</span>DOCKER_REGISTRY_SERVER --docker-username<span class="token operator">=</span>DOCKER_USER --docker-password<span class="token operator">=</span>DOCKER_PASSWORD --docker-email<span class="token operator">=</span>DOCKER_EMAIL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,16),b={href:"https://github.com/kubernetes-sigs/kind/issues/817#issuecomment-681976133",target:"_blank",rel:"noopener noreferrer"};function m(v,k){const r=t("ExternalLinkIcon");return o(),c("div",null,[d,e("ul",null,[e("li",null,[e("a",p,[a("ArgoCD Getting Started"),s(r)])]),e("li",null,[e("a",h,[a("保哥來賓 ArgoCD 教學"),s(r)])]),e("li",null,[e("a",u,[a("argocd-example-apps"),s(r)])])]),g,e("blockquote",null,[e("p",null,[a("需注意，secret 的 namespace 跟創建 Applications 時提供的 namespace 需一致，否則將無法套用 secret，詳情可見 "),e("a",b,[a("這個討論串"),s(r)])])])])}const f=n(l,[["render",m],["__file","argocd.html.vue"]]);export{f as default};
