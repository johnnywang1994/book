import{_ as t,r as p,o as e,c,d as n,e as s,a as o,f as i}from"./app.e113856e.js";const l={},u=n("h1",{id:"parse-schema-object-\u7AE0\u7BC0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parse-schema-object-\u7AE0\u7BC0","aria-hidden":"true"},"#"),s(" Parse Schema Object \u7AE0\u7BC0")],-1),r={href:"https://docs.parseplatform.org/js/guide/#schema",target:"_blank",rel:"noopener noreferrer"},d=i(`<p>\u7528\u4F86\u63CF\u8FF0 Parse \u7269\u4EF6\u7684\u67B6\u69CB\uFF0C\u7528\u65BC migration \u6216\u662F testing \u975E\u5E38\u65B9\u4FBF\uFF0C\u5C0D\u65BC Schema \u7684\u4FEE\u6539\u4E00\u5F8B\u5EFA\u8B70\u4F7F\u7528 migration \u7684\u65B9\u5F0F\u9032\u884C\uFF0C\u907F\u514D\u932F\u8AA4\u4FEE\u6539\u7121\u6CD5\u56DE\u6EAF\u67E5\u627E\u554F\u984C</p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h2><p>\u53EF\u4EE5\u76F4\u63A5\u5728\u7DDA\u4E0A\u74B0\u5883\u4FEE\u6539 Schema\uFF0C\u4F46\u8ACB\u8A18\u4F4F\u4E00\u4F46\u505A\u4E86\u4EFB\u4F55\u4FEE\u6539\u662F\u56DE\u4E0D\u53BB\u7684\uFF0C\u76F8\u95DC\u7684\u6B04\u4F4D\u8CC7\u6599\u5C07\u88AB\u79FB\u9664</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// create an instance to manage your class</span>
<span class="token keyword">const</span> mySchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token string">&#39;MyClass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// gets the current schema data</span>
mySchema<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// returns schema for all classes</span>
Parse<span class="token punctuation">.</span>Schema<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// add any # of fields, without having to create any objects</span>
mySchema
  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;stringField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token string">&#39;numberField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addBoolean</span><span class="token punctuation">(</span><span class="token string">&#39;booleanField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addDate</span><span class="token punctuation">(</span><span class="token string">&#39;dateField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addFile</span><span class="token punctuation">(</span><span class="token string">&#39;fileField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addGeoPoint</span><span class="token punctuation">(</span><span class="token string">&#39;geoPointField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addPolygon</span><span class="token punctuation">(</span><span class="token string">&#39;polygonField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addArray</span><span class="token punctuation">(</span><span class="token string">&#39;arrayField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">&#39;objectField&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addPointer</span><span class="token punctuation">(</span><span class="token string">&#39;pointerField&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addRelation</span><span class="token punctuation">(</span><span class="token string">&#39;relationField&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// new types can be added as they are available</span>
mySchema<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&#39;newField&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ANewDataType&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// delete field</span>
mySchema<span class="token punctuation">.</span><span class="token function">deleteField</span><span class="token punctuation">(</span><span class="token string">&#39;stringField&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// save/update this schema to persist your field changes</span>
mySchema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// returns save new schema</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
mySchema<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// updates existing schema</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="indexes" tabindex="-1"><a class="header-anchor" href="#indexes" aria-hidden="true">#</a> Indexes</h2><p>\u9700\u8981 <code>masterKey</code> \u4F86\u57F7\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// field \u5FC5\u9808\u5728\u52A0\u5165 index \u4E4B\u524D\u5C31\u5B58\u5728</span>
mySchema<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;stringField&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">defaultValue</span><span class="token operator">:</span> <span class="token string">&#39;defaultString&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u9810\u8A2D\u503C</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">stringField</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
mySchema<span class="token punctuation">.</span><span class="token function">addIndex</span><span class="token punctuation">(</span><span class="token string">&#39;stringFieldIndex&#39;</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
mySchema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u522A\u9664 index</span>
testSchema<span class="token punctuation">.</span><span class="token function">deleteIndex</span><span class="token punctuation">(</span><span class="token string">&#39;indexName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mySchema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

mySchema<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D6\u5F97 indexes</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>indexes<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="purge" tabindex="-1"><a class="header-anchor" href="#purge" aria-hidden="true">#</a> Purge</h2><p>\u6E05\u9664 schema(class) \u4E2D\u7684\u6240\u6709 object\uFF0C\u6CE8\u610F\u9019\u662F\u4E00\u9805\u4E0D\u53EF\u9006\u8F49\u7684\u52D5\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>mySchema<span class="token punctuation">.</span><span class="token function">purge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="class-level-permission" tabindex="-1"><a class="header-anchor" href="#class-level-permission" aria-hidden="true">#</a> Class Level Permission</h2><p>CLP \u662F\u4E00\u9805\u5B89\u5168\u529F\u80FD\uFF0C\u5141\u8A31\u958B\u767C\u8005\u4EE5\u6BD4\u57FA\u65BC ACL(Access Control List) \u6B0A\u9650\u63A7\u5236\u63D0\u4F9B\u66F4\u5EE3\u6CDB\u7684\u65B9\u5F0F\u9650\u5236\u8A2A\u554F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4FEE\u6539\u5167\u5EFA User schema</span>
<span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

schema
  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u8A2D\u5B9A Schema \u7684 CLP</span>
  <span class="token punctuation">.</span><span class="token function">setCLP</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">requiresAuthentication</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">requiresAuthentication</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;*&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5EFA\u7ACB Post Schema\uFF0C\u7D81\u5B9A\u6B04\u4F4D\u5230 _User</span>
<span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token string">&#39;Post&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

schema
  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addPointer</span><span class="token punctuation">(</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span>

  <span class="token punctuation">.</span><span class="token function">setCLP</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">requiresAuthentication</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">update</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function k(v,m){const a=p("ExternalLinkIcon");return e(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[s("Link"),o(a)])])]),d])}const h=t(l,[["render",k],["__file","schema.html.vue"]]);export{h as default};
