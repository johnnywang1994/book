import{_ as t,c as p,b as n,a as e,d as o,r as c,o as i}from"./app-DPsCAi97.js";const l={};function r(u,s){const a=c("SocialBlock");return i(),p("div",null,[s[0]||(s[0]=n("h1",{id:"react-web3-storage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-web3-storage"},[n("span",null,"React Web3 Storage")])],-1)),e(a,{hashtags:"react,javascript,web3,web3storage,antd"}),s[1]||(s[1]=o(`<p>嗨~大家好!我是 Johnny</p><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>有感於 Web3 技術的蓬勃發展，最近在研究一些 Web3 Storage 的 Client API 後，決定動手練習實作一波，也順便練習使用 React v18(不過其實沒啥用到新 API XDD)</p><h2 id="介紹" tabindex="-1"><a class="header-anchor" href="#介紹"><span>介紹</span></a></h2><p>Web3 Storage 是一種分布式去中心化儲存的工具，底層實際整合了 <code>IPFS</code>, <code>FileCoin</code> 這兩個技術，但對於一般使用者而言，直接使用這兩個技術分常艱難，透過 Web3 Storage 的工具我們可以更方便的使用這兩個技術~</p><p>有關 <code>IPFS</code> 的介紹可以看這邊 - <a href="https://blockcast.it/2019/10/16/let-me-tell-you-what-is-ipfs/" target="_blank" rel="noopener noreferrer">IPFS</a></p><h2 id="實作-web3-storage-ui-過程" tabindex="-1"><a class="header-anchor" href="#實作-web3-storage-ui-過程"><span>實作 Web3 Storage UI 過程</span></a></h2><p>這次實作的結果在這-<a href="https://react-web3-storage.herokuapp.com/" target="_blank" rel="noopener noreferrer">React Web3 Storage UI</a>，可以透過輸入在 <code>Web3.Storage</code> 官方登入後產生的 <code>API Token</code> 使用，或是直接點擊畫面右上的信箱登入，這個信箱登入的串接與官方使用的是同一個 Public Key，帳號本身是共用的~</p><p>實作過程因為實在牽涉太多<a href="https://web3.storage/docs/" target="_blank" rel="noopener noreferrer">官方 API</a>操作，這邊僅簡單介紹最核心的 API 調用</p><h3 id="首先要安裝官方-api" tabindex="-1"><a class="header-anchor" href="#首先要安裝官方-api"><span>首先要安裝官方 API</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">npm</span> <span class="token function">install</span> web3.storage</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="產生-client-instance" tabindex="-1"><a class="header-anchor" href="#產生-client-instance"><span>產生 Client Instance</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Web3Storage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;web3.storage&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">getAccessToken</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">WEB3STORAGE_TOKEN</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">makeStorageClient</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Web3Storage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token function">getAccessToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="儲存上傳檔案" tabindex="-1"><a class="header-anchor" href="#儲存上傳檔案"><span>儲存上傳檔案</span></a></h3><p>透過 <code>put</code> 方法上傳檔案後，會獲得一個 cid，而該 cid 就是代表檔案的位置，可以透過這個格式組合出 http url 打開~ <code>https://dweb.link/ipfs/{cid}</code></p><ul><li><a href="https://web3.storage/docs/reference/js-client-library/#parameters" target="_blank" rel="noopener noreferrer">Options</a></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// files 可以是多個檔案，options 可以設定是否打包成一個資料夾</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">storeFiles</span> <span class="token punctuation">(</span><span class="token parameter">files</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">makeStorageClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> cid <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>files<span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;stored files with cid:&#39;</span><span class="token punctuation">,</span> cid<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> cid</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="獲取指定-cid-內檔案" tabindex="-1"><a class="header-anchor" href="#獲取指定-cid-內檔案"><span>獲取指定 cid 內檔案</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>rootCid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Web3Response</span></span>
<span class="line"><span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">files</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Web3File[]</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> file <span class="token keyword">of</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>cid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="條列帳號下所有-cid-的清單" tabindex="-1"><a class="header-anchor" href="#條列帳號下所有-cid-的清單"><span>條列帳號下所有 cid 的清單</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// Return the names of 10 uploads</span></span>
<span class="line"><span class="token keyword">const</span> uploadNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> client<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">maxResults</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  uploadNames<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="刪除-cid-檔案" tabindex="-1"><a class="header-anchor" href="#刪除-cid-檔案"><span>刪除 cid 檔案</span></a></h3><p>因為官方目前並未提供 API Token 能力進行檔案的刪除，經過研究後發現，官方的 Web UI 在呼叫 HTTP API 時必須帶著 <code>Authorization</code>，而該驗證 <code>idToken</code> 是由 <code>Magic Login</code> 工具提供，也就表示，如果要刪除檔案，我們必須登入後取得 <code>idToken</code> 才能進行操作，也許在未來官方會推出相關的 Delete method 也說不定~</p><p>有興趣的朋友們可以參觀<a href="https://github.com/johnnywang1994/react-web3-storage.git" target="_blank" rel="noopener noreferrer">我的源碼</a>看看瞜~</p><p>今天的分享就到這邊，那我們下篇文章見拉~</p>`,25)),e(a,{hashtags:"react,javascript,web3,web3storage,antd"}),s[2]||(s[2]=n("h2",{id:"參考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#參考"},[n("span",null,"參考")])],-1)),s[3]||(s[3]=n("ul",null,[n("li",null,[n("a",{href:"https://web3.storage/",target:"_blank",rel:"noopener noreferrer"},"Web3 Storage")]),n("li",null,[n("a",{href:"https://github.com/johnnywang1994/react-web3-storage.git",target:"_blank",rel:"noopener noreferrer"},"Source Code")])],-1))])}const k=t(l,[["render",r]]),h=JSON.parse('{"path":"/articles/js/react-web3-storage.html","title":"React Web3 Storage","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1654325132000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnny29621189@kimo.com","commits":1,"url":"https://github.com/johnnywang"}],"changelog":[{"hash":"908cf0bb4a865969645d1dac498481cd80563a01","time":1654325132000,"email":"johnny29621189@kimo.com","author":"johnnywang","message":"UPD: add react-web3-storage"}]},"filePathRelative":"articles/js/react-web3-storage.md"}');export{k as comp,h as data};
