import{_ as o,r as e,o as c,c as l,a,d as n,e as s,f as u}from"./app.d34bb7d7.js";const i={},k=n("h1",{id:"mvvm-\u7C21\u55AE\u6A21\u64EC\u6846\u67B6\u5BE6\u4F5C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mvvm-\u7C21\u55AE\u6A21\u64EC\u6846\u67B6\u5BE6\u4F5C","aria-hidden":"true"},"#"),s(" MVVM \u7C21\u55AE\u6A21\u64EC\u6846\u67B6\u5BE6\u4F5C")],-1),r=n("h6",{id:"tags-javascript-vuejs-mvvm",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tags-javascript-vuejs-mvvm","aria-hidden":"true"},"#"),s(" tags: "),n("code",null,"JavaScript"),s(", "),n("code",null,"Vuejs"),s(", "),n("code",null,"MVVM")],-1),d=u(`<h3 id="\u80CC\u666F" tabindex="-1"><a class="header-anchor" href="#\u80CC\u666F" aria-hidden="true">#</a> \u80CC\u666F</h3><p>\u67D0\u5929\u9592\u4F86\u7121\u4E8B\u6642\uFF0C\u525B\u597D\u641C\u5C0B\u5230\u4E00\u7BC7\u4ECB\u7D39 MVVM \u7684\u597D\u6587\uFF0C\u4ED4\u7D30\u95B1\u8B80\u5F8C\u89BA\u5F97\u6536\u7A6B\u9817\u591A\uFF0C\u6C7A\u5B9A\u5C07\u4E00\u4E9B\u60F3\u6CD5\u8DDF\u7406\u89E3\u8A18\u9304\u4E0B\u4F86\u6240\u8A95\u751F\u3002</p><h3 id="\u6982\u8981" tabindex="-1"><a class="header-anchor" href="#\u6982\u8981" aria-hidden="true">#</a> \u6982\u8981</h3><p>\u5C07\u8A72\u7BC7\u6587\u7AE0\u6240\u8B1B\u7684\u4E3B\u8981\u6982\u5FF5\u8F49\u70BA\u6211\u81EA\u5DF1\u7684\u7406\u89E3\u4E26\u8A18\u9304\u5BE6\u4F5C\u6B65\u9A5F\u3002\u8A71\u4E0D\u591A\u8AAA\uFF0C\u52D5\u624B\u958B\u59CB\u5427\u3002</p><h3 id="\u4F55\u8B02-mvvm" tabindex="-1"><a class="header-anchor" href="#\u4F55\u8B02-mvvm" aria-hidden="true">#</a> \u4F55\u8B02 MVVM\uFF1F</h3><p>\u5728\u5BE6\u4F5C\u4E4B\u524D\uFF0C\u5148\u7C21\u55AE\u63D0\u4E00\u4E0B\u4EC0\u9EBC\u662F <code>MVVM</code>\uFF0C\u5B83\u662F\u4E00\u7A2E\u8EDF\u9AD4\u8A2D\u8A08\u67B6\u69CB\u7684\u6A21\u5F0F\uFF0C\u6703\u5728 Model \u53CA View \u4E4B\u9593\u5EFA\u7ACB\u4E00\u5C64 ViewModel\uFF0C\u4F86\u5E6B\u52A9 Model \u53CA View \u4E4B\u9593\u7684\u4EA4\u4E92\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u7C21\u5316\u958B\u767C\u7684\u4E00\u4E9B\u7E41\u7463\u91CD\u8907\u7684\u52D5\u4F5C\u3002</p><h3 id="front-end-\u8207-mvvm-\u6709\u4F55\u95DC\u4FC2" tabindex="-1"><a class="header-anchor" href="#front-end-\u8207-mvvm-\u6709\u4F55\u95DC\u4FC2" aria-hidden="true">#</a> Front End \u8207 MVVM \u6709\u4F55\u95DC\u4FC2\uFF1F</h3><p>\u5728 Front End \u958B\u767C\u4E0A\uFF0C\u6487\u9664 CSS \u4E0D\u8AC7\uFF0C\u6700\u4E3B\u8981\u7684\u5DE5\u4F5C\u5C31\u662F\u5C07\u8CC7\u6599\u6578\u64DA\u6E32\u67D3\u5728\u756B\u9762\u4E0A\uFF0C\u800C\u5728\u700F\u89BD\u5668\u4E2D\uFF0C\u4E5F\u914D\u7F6E\u6709\u8A31\u591A\u9019\u985E\u578B\u7684\u65B9\u6CD5\uFF0C\u7D71\u7A31\u70BA <code>Element Methods</code>\uFF0C\u9019\u4E9B methods \u5728 MVC \u7684\u67B6\u69CB\u4E0B\uFF0C\u5C31\u662F\u8CA0\u8CAC\u8655\u7406 Model \u8207 View \u7684\u4EA4\u4E92\uFF0CJQuery \u4E3B\u8981\u4E5F\u5C31\u662F\u5728\u505A\u9019\u4EF6\u4E8B\u60C5\uFF0C\u4F46\u9019\u4E9B methods \u59CB\u7D42\u90FD\u5FC5\u9808\u8981\u900F\u904E\u4EBA\u5DE5\u7684\u64CD\u4F5C\u4F86\u5B8C\u6210\u4EA4\u4E92\uFF0C\u800C MVVM \u7684\u67B6\u69CB\u4E0B\uFF0C\u5C31\u662F\u5C07\u9019\u4E9B\u7E41\u7463\u7684\u52D5\u4F5C\u90FD\u4EA4\u7531 ViewModel \u4F86\u4EE3\u52DE\uFF0C\u6211\u5011\u53EA\u9700\u8981\u8655\u7406\u53CA\u66F4\u65B0\u8CC7\u6599\uFF0CViewModel \u6703\u6839\u64DA\u66F4\u65B0\u7684\u8CC7\u6599\u53BB\u5B8C\u6210\u66F4\u65B0 View \u7684\u52D5\u4F5C\u3002</p><h3 id="\u5BE6\u4F5C\u7DF4\u7FD2" tabindex="-1"><a class="header-anchor" href="#\u5BE6\u4F5C\u7DF4\u7FD2" aria-hidden="true">#</a> \u5BE6\u4F5C\u7DF4\u7FD2</h3><h4 id="\u5BE6\u4F5C\u524D\u8AAA\u660E" tabindex="-1"><a class="header-anchor" href="#\u5BE6\u4F5C\u524D\u8AAA\u660E" aria-hidden="true">#</a> \u5BE6\u4F5C\u524D\u8AAA\u660E</h4><p>\u5BE6\u73FE MVVM \u7684\u65B9\u5F0F\u4E0D\u9650\u65BC\u4E00\u7A2E\uFF0C\u672C\u6587\u63A1\u7528 Vuejs \u7684<code>\u6578\u64DA\u52AB\u6301</code>+<code>\u8A02\u95B1\u767C\u5E03</code>\u65B9\u5F0F\u5BE6\u4F5C\uFF0C\u4E3B\u8981\u5C08\u6CE8\u5728 MVVM \u6982\u5FF5\u7684\u7406\u89E3\u8207\u5BE6\u8E10\uFF0C\u5177\u9AD4\u529F\u80FD\u4E0D\u6703\u4E00\u4E00\u4ED4\u7D30\u53BB\u6DF1\u5165\u7814\u7A76\u3002</p><p>\u9996\u5148\uFF0C\u8981\u5B8C\u6210 MVVM \u7684\u67B6\u69CB\uFF0C\u5FC5\u9808\u5305\u542B\u4E94\u500B\u4E3B\u8981\u7684\u6A21\u7D44\uFF1A</p><ul><li>Observer\uFF1A\u5C0D\u6578\u64DA\u9032\u884C\u52AB\u6301\u8A2D\u5B9A</li><li>Dep\uFF1A\u8A02\u95B1\u5668\u7528\u4F86\u5132\u5B58\u88AB\u52AB\u6301\u8CC7\u6599\u7684 watchers \u4F9D\u8CF4</li><li>Watcher\uFF1A\u5132\u5B58\u88AB\u52AB\u6301\u8CC7\u6599\u66F4\u65B0\u6642\u9700\u57F7\u884C\u7684\u52D5\u4F5C</li><li>Compiler\uFF1A\u7DE8\u8B6F\u6A21\u677F\uFF0C\u5C0D\u4E0D\u540C\u985E\u578B\u7BC0\u9EDE\u89E3\u6790\u4E26\u52A0\u5165 watcher</li><li>MVVM\uFF1A\u6574\u5408\u6240\u6709\u6A21\u7D44\uFF0C\u63D0\u4F9B\u4F7F\u7528\u8005\u8ABF\u7528</li></ul><h4 id="\u601D\u8DEF\u6574\u7406" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF\u6574\u7406" aria-hidden="true">#</a> \u601D\u8DEF\u6574\u7406</h4><p>\u7531\u65BC\u6240\u8981\u5B8C\u6210\u7684\u6700\u7D42\u6B65\u9A5F\u7A0D\u986F\u9F90\u5927\u8207\u8907\u96DC\uFF0C\u6211\u6703\u5206\u6210\u5169\u500B\u90E8\u5206\u4F86\u8AAA\u660E\uFF0C\u7B2C\u4E00\u90E8\u5206\u662F\u5404\u5225\u6A21\u7D44\u7684\u5BE6\u8E10\uFF0C\u7B2C\u4E8C\u90E8\u5206\u624D\u6703\u5C07\u6A21\u7D44\u9032\u884C\u6574\u5408\u3002</p><p>\u6700\u7D42\u5BE6\u8E10\u4E0A\uFF0C\u7A0B\u5F0F\u78BC\u6703\u5982\u4E0B\u9806\u5E8F\u9032\u884C\u57F7\u884C\uFF1A</p><ol><li>\u4F7F\u7528\u8005\u5EFA\u7ACB\u5BE6\u4F8B\uFF0C\u5C0D MVVM \u6A21\u7D44\u50B3\u5165\u8CC7\u6599</li><li>MVVM \u6A21\u7D44\u5206\u5225\u5C07\u50B3\u5165\u7684\u8CC7\u6599\u4F9D\u5E8F\u50B3\u905E\u7D66 Observer \u53CA Compiler \u8655\u7406</li><li>Observer \u6A21\u7D44\u5C0D\u8CC7\u6599\u8A2D\u5B9A\u52AB\u6301\u6A5F\u5236</li><li>Compiler \u89E3\u6790\u5143\u7D20\uFF0C\u6839\u64DA\u50B3\u5165\u7684\u8CC7\u6599\u9032\u884C\u7DE8\u8B6F\u5F8C\u52A0\u5165 watcher</li><li>Watcher \u5728 Compiler \u4E2D\u88AB\u5EFA\u7ACB\u6642\uFF0C\u6703\u81EA\u52D5\u5C07\u81EA\u5DF1\u639B\u8F09\u5230\u5C0D\u61C9\u7684\u8CC7\u6599 Dependency \u88E1</li><li>\u5B8C\u6210 compile\uFF0C\u4E26\u5728\u5F8C\u7E8C\u8CC7\u6599\u66F4\u65B0\u6642\uFF0C\u8ABF\u7528\u8A72\u8CC7\u6599\u6240\u6709 Dependency \u88E1\u639B\u8F09\u7684 watchers\uFF0C\u57F7\u884C\u8207\u7DE8\u8B6F\u8A72\u7BC0\u9EDE\u6642\u76F8\u540C\u7684\u52D5\u4F5C\u3002</li></ol><h4 id="observer-\u6A21\u7D44\u7684\u5BE6\u8E10" tabindex="-1"><a class="header-anchor" href="#observer-\u6A21\u7D44\u7684\u5BE6\u8E10" aria-hidden="true">#</a> Observer \u6A21\u7D44\u7684\u5BE6\u8E10</h4><p>\u9996\u5148\u7B2C\u4E00\u6B65\u4F86\u770B Observer \u662F\u600E\u9EBC\u505A\u5230\u52AB\u6301\u8CC7\u6599\u7684\uFF0C\u4E3B\u8981\u662F\u4F7F\u7528 <code>defineProperty</code> \u5C6C\u6027\u4F86\u5C0D\u7269\u4EF6\u7684\u6240\u6709\u5C6C\u6027\u9032\u884C\u905E\u56DE\u52AB\u6301\uFF0C\u5305\u62EC\u5B50\u5C6C\u6027\u8207\u65B0\u503C\uFF0C\u521D\u6B65\u5BE6\u8E10\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">observe</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data <span class="token operator">||</span> <span class="token keyword">typeof</span> data <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">DefineReactive</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5B50\u5C6C\u6027\u905E\u8FF4</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u53EF\u904D\u6B77</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// \u4E0D\u53EF\u518D define</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&#39;\u76E3\u807D\u5230\u8B8A\u5316&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u52AB\u6301\u52D5\u4F5C</span>
      val <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
      <span class="token function">observe</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u905E\u56DE\u65B0\u503C</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="dep-\u6A21\u7D44\u7684\u5BE6\u8E10" tabindex="-1"><a class="header-anchor" href="#dep-\u6A21\u7D44\u7684\u5BE6\u8E10" aria-hidden="true">#</a> Dep \u6A21\u7D44\u7684\u5BE6\u8E10</h4><p>\u4EE5\u4E0A\u5DF2\u53EF\u521D\u6B65\u52AB\u6301\u8CC7\u6599\u7684\u8B8A\u5316\u4E86\uFF0C\u4F46\u4E00\u500B\u55AE\u4E00\u8CC7\u6599\u53EF\u80FD\u6703\u88AB\u7528\u5728\u591A\u500B\u5730\u65B9\uFF0C\u6211\u5011\u9700\u8981\u4E00\u500B\u7368\u7ACB\u7684\u5730\u65B9\u4F86\u5132\u5B58\u6BCF\u4E00\u500B\u8CC7\u6599\u7684 watchers\uFF08\u88AB\u7528\u4E00\u6B21\u5FC5\u9808\u7522\u751F\u4E00\u500B\u65B0 watcher \u53BB\u8655\u7406\uFF09\uFF0C\u56E0\u6B64\u6211\u5011\u9700\u8981\u4E00\u500B\u8A02\u95B1\u5668\u4F86\u5132\u5B58 watchers\uFF0C\u8A02\u95B1\u5668\u4EE3\u78BC\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>subs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Dep</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6DFB\u52A0 watcher</span>
  <span class="token function">addSub</span><span class="token punctuation">(</span><span class="token parameter">watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u901A\u77E5\u57F7\u884C\u6240\u6709\u76F8\u4F9D watchers</span>
  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">watcher</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> watcher<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u8457\uFF0C\u56E0\u70BA\u6BCF\u500B\u8CC7\u6599\u90FD\u5FC5\u9808\u5275\u5EFA\u4E00\u500B\u65B0\u7684\u8A02\u95B1\u5668\u4F86\u5132\u5B58\u5C6C\u65BC\u4ED6\u81EA\u5DF1\u7684\u6240\u6709 watchers\uFF0C\u6240\u4EE5\u5177\u9AD4\u5728\u525B\u525B <code>defineReactive</code> \u65B9\u6CD5\u4E2D\u4F7F\u7528\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E0A\u7565...</span>

<span class="token keyword">function</span> <span class="token function">DefineReactive</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5275\u5EFA\u5C6C\u65BC\u5B83\u81EA\u5DF1\u7684\u8A02\u95B1\u5668</span>
  <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token comment">// \u66AB\u7565...</span>
    <span class="token function">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&#39;\u76E3\u807D\u5230\u8B8A\u5316&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      val <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
      <span class="token function">observe</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
      dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u901A\u77E5\u6240\u6709 watchers</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B8C\u6210\u901A\u77E5\u7684\u8A2D\u5B9A\u5F8C\uFF0C\u9084\u5269\u4E0B\u4E00\u500B\u554F\u984C\uFF0C==\u600E\u9EBC\u6DFB\u52A0 watchers \u7D66 dep\uFF1F==\uFF0C\u525B\u525B\u6709\u63D0\u5230\uFF0C\u6BCF\u500B\u8CC7\u6599\u90FD\u6709\u5C6C\u65BC\u81EA\u5DF1\u7684\u8A02\u95B1\u5668\u5BE6\u4F8B\uFF0C\u8A02\u95B1\u5668\u662F\u5728 <code>defineReactive</code> \u65B9\u6CD5\u4E2D\u5275\u5EFA\u7684\uFF0C\u4E5F\u5C31\u662F\u8AAA\u52A0\u5165 watcher \u7684\u52D5\u4F5C\u5FC5\u5B9A\u662F\u5728\u9589\u5305\u5167\u9032\u884C\uFF0C\u56E0\u6B64\uFF0C\u6211\u5011\u5148\u5047\u8A2D\u5F8C\u7E8C\u6703\u900F\u904E\u5728 <code>Dep.target</code>\u5C6C\u6027\u4E2D\u639B\u8F09 watcher \u5BE6\u4F8B\uFF0C\u6B64\u6642\u5C31\u628A\u5B83\u52A0\u5165\u9032\u53BB dep \u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">DefineReactive</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8A02\u95B1\u5668</span>
  <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Dep<span class="token punctuation">.</span>target <span class="token operator">&amp;&amp;</span> dep<span class="token punctuation">.</span><span class="token function">addSub</span><span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C07\u639B\u8F09\u7684 watcher \u52A0\u5165\u5BE6\u4F8B</span>
      <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u7565...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u6642\u6211\u5011\u9808\u5148\u8A18\u8457\uFF0C\u5F85\u6703\u5728 Watcher \u7684\u6A21\u7D44\u4E2D\uFF0C\u6211\u5011\u5FC5\u9808\u5C07 watcher \u5BE6\u4F8B\u639B\u8F09\u5230 <code>Dep.target</code> \u9019\u500B\u5730\u65B9\u5F8C\uFF0C\u5F37\u5236\u62FF\u53D6\u4E00\u6B21\u5C0D\u61C9\u7684\u8CC7\u6599\uFF0C\u624D\u80FD\u89F8\u767C\u4ED6\u7684 get \u4F86\u52A0\u5165 watcher\u3002</p><h4 id="compiler-\u6A21\u7D44\u7684\u5BE6\u8E10" tabindex="-1"><a class="header-anchor" href="#compiler-\u6A21\u7D44\u7684\u5BE6\u8E10" aria-hidden="true">#</a> Compiler \u6A21\u7D44\u7684\u5BE6\u8E10</h4><p>\u70BA\u4EC0\u9EBC\u5148\u8DF3\u904E Watcher \u6A21\u7D44\u5462\uFF1F\u56E0\u70BA Watcher \u6A21\u7D44\u4E2D\u6709\u8A31\u591A\u5BE6\u4F5C\u7684\u6982\u5FF5\u5FC5\u9808\u5148\u8B1B\u5230 Compiler \u4E4B\u5F8C\u624D\u80FD\u5920\u7406\u89E3\u70BA\u4EC0\u9EBC\u8981\u5BEB\u90A3\u6A23\uFF0C\u6240\u4EE5\u6211\u89BA\u5F97\u5148\u8B1B Compiler \u6BD4\u8F03\u6709\u52A9\u65BC\u7406\u89E3\u5594\uFF5E</p><p>\u5728 Compiler \u4E2D\uFF0C\u6211\u5011\u4E3B\u8981\u6703\u9700\u8981\u77E5\u9053\u7DE8\u8B6F\u7684\u5C0D\u8C61\uFF0C\u4EE5\u53CA\u62FF\u4F86\u7DE8\u8B6F\u7684\u8CC7\u6599\uFF0C\u518D\u6839\u64DA\u7BC0\u9EDE\u985E\u578B\u505A\u5C0D\u61C9\u7684\u7DE8\u8B6F\u65B9\u5F0F\uFF0C\u53E6\u5916\u7531\u65BC\u521D\u6B21\u7DE8\u8B6F\u6703\u5927\u91CF\u64CD\u4F5C\u5230 DOM \u7BC0\u9EDE\uFF0C\u6211\u5011\u6703\u5148\u5C07\u9700\u8981\u7DE8\u8B6F\u7684\u5143\u7D20\u8F49\u70BA\u6587\u6A94\u788E\u7247 Fragment \u7684\u5F62\u5F0F\u8655\u7406\uFF0C\u5F85\u6700\u5F8C\u89E3\u6790\u7DE8\u8B6F\u5B8C\u6210\u5F8C\u518D\u4E00\u6B21\u585E\u56DE\u539F\u4F86\u7684\u5143\u7D20\u4E2D\uFF0C\u5177\u9AD4\u5BE6\u8E10\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Compiler</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$el <span class="token operator">=</span> el<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$data <span class="token operator">=</span> data<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$fragment <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">node2Fragment</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">Compiler</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u89E3\u6790\u7684\u5C0D\u8C61\u662F\u6587\u6A94\u788E\u7247</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compileElement</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$frament<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">node2Fragment</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fg <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createDocumentFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> child <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>child <span class="token operator">=</span> el<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fg<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> fg<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u8457\uFF0C\u4F86\u5B8C\u6210\u89E3\u6790\u7BC0\u9EDE\u7684 <code>compileElement</code> \u65B9\u6CD5\uFF0C\u5176\u4E2D <code>_getDataVal</code>\u7528\u4F86\u53D6\u5F97\u5C6C\u6027\u5167\u5BB9\u88E1\u5BEB\u7684\u7269\u4EF6\u8DEF\u5F91\uFF0C\u4E26\u8FD4\u56DE\u8A72\u8DEF\u5F91\u7684\u8CC7\u6599\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Compiler</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E0A\u7565...</span>
  <span class="token comment">// \u7B2C\u4E00\u6B65\uFF1A\u5206\u6790\u7BC0\u9EDE\u985E\u578B</span>
  <span class="token function">compileElement</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> childNodes <span class="token operator">=</span> el<span class="token punctuation">.</span>childNodes<span class="token punctuation">,</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    childNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">isElementNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">isTextNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span><span class="token function">compileText</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u82E5\u7BC0\u9EDE\u4E2D\u9084\u6709\u5B50\u7BC0\u9EDE\uFF0C\u905E\u8FF4\u6B64\u6B65\u9A5F</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">hasChildNodes</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span><span class="token function">compileElement</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u7B2C\u4E8C\u6B65\uFF1A\u7DE8\u8B6F\u4E0D\u540C\u985E\u578B\u7684\u7BC0\u9EDE</span>
  <span class="token comment">// 1. \u7DE8\u8B6F\u6A19\u7C64\uFF1A\u6BD4\u5C0D\u5C6C\u6027\u6307\u4EE4\uFF0C\u4E26\u8ABF\u7528\u5C0D\u61C9\u7684\u6307\u4EE4\u51FD\u6578\u5F8C</span>
  <span class="token function">compile</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> attrs <span class="token operator">=</span> node<span class="token punctuation">.</span>attributes<span class="token punctuation">,</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token operator">...</span>attrs<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">attr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> attrName <span class="token operator">=</span> attr<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
      <span class="token comment">// \u5224\u65B7\u662F\u5426\u70BA v- \u958B\u982D\u7684\u5C6C\u6027</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">isDirective</span><span class="token punctuation">(</span>attrName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> dir <span class="token operator">=</span> attrName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6307\u4EE4\u540D\u7A31</span>
        <span class="token keyword">const</span> exp <span class="token operator">=</span> attr<span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// \u6307\u4EE4\u5167\u5BB9</span>
        <span class="token comment">// \u4E8B\u4EF6\u5C6C\u6027</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">isEventDirective</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          self<span class="token punctuation">.</span>directives<span class="token punctuation">[</span><span class="token string">&#39;eventHandler&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> self<span class="token punctuation">.</span><span class="token function">_getDataVal</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">,</span> dir<span class="token punctuation">,</span> self<span class="token punctuation">.</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4E00\u822C</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          self<span class="token punctuation">.</span>directives<span class="token punctuation">[</span>dir<span class="token punctuation">]</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> self<span class="token punctuation">.</span><span class="token function">_getDataVal</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u79FB\u9664\u5C08\u7528\u5C6C\u6027</span>
        node<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span>attrName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* -- \u5DE5\u5177\u65B9\u6CD5 -- */</span>
  <span class="token function">isElementNode</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> node<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">isTextNode</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> node<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">hasChildNodes</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> node<span class="token punctuation">.</span>childNodes <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">isDirective</span><span class="token punctuation">(</span><span class="token parameter">attrName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> attrName<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;v-&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">isEventDirective</span><span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> dir<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;on&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">_getDataVal</span><span class="token punctuation">(</span><span class="token parameter">exp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">;</span>
    exp <span class="token operator">=</span> exp<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    exp<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      val <span class="token operator">=</span> val<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* \u6307\u4EE4\u6E05\u55AE */</span>
  <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">text</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>textContent <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">html</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">show</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">eventHandler</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> value<span class="token punctuation">,</span> dir<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> eventType <span class="token operator">=</span> dir<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> fn <span class="token operator">=</span> value<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>eventType <span class="token operator">&amp;&amp;</span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u53EA\u5B8C\u6210\u4E86\u4E00\u822C\u6A19\u7C64\u7BC0\u9EDE\u7684\u7DE8\u8B6F\uFF0C\u6211\u5011\u9084\u5269\u6587\u5B57\u7BC0\u9EDE\u7684\u7DE8\u8B6F\u9808\u5B8C\u6210\uFF0C\u6B64\u90E8\u5206\u56E0\u70BA\u727D\u6D89\u5230\u6A19\u7C64\u6A21\u677F\u7684\u6982\u5FF5\uFF0C\u5FC5\u9808\u5C94\u958B\u4F86\u8AAC\u660E\uFF0C\u8ACB\u898B\u8AD2\uFF5E</p><h4 id="\u984C\u5916\u8A71-\u6A19\u7C64\u6A21\u677F\u7DE8\u8B6F" tabindex="-1"><a class="header-anchor" href="#\u984C\u5916\u8A71-\u6A19\u7C64\u6A21\u677F\u7DE8\u8B6F" aria-hidden="true">#</a> \u984C\u5916\u8A71\uFF1A\u6A19\u7C64\u6A21\u677F\u7DE8\u8B6F</h4><p>\u6A19\u7C64\u6A21\u677F\u7DE8\u8B6F\u7684\u5BE6\u8E10\u65B9\u5F0F\u4E5F\u6709\u5F88\u591A\uFF0C\u5E38\u898B\u7684\u50CF\u662F\u76F4\u63A5\u6BD4\u5C0D\u6CD5\uFF0C\u6216\u662F\u6B63\u5247\u6BD4\u5C0D\u6CD5\u7B49\u7B49\uFF0C\u6211\u5011\u9019\u6B21\u4F7F\u7528\u7684\u662F new Function \u7684\u65B9\u5F0F\uFF0C\u7528\u6B63\u5247\u6BD4\u5C0D\u4E26\u5C07\u5B57\u4E32\u66FF\u63DB\u5F8C\u653E\u5165 new Function \u4F86\u5E6B\u52A9\u6211\u5011\u7DE8\u8B6F\u5B57\u4E32\u4E2D\u7684\u6240\u6709\u8B8A\u6578\uFF0Crender \u65B9\u6CD5\u4EE3\u78BC\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">removeWrapper</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">exp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>exp<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\{|\\}]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> exps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  str <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">t</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{\\{\\s*([^\\}]+)?\\s*\\}\\}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
    exps <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">removeWrapper</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>re<span class="token punctuation">,</span> <span class="token string">&#39;&quot; + data.$1 + &quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;return &quot;&#39;</span><span class="token operator">+</span> str <span class="token operator">+</span><span class="token string">&#39;&quot;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    exps<span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token function">r</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5177\u9AD4\u5BE6\u8E10\u7684\u539F\u7406\u4E0D\u662F\u672C\u7BC7\u7684\u91CD\u9EDE\uFF0C\u5C31\u4E0D\u6DF1\u5165\u8A0E\u8AD6\u4E86\uFF0C\u6B64\u7C21\u55AE\u7684 <code>render</code> \u51FD\u6578\u6703\u8FD4\u56DE\u7DE8\u8B6F\u5B8C\u6210\u7684\u5B57\u4E32\uFF0C\u4EE5\u53CA\u6240\u6709\u4F7F\u7528\u5230\u7684 <code>exps</code>\uFF0C\u4E4B\u6240\u4EE5\u8981\u5F97\u5230 <code>exps</code> \u662F\u56E0\u70BA\u5F8C\u7E8C\u52A0\u5165 <code>watchers</code> \u6642\u5FC5\u9808\u7528\u5230\u3002</p><h4 id="\u56DE\u6B78\u6B63\u984C-compiler-\u6A21\u7D44\u7684\u5BE6\u8E10" tabindex="-1"><a class="header-anchor" href="#\u56DE\u6B78\u6B63\u984C-compiler-\u6A21\u7D44\u7684\u5BE6\u8E10" aria-hidden="true">#</a> \u56DE\u6B78\u6B63\u984C\uFF1ACompiler \u6A21\u7D44\u7684\u5BE6\u8E10</h4><p>\u6211\u5011\u5C07\u525B\u525B\u4E0A\u9762\u7684 render \u51FD\u6578\u52A0\u5165 prototype \u4E2D\uFF0C\u4E26\u7E7C\u7E8C\u5B8C\u6210 <code>compileText</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Compiler</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E0A\u7565...</span>
  <span class="token comment">// \u7B2C\u4E00\u6B65\uFF1A\u5206\u6790\u7BC0\u9EDE\u985E\u578B</span>
  <span class="token function">compileElement</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> childNodes <span class="token operator">=</span> el<span class="token punctuation">.</span>childNodes<span class="token punctuation">,</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    childNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">isElementNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">isTextNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span><span class="token function">compileText</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u82E5\u7BC0\u9EDE\u4E2D\u9084\u6709\u5B50\u7BC0\u9EDE\uFF0C\u905E\u8FF4\u6B64\u6B65\u9A5F</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">hasChildNodes</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span><span class="token function">compileElement</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u7B2C\u4E8C\u6B65\uFF1A\u7DE8\u8B6F\u4E0D\u540C\u985E\u578B\u7684\u7BC0\u9EDE</span>
  <span class="token comment">// 1. \u7DE8\u8B6F\u6A19\u7C64\uFF1A\u6BD4\u5C0D\u5C6C\u6027\u6307\u4EE4\uFF0C\u4E26\u8ABF\u7528\u5C0D\u61C9\u7684\u6307\u4EE4\u51FD\u6578</span>
  <span class="token comment">// \u7565...</span>
  <span class="token comment">// 2. \u5B57\u4E32\u7DE8\u8B6F\uFF1A\u6BD4\u5C0D\u5B57\u4E32\u4E2D\u6240\u6709\u7528\u5230\u7684 exp</span>
  <span class="token function">compileText</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> text <span class="token operator">=</span> node<span class="token punctuation">.</span>textContent<span class="token punctuation">,</span>
          self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
          reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{\\{(.*)\\}\\}</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> exps<span class="token punctuation">,</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      self<span class="token punctuation">.</span>directives<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> exps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    str <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">t</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{\\{\\s*([^\\}]+)?\\s*\\}\\}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
      exps <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">removeWrapper</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>re<span class="token punctuation">,</span> <span class="token string">&#39;&quot; + data.$1 + &quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;return &quot;&#39;</span><span class="token operator">+</span> str <span class="token operator">+</span><span class="token string">&#39;&quot;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      exps<span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token function">r</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">removeWrapper</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">exp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>exp<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\{|\\}]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u7565...</span>
  <span class="token comment">/* \u6307\u4EE4\u6E05\u55AE */</span>
  <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">text</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>textContent <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">html</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">show</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">eventHandler</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> value<span class="token punctuation">,</span> dir<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> eventType <span class="token operator">=</span> dir<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> fn <span class="token operator">=</span> value<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>eventType <span class="token operator">&amp;&amp;</span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u6211\u5011\u5DF2\u7D93\u5B8C\u6210\u4E86\u57FA\u672C\u7684\u521D\u6B21\u7DE8\u8B6F\u4E86\uFF0C\u63A5\u4E0B\u4F86\u8981\u5728\u6BCF\u500B\u7DE8\u8B6F\u52D5\u4F5C\u5B8C\u6210\u6642\uFF0C\u90FD\u52A0\u5165\u4E00\u500B watcher \u4F86\u5E6B\u52A9\u6211\u5011\u4E4B\u5F8C\u66F4\u65B0\u8CC7\u6599\u6642\uFF0C\u80FD\u5920\u518D\u6B21\u9032\u884C\u5C40\u90E8\u7DE8\u8B6F\u7684\u52D5\u4F5C\uFF0C\u56E0\u6B64\u6211\u5011\u5C07 <code>compile</code> \u53CA <code>compileText</code> \u65B9\u6CD5\u505A\u9EDE\u4FEE\u6539\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Compiler</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E0A\u7565...</span>
  <span class="token function">compile</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> attrs <span class="token operator">=</span> node<span class="token punctuation">.</span>attributes<span class="token punctuation">,</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token operator">...</span>attrs<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">attr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> attrName <span class="token operator">=</span> attr<span class="token punctuation">.</span>name<span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">isDirective</span><span class="token punctuation">(</span>attrName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> dir <span class="token operator">=</span> attrName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> exp <span class="token operator">=</span> attr<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token comment">// \u4E8B\u4EF6\u5C6C\u6027</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token function">isEventDirective</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          self<span class="token punctuation">.</span>directives<span class="token punctuation">[</span><span class="token string">&#39;eventHandler&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> self<span class="token punctuation">.</span><span class="token function">_getDataVal</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">,</span> dir<span class="token punctuation">,</span> self<span class="token punctuation">.</span>$vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4E00\u822C</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          self<span class="token punctuation">.</span>directives<span class="token punctuation">[</span>dir<span class="token punctuation">]</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> self<span class="token punctuation">.</span><span class="token function">_getDataVal</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">,</span> exp<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            self<span class="token punctuation">.</span>directives<span class="token punctuation">[</span>dir<span class="token punctuation">]</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        node<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span>attrName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">compileText</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> text <span class="token operator">=</span> node<span class="token punctuation">.</span>textContent<span class="token punctuation">,</span>
          self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
          reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{\\{(.*)\\}\\}</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> exps<span class="token punctuation">,</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      self<span class="token punctuation">.</span>directives<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5B57\u4E32\u7BC0\u9EDE\u4E2D\uFF0C\u6240\u6709\u7528\u5230\u7684 exp \u90FD\u9700\u4F9D\u5E8F\u52A0\u5165\u76E3\u807D\u5668</span>
      exps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">exp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">,</span> exp<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
          self<span class="token punctuation">.</span>directives<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u4E0B\u7565...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64\u70BA\u6B62\uFF0C\u6211\u5011\u5B8C\u6210\u4E86\u57FA\u672C\u7684 Compiler \u4E86\uFF0C\u63A5\u8457\u7E7C\u7E8C\u8B1B\u5230 Watcher \u6A21\u7D44\uFF5E\uFF01\uFF01\u52A0\u6CB9\u52A0\u6CB9\uFF01</p><h4 id="watcher-\u6A21\u7D44\u7684\u5BE6\u8E10" tabindex="-1"><a class="header-anchor" href="#watcher-\u6A21\u7D44\u7684\u5BE6\u8E10" aria-hidden="true">#</a> Watcher \u6A21\u7D44\u7684\u5BE6\u8E10</h4><p>\u7D93\u904E Compiler \u7684\u5BE6\u4F5C\u5F8C\uFF0C\u63A5\u4E0B\u4F86\u6700\u91CD\u8981\u7684 Watcher \u626E\u6F14\u8457\u4E32\u8D77 Compiler \u53CA Observer \u6E9D\u901A\u7684\u6A4B\u6A11\uFF0C\u4E5F\u662F\u6574\u500B MVVM \u7684\u9748\u9B42\uFF0C\u524D\u9762\u6700\u958B\u982D\u6211\u5011\u63D0\u5230\u4E86\u5728 <code>Dep.target</code> \u4E0A\u639B\u8F09 watcher \u5BE6\u4F8B\uFF0C\u63A5\u8457\u5FC5\u9808\u5728\u5275\u5EFA watcher \u5BE6\u4F8B\u6642\uFF0C\u5C0D\u6307\u5B9A\u7684\u8CC7\u6599\u9032\u884C\u4E00\u6B21 get \u7684\u52D5\u4F5C\uFF0C\u624D\u80FD\u5F37\u5236\u5C07 watcher \u52A0\u5165\u8A02\u95B1\u5668\u4E2D\uFF0C\u5177\u9AD4\u5BE6\u73FE\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Watcher</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> exp<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$data <span class="token operator">=</span> data<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$exp <span class="token operator">=</span> exp<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$cb <span class="token operator">=</span> cb<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_hasInit <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316\u540C\u6642\u81EA\u52D5\u8ABF\u7528</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_hasInit <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!==</span> oldValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8ABF\u7528\u7D81\u5B9A\u7684 compile \u52D5\u4F5C</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_hasInit <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u639B\u8F09 watcher(\u53EA\u53EF\u5728\u521D\u59CB\u5316\u6642\u639B\u8F09\uFF0C\u907F\u514D\u91CD\u8907\u639B\u8F09)</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getDataVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$exp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F37\u5236\u8ABF\u7528\u4E00\u6B21\u76EE\u6A19\u7684 get \u89F8\u767C\u52AB\u6301\u52D5\u4F5C</span>
    Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u52A0\u5165\u5B8C\u6210\uFF0C\u5FC5\u9808\u79FB\u9664\u66AB\u5B58\u7684 watcher</span>
    <span class="token keyword">return</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* \u5DE5\u5177\u65B9\u6CD5 */</span>
  <span class="token function">_getDataVal</span><span class="token punctuation">(</span><span class="token parameter">exp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">;</span>
    exp <span class="token operator">=</span> exp<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    exp<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      val <span class="token operator">=</span> val<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u606D\u559C\u4F60\uFF01\uFF01\u770B\u5230\u9019\u908A\u60A8\u5DF2\u7D93\u638C\u63E1\u4E86\u6574\u500B\u67B6\u69CB\u7684\u4E3B\u8981\u6838\u5FC3\u6A21\u7D44\u4E86\uFF0C\u6700\u5F8C\u53EA\u5269\u4E0B MVVM \u69CB\u9020\u5668\uFF0C\u4E5F\u5C31\u662F\u4F7F\u7528\u8005\u8ABF\u7528\u7684\u6A21\u7D44\u645F\uFF5E</p><h4 id="mvvm-\u6A21\u7D44\u7684\u5BE6\u8E10-\u7B2C\u4E8C\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#mvvm-\u6A21\u7D44\u7684\u5BE6\u8E10-\u7B2C\u4E8C\u90E8\u5206" aria-hidden="true">#</a> MVVM \u6A21\u7D44\u7684\u5BE6\u8E10\uFF08\u7B2C\u4E8C\u90E8\u5206\uFF09</h4><p>MVVM \u7684\u89D2\u8272\u5C31\u662F\uFF0C\u5C07\u524D\u9762\u6240\u6709\u6A21\u7D44\u7D44\u5408\u8D77\u4F86\uFF0C\u4F7F\u7528 Observer \u52AB\u6301\u8CC7\u6599\u8B8A\u5316\uFF0C\u900F\u904E Compiler \u89E3\u6790\u7DE8\u8B6F\u6A21\u677F\uFF0C\u900F\u904E Watcher \u5B8C\u6210 Observer \u5C0D Compiler \u7684\u806F\u7E6B\uFF0C\u53E6\u5916\u6700\u91CD\u8981\u7684\u5C31\u662F\u5C07\u6240\u6709\u8CC7\u6599\u7D81\u5B9A\u5230 MVVM \u7684\u5BE6\u4F8B\u4E0A\uFF0C\u65B9\u4FBF\u4F7F\u7528\u8005\u8F15\u9B06\u4F7F\u7528\uFF0C\u5177\u9AD4\u69CB\u9020\u5668\u4EE3\u78BC\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token constant">MVVM</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$computed <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>computed<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$methods <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>methods<span class="token punctuation">;</span>
  
  <span class="token comment">// \u5148\u5C07\u6240\u6709\u8CC7\u6599\u7D81\u5B9A\u5230 MVVM \u5BE6\u4F8B\u4E0A</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_proxyData</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$computed<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_proxyComputed</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$methods<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_proxyMethods</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">// \u518D\u9032\u884C\u521D\u59CB\u5316\uFF0C\u56E0\u70BA Compiler \u5FC5\u9808\u7528\u5230\u6240\u6709\u7684 computed \u8DDF methods</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$el <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>el <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">MVVM</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">new</span> <span class="token class-name">Compiler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">walk</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* Proxys */</span>
  <span class="token function">_proxyData</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>$data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">set</span><span class="token punctuation">(</span>nV<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span>$data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> nV<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">_proxyComputed</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> computed <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$computed<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> computed <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token keyword">typeof</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> 
                <span class="token operator">?</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
                <span class="token operator">:</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>get<span class="token punctuation">,</span>
        <span class="token literal-property property">set</span><span class="token operator">:</span> <span class="token keyword">typeof</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span>
                <span class="token operator">?</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">set</span>
                <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">_proxyMethods</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> methods <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$methods<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> methods <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> 
                <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span> 
                <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64\uFF0C\u4E00\u500B\u7C21\u55AE\u7684 MVVM \u67B6\u69CB\u7B97\u662F\u5B8C\u6210\u4E86\uFF0C\u5BE6\u969B\u5DF2\u53EF\u7C21\u55AE\u7DE8\u8B6F\u6A21\u677F\u4EE5\u53CA\u52A0\u5165\u4E8B\u4EF6\u4E86\uFF0C\u4F7F\u7528\u7BC4\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Hello World
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ info }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toggleName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Toggle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>showName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MVVM</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Johnny&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">showName</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">toggleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>showName <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>showName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\uFF0C\u5C31\u662F\u57FA\u672C MVVM \u7684\u6982\u5FF5\u6D41\u7A0B\u5BE6\u4F5C\uFF0C\u7576\u7136\u6587\u4E2D\u6709\u8A31\u591A\u5730\u65B9\u4E00\u5B9A\u9084\u53EF\u4EE5\u6539\u5584\u5BEB\u6CD5\u6216\u4E0D\u5920\u5468\u5168\u7684\u90E8\u5206\uFF0C\u4E5F\u8ACB\u5404\u8DEF\u9AD8\u624B\u591A\u591A\u5305\u6DB5\uFF0C\u672C\u6587\u50C5\u4F5C\u70BA MVVM \u52A0\u6DF1\u7406\u89E3\u4EE5\u53CA\u7B46\u8A18\u7684\u65B9\u5F0F\u5B58\u5728\uFF0C\u518D\u6B21\u611F\u8B1D\u60A8\u7684\u95B1\u8B80\uFF5E</p><p>\u53C3\u8003\u6587\u737B\uFF1A</p>`,57),v={href:"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/DMQ/mvvm",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.yukapril.com/2017/01/09/js-template-compile.html",target:"_blank",rel:"noopener noreferrer"};function f(y,h){const t=e("SocialBlock"),p=e("ExternalLinkIcon");return c(),l("div",null,[k,r,a(t,{hashtags:"javascript,vuejs,mvvm"}),d,n("ul",null,[n("li",null,[n("p",null,[n("a",v,[s("Model-View-ViewModel"),a(p)])])]),n("li",null,[n("p",null,[n("a",m,[s("\u5256\u6790Vue\u5B9E\u73B0\u539F\u7406 - \u5982\u4F55\u5B9E\u73B0\u53CC\u5411\u7ED1\u5B9Amvvm"),a(p)])])]),n("li",null,[n("p",null,[n("a",b,[s("js \u6A21\u677F\u7F16\u8BD1\u7684\u5B9E\u73B0"),a(p)])])])]),a(t,{hashtags:"javascript,vuejs,mvvm"})])}const g=o(i,[["render",f],["__file","mvvm-practice.html.vue"]]);export{g as default};
