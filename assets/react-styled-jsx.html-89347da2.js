import{_ as t,r as o,o as l,c as i,d as n,e as s,a as c,f as a}from"./app-b03d09bb.js";const p={},d=a(`<h1 id="react-styled-jsx" tabindex="-1"><a class="header-anchor" href="#react-styled-jsx" aria-hidden="true">#</a> React Styled-JSX</h1><p>這篇是紀錄使用 Vite 配置 <code>styled-jsx</code> 基礎安裝與使用方式的筆記，因為最新 v5.0 版本似乎有 <code>__dirname</code> 問題，本篇以 v4.0.1 使用，後續如果有修正這個問題再進行更新，主要核心功能是不影響的</p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> styled-jsx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// babel.config.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;styled-jsx/babel&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若使用 typescript 需要引入相關 <code>&lt;style&gt; tag jsx attribute</code> 的類型設定</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// tsconfig.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;node_modules/styled-jsx/index.d.ts&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sass-支援" tabindex="-1"><a class="header-anchor" href="#sass-支援" aria-hidden="true">#</a> Sass 支援</h2>`,8),u={href:"https://www.npmjs.com/package/@styled-jsx/plugin-sass",target:"_blank",rel:"noopener noreferrer"},r=n("code",null,"sass",-1),v=n("code",null,"babel.config.json",-1),k=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">&quot;styled-jsx/babel&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;optimizeForSpeed&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token string">&quot;@styled-jsx/plugin-sass&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;sassOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;includePaths&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/styles&quot;</span><span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用心得" tabindex="-1"><a class="header-anchor" href="#使用心得" aria-hidden="true">#</a> 使用心得</h2><h3 id="優點" tabindex="-1"><a class="header-anchor" href="#優點" aria-hidden="true">#</a> 優點</h3><ul><li>Nextjs 開箱即用，配置簡單</li><li>Style 撰寫規則簡單，props 傳入方式非常直覺，就寫在組件內</li><li>預設自動完成 scoped className hash，設定 <code>global</code> 優雅，只需要一個屬性切換</li></ul><h3 id="缺點" tabindex="-1"><a class="header-anchor" href="#缺點" aria-hidden="true">#</a> 缺點</h3><ul><li>動態樣式必須放在組件內，相對較難覆用或移植使用，這點跟 Vue 的 style tag 類似</li><li>最新 v5.0 版跟 Vite 不相容，__dirname 環境變數會噴錯，必須使用 v4.0.1</li></ul>`,6);function m(h,b){const e=o("ExternalLinkIcon");return l(),i("div",null,[d,n("p",null,[s("安裝 "),n("a",u,[s("@styled-jsx/plugin-sass"),c(e)]),s(" 及 "),r,s("，配置 "),v,s(" 如下")]),k])}const x=t(p,[["render",m],["__file","react-styled-jsx.html.vue"]]);export{x as default};
