import{_ as a,c as s,d as t,o as e}from"./app-BTOpo2wX.js";const p={};function o(l,n){return e(),s("div",null,n[0]||(n[0]=[t(`<h1 id="如何用-web-api-讀取剪貼簿內容" tabindex="-1"><a class="header-anchor" href="#如何用-web-api-讀取剪貼簿內容"><span>如何用 Web API 讀取剪貼簿內容</span></a></h1><h2 id="可用方法" tabindex="-1"><a class="header-anchor" href="#可用方法"><span>可用方法</span></a></h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText" target="_blank" rel="noopener noreferrer">navigator.clipboard.readText</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/read" target="_blank" rel="noopener noreferrer">navigator.clipboard.read</a></li></ul><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h3><p>透過手機瀏覽器功能中的『分享 -&gt; 拷貝』 寫入剪貼簿的內容，不是單純的文字。故如果用 readText() 讀取的話，只會取到空字串。需要透過 read() 取得 <a href="https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem" target="_blank" rel="noopener noreferrer">ClipboardItem</a>，並將 blob 判斷後轉換格式</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> clipboardItems <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> clipboardItem <span class="token keyword">of</span> clipboardItems<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> type <span class="token keyword">of</span> clipboardItem<span class="token punctuation">.</span>types<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;text/plain&#39;</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">&#39;text/uri-list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">await</span> clipboardItem<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token keyword">await</span> blob<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;text: &#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="支援度" tabindex="-1"><a class="header-anchor" href="#支援度"><span>支援度</span></a></h2><table><thead><tr><th><div style="width:140px;">瀏覽器</div></th><th>行為</th><th>備註</th></tr></thead><tbody><tr><td><strong>Desktop</strong></td><td></td><td></td></tr><tr><td>Chrome</td><td>跳出要求權限的彈窗</td><td>使用者拒絕後，要打開不容易</td></tr><tr><td>Safari</td><td>點擊按鈕後，需再點系統的“貼上”</td><td>每次點擊的行為都一樣</td></tr><tr><td>Firefox</td><td>❌</td><td></td></tr><tr><td><strong>Mobile - iOS</strong></td><td></td><td></td></tr><tr><td>LIFF</td><td>點擊按鈕後，需再點系統的“貼上”</td><td></td></tr><tr><td>IAB</td><td>點擊按鈕後，需再點系統的“貼上”</td><td>同上</td></tr><tr><td>Safari</td><td>點擊按鈕後，需再點系統的“貼上”</td><td>同上</td></tr><tr><td><strong>Mobile - Android</strong></td><td></td><td></td></tr><tr><td>LIFF</td><td>❌</td><td></td></tr><tr><td>IAB</td><td>❌</td><td></td></tr><tr><td>Chrome</td><td>跳出要求權限的彈窗</td><td>使用者拒絕後，要打開不容易</td></tr></tbody></table>`,8)]))}const r=a(p,[["render",o]]),i=JSON.parse('{"path":"/articles/memo/js/read-clipboard.html","title":"如何用 Web API 讀取剪貼簿內容","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1739535172000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"}],"changelog":[{"hash":"0948f04970489d5f555164f01efec10f77f89974","time":1739535172000,"email":"johnnywang@test.com","author":"johnnywang","message":"UPD: add articles"}]},"filePathRelative":"articles/memo/js/read-clipboard.md"}');export{r as comp,i as data};
