import{_ as a,c as s,e as r,o as n}from"./app-NJTEVzrQ.js";const t={};function l(i,e){return n(),s("div",null,e[0]||(e[0]=[r(`<h1 id="argocd-學習筆記" tabindex="-1"><a class="header-anchor" href="#argocd-學習筆記"><span>ArgoCD 學習筆記</span></a></h1><ul><li><a href="https://argo-cd.readthedocs.io/en/stable/getting_started/" target="_blank" rel="noopener noreferrer">ArgoCD Getting Started</a></li><li><a href="https://www.youtube.com/watch?v=N_yakFFbr9w" target="_blank" rel="noopener noreferrer">保哥來賓 ArgoCD 教學</a></li><li><a href="https://github.com/argoproj/argocd-example-apps" target="_blank" rel="noopener noreferrer">argocd-example-apps</a></li></ul><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>Install</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ kubectl create namespace argocd</span>
<span class="line">$ kubectl apply <span class="token parameter variable">-n</span> argocd <span class="token parameter variable">-f</span> https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="access-argo-server" tabindex="-1"><a class="header-anchor" href="#access-argo-server"><span>Access Argo Server</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ kubectl port-forward svc/argocd-server <span class="token parameter variable">-n</span> argocd <span class="token number">8080</span>:443</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The API server can then be accessed using https://localhost:8080</p><h2 id="login-with-default-user" tabindex="-1"><a class="header-anchor" href="#login-with-default-user"><span>Login with default user</span></a></h2><p>預設 argocd 會在產生一組帳號 admin，以及一個 secret 在 <code>argocd-initial-admin-secret</code>，可透過以下指令拿到admin 帳號預設密碼，記得登入後前往修改密碼即可。（修改完密碼後就可以把預設的 secret 刪掉摟）</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ kubectl <span class="token parameter variable">-n</span> argocd get secret argocd-initial-admin-secret <span class="token parameter variable">-o</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span><span class="token string">&quot;{.data.password}&quot;</span> <span class="token operator">|</span> base64 -d<span class="token punctuation">;</span> <span class="token builtin class-name">echo</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="project" tabindex="-1"><a class="header-anchor" href="#project"><span>Project</span></a></h2><p>project 主要用來區分你的 Application 歸屬，每個 Application 在建立時必須指定歸在哪一個 project 中，預設 project 為 <code>default</code>，每個 project 可個別設定配置 repository 來源進行管理</p><h2 id="repository" tabindex="-1"><a class="header-anchor" href="#repository"><span>Repository</span></a></h2><p>repository 主要用來連結你的 git 專案位置，同樣在創建 application 時必須提供對應的 repo，而一個 git 專案內可以有許多配置，在建立 application 時可以明確指定 git repo path，ArgoCD 會自動偵測你的 git repo 底下有哪些 config 路徑並給予下拉選單選取</p><h2 id="application" tabindex="-1"><a class="header-anchor" href="#application"><span>Application</span></a></h2><p>application 是 ArgoCD 當中的一個實體，選取所屬 project, repository 的 config 設定後，就會根據配置進行部署，可以設定自動同步或是手動同步，如果是自動同步則每當 git repo 中設定變更時 ArgoCD 將偵測並且進行重新部署</p><h2 id="create-image-pull-secret" tabindex="-1"><a class="header-anchor" href="#create-image-pull-secret"><span>create image pull secret</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ kubectl create secret docker-registry <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> --docker-server<span class="token operator">=</span>DOCKER_REGISTRY_SERVER --docker-username<span class="token operator">=</span>DOCKER_USER --docker-password<span class="token operator">=</span>DOCKER_PASSWORD --docker-email<span class="token operator">=</span>DOCKER_EMAIL</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>需注意，secret 的 namespace 跟創建 Applications 時提供的 namespace 需一致，否則將無法套用 secret，詳情可見 <a href="https://github.com/kubernetes-sigs/kind/issues/817#issuecomment-681976133" target="_blank" rel="noopener noreferrer">這個討論串</a></p></blockquote>`,19)]))}const c=a(t,[["render",l],["__file","argocd.html.vue"]]),p=JSON.parse('{"path":"/articles/memo/docker/argocd.html","title":"ArgoCD 學習筆記","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"Install","slug":"install","link":"#install","children":[]},{"level":2,"title":"Access Argo Server","slug":"access-argo-server","link":"#access-argo-server","children":[]},{"level":2,"title":"Login with default user","slug":"login-with-default-user","link":"#login-with-default-user","children":[]},{"level":2,"title":"Project","slug":"project","link":"#project","children":[]},{"level":2,"title":"Repository","slug":"repository","link":"#repository","children":[]},{"level":2,"title":"Application","slug":"application","link":"#application","children":[]},{"level":2,"title":"create image pull secret","slug":"create-image-pull-secret","link":"#create-image-pull-secret","children":[]}],"git":{"updatedTime":1667631102000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"}]},"filePathRelative":"articles/memo/docker/argocd.md"}');export{c as comp,p as data};
