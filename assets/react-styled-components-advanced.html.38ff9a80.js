import{_ as o,r as p,o as l,c,d as n,e as s,a as e,f as t}from"./app.57315661.js";const i={},r=n("h1",{id:"react-styled-components-\u9032\u968E\u7BC7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-styled-components-\u9032\u968E\u7BC7","aria-hidden":"true"},"#"),s(" React Styled-Components \u9032\u968E\u7BC7")],-1),u=n("p",null,"\u672C\u7BC7\u662F\u5B78\u7FD2 Styled-Components \u6642\u95B1\u8B80\u5B98\u7DB2\u7684\u4E00\u4E9B\u7B46\u8A18\u8DDF\u5FC3\u5F97\u8A18\u9304\uFF0C\u63A5\u7E8C\u524D\u4E00\u7BC7",-1),d={href:"https://styled-components.com/docs/api",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"theme",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#theme","aria-hidden":"true"},"#"),s(" Theme")],-1),v={href:"https://styled-components.com/docs/advanced#theming",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>\u4F7F\u7528 <code>ThemeProvider</code> \u900F\u904E context \u50B3\u905E theme props \u5728\u7D44\u4EF6\u5167</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Define our button, but with the use of props.theme this time</span>
<span class="token keyword">const</span> Button <span class="token operator">=</span> styled<span class="token punctuation">.</span>button<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  /* Color the border and text with theme.main */
  color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token parameter">props</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>theme<span class="token punctuation">.</span>main<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
  border: 2px solid </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token parameter">props</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>theme<span class="token punctuation">.</span>main<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token comment">// We are passing a default theme for Buttons that arent wrapped in the ThemeProvider</span>
Button<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token string">&quot;palevioletred&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Define what props.theme will look like</span>
<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token string">&quot;mediumseagreen&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Button<span class="token operator">&gt;</span>Normal<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span>ThemeProvider theme<span class="token operator">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Button<span class="token operator">&gt;</span>Themed<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ThemeProvider<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="override-with-theme-prop" tabindex="-1"><a class="header-anchor" href="#override-with-theme-prop" aria-hidden="true">#</a> Override with theme prop</h3><p>\u6216\u662F\u4F60\u4E5F\u53EF\u4EE5\u900F\u904E <code>theme</code> \u5C6C\u6027\u8986\u84CB\u9810\u8A2D\u7684\u4E3B\u984C\u6A23\u5F0F\u8A2D\u5B9A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Button theme<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token string">&quot;royalblue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Ad hoc theme<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ThemeProvider theme<span class="token operator">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Button<span class="token operator">&gt;</span>Themed<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Button theme<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token string">&quot;darkorange&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Overridden<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ThemeProvider<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="style-\u512A\u5148\u7D1A" tabindex="-1"><a class="header-anchor" href="#style-\u512A\u5148\u7D1A" aria-hidden="true">#</a> Style \u512A\u5148\u7D1A</h2><p>\u5982\u679C\u5C07\u5168\u5C40\u985E\u8207\u6A23\u5F0F\u5316\u7684\u7D44\u4EF6\u985E\u4E00\u8D77\u61C9\u7528\uFF0C\u7D50\u679C\u53EF\u80FD\u4E0D\u662F\u60A8\u6240\u671F\u671B\u7684\u3002\u5982\u679C\u5728\u5169\u500B\u985E\u4E2D\u90FD\u5B9A\u7FA9\u4E86\u76F8\u540C\u5C6C\u6027\uFF0C<code>styled-components</code> \u5C07\u7372\u52DD\uFF0C\u9019\u662F\u56E0\u70BA\u6A23\u5F0F\u7D44\u4EF6\u9ED8\u8A8D\u60C5\u6CC1\u4E0B\u6703\u5728 runtime \u6642\u5728 <code>&lt;head&gt;</code> \u672B\u5C3E\u8655\u6CE8\u5165\u5176\u6A23\u5F0F\u3002\u56E0\u6B64\uFF0C\u6703\u512A\u5148\u65BC\u5176\u4ED6\u55AE\u4E00\u7684 class selector</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// MyComponent.js</span>
<span class="token keyword">const</span> MyComponent <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">background-color: green;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token comment">// my-component.css</span>
<span class="token punctuation">.</span>red<span class="token operator">-</span>bg <span class="token punctuation">{</span>
  background<span class="token operator">-</span>color<span class="token operator">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// For some reason this component still has a green background,</span>
<span class="token comment">// even though you&#39;re trying to override it with the &quot;red-bg&quot; class!</span>
<span class="token operator">&lt;</span>MyComponent className<span class="token operator">=</span><span class="token string">&quot;red-bg&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u7A2E\u89E3\u6C7A\u65B9\u6CD5\u662F\u5C07 class selector \u91CD\u8907\u64B0\u5BEB\u63D0\u5347\u512A\u5148\u5EA6</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/* my-component.css */</span>
<span class="token selector">.red-bg.red-bg</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="refer-to-other-component" tabindex="-1"><a class="header-anchor" href="#refer-to-other-component" aria-hidden="true">#</a> Refer to other component</h2><p>\u53EF\u4EE5\u5C07 styled-components \u7684\u7D44\u4EF6\u76F8\u4E92\u4F9D\u8CF4\u4F7F\u7528\u5982\u4E0B</p>`,12),b={href:"https://styled-components.com/docs/advanced#caveat",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Link <span class="token operator">=</span> styled<span class="token punctuation">.</span>a<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  display: flex;
  align-items: center;
  padding: 5px 10px;
  background: papayawhip;
  color: palevioletred;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Icon <span class="token operator">=</span> styled<span class="token punctuation">.</span>svg<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  flex: none;
  transition: fill 0.25s;
  width: 48px;
  height: 48px;

  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Link<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:hover &amp; {
    fill: rebeccapurple;
  }
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="server-rendering-with-nextjs" tabindex="-1"><a class="header-anchor" href="#server-rendering-with-nextjs" aria-hidden="true">#</a> Server Rendering with Nextjs</h2>`,2),g={href:"https://styled-components.com/docs/tooling#serverside-rendering",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,".babelrc",-1),x=n("code",null,"next.config.js",-1),f=n("p",null,[s("\u9996\u5148\u6211\u5011\u9700\u8981\u5B89\u88DD "),n("code",null,"babel-plugin-styled-components"),s(" \u5E6B\u6211\u5011\u8655\u7406 server \u7AEF\u7684\u7DE8\u8B6F")],-1),_=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`$ npm install --save-dev babel-plugin-styled-components
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),w=n("code",null,"next.config.js",-1),j={href:"https://nextjs.org/docs/advanced-features/compiler#styled-components",target:"_blank",rel:"noopener noreferrer"},S=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;next&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>NextConfig<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">const</span> nextConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">reactStrictMode</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">compiler</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ssr and displayName are configured by default</span>
    <span class="token literal-property property">styledComponents</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> nextConfig
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),C={href:"https://github.com/vercel/next.js/tree/canary/examples/with-styled-components-babel",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"_document.tsx",-1),B=t(`<div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// _document.tsx</span>
<span class="token keyword">import</span> Document<span class="token punctuation">,</span> <span class="token punctuation">{</span> DocumentContext<span class="token punctuation">,</span> DocumentInitialProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/document&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ServerStyleSheet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;styled-components&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">MyDocument</span> <span class="token keyword">extends</span> <span class="token class-name">Document</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getInitialProps</span><span class="token punctuation">(</span>
    ctx<span class="token operator">:</span> DocumentContext
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>DocumentInitialProps<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> sheet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerStyleSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> originalRenderPage <span class="token operator">=</span> ctx<span class="token punctuation">.</span>renderPage

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span><span class="token function-variable function">renderPage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token function">originalRenderPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token function-variable function">enhanceApp</span><span class="token operator">:</span> <span class="token punctuation">(</span>App<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            sheet<span class="token punctuation">.</span><span class="token function">collectStyles</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token keyword">const</span> initialProps <span class="token operator">=</span> <span class="token keyword">await</span> Document<span class="token punctuation">.</span><span class="token function">getInitialProps</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>initialProps<span class="token punctuation">,</span>
        styles<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span>initialProps<span class="token punctuation">.</span>styles<span class="token punctuation">}</span><span class="token plain-text">
            </span><span class="token punctuation">{</span>sheet<span class="token punctuation">.</span><span class="token function">getStyleElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      sheet<span class="token punctuation">.</span><span class="token function">seal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u529F\u544A\u6210\uFF0C\u63A5\u8457\u5C31\u53EF\u4EE5\u5FEB\u6A02\u7684\u5728 Next \u4E2D\u4F7F\u7528 Styled-Components \u645F\uFF5E</p><blockquote><p>\u90A3\u70BA\u4F55\u6211\u5011\u6703\u9700\u8981\u9019\u9EBC\u9EBB\u7169\u8655\u7406\u9019\u4E9B\u5462\uFF1F\u53EF\u4EE5\u53C3\u8003\u5B98\u7DB2\u8AAA\u660E\u5982\u4E0B\uFF1A<code>By adding a unique identifier to every styled component, this plugin avoids checksum mismatches due to different class generation on the client and on the server. If you do not use this plugin and try to server-side render styled-components React will complain with an HTML attribute mismatch warning during rehydration.</code>\uFF0C\u53E6\u4E00\u65B9\u9762\u56E0\u70BA Styled-Components \u539F\u672C\u662F\u52D5\u614B\u5728 Client Side \u7522\u751F stylesheet \u4E26\u63D2\u5165 head \u5957\u7528\uFF0C\u4F46\u5728 Server \u7AEF\u6E32\u67D3\u6642\u6C92\u6709\u8FA6\u6CD5\u63D2\u5165\u5230\u6211\u5011\u7684 Document String \u7576\u4E2D\uFF0C\u4E5F\u56E0\u6B64\u6703\u8DF3\u51FA Render not match \u7684 Error\uFF0C\u6240\u4EE5\u6211\u5011\u5728 <code>_document.tsx</code> \u7576\u4E2D\u9810\u5148\u63D0\u53D6 <code>&lt;App /&gt;</code> \u5E95\u4E0B\u7684 stylesheets \u4E26\u63D2\u5165\u5230 Props \u7576\u4E2D\uFF0C\u8B93 Nextjs \u628A styled-components \u7684\u6A23\u5F0F\u8A2D\u5B9A\u4E00\u4F75\u8655\u7406\u5C31\u53EF\u4EE5\u779C</p></blockquote>`,3);function q(N,D){const a=p("ExternalLinkIcon");return l(),c("div",null,[r,u,n("ul",null,[n("li",null,[n("a",d,[s("API \u53C3\u8003"),e(a)])])]),k,n("ul",null,[n("li",null,[n("a",v,[s("\u8AAA\u660E"),e(a)])])]),m,n("blockquote",null,[n("p",null,[s("\u6CE8\u610F!\u9019\u7A2E\u5BEB\u6CD5\u53EA\u9069\u7528\u5728 styled-components\uFF0C\u4E00\u822C React.Component \u4E0D\u662F\u4E00\u500B Styled Component\uFF0C\u53EF"),n("a",b,[s("\u53C3\u8003\u9019\u908A"),e(a)])])]),h,n("p",null,[s("SSR \u90E8\u5206\u5176\u5BE6\u53EF\u4EE5\u5728\u4E0D\u540C\u6846\u67B6\u4E0B\u4F7F\u7528\uFF0C\u8A73\u7D30\u57FA\u672C\u6559\u5B78\u53EF\u4EE5"),n("a",g,[s("\u53C3\u8003\u5B98\u7DB2"),e(a)]),s("\uFF0C\u9019\u908A\u4EE5 Nextjs \u70BA\u7BC4\u4F8B\uFF0C\u56E0\u70BA "),y,s(" \u7684\u90E8\u5206 Nextjs \u6709\u5148\u505A\u597D\u57FA\u672C\u8A2D\u5B9A\uFF0C\u6211\u5011\u53EA\u9700\u8981\u5728 "),x,s(" \u4E2D\u6DFB\u52A0\u8A2D\u5B9A\u5373\u53EF")]),f,_,n("p",null,[s("\u63A5\u8457\u4FEE\u6539 "),w,s("\uFF0C\u53EF\u53C3\u8003 "),n("a",j,[s("Next\u5B98\u65B9\u8AAA\u660E"),e(a)])]),S,n("p",null,[s("\u6700\u5F8C\u53C3\u8003 "),n("a",C,[s("Styled-Components Nextjs\u7BC4\u4F8B"),e(a)]),s(" \u6DFB\u52A0 Custom "),P,s(" \u52A0\u5165\u5982\u4E0B\uFF1A")]),B])}const I=o(i,[["render",q],["__file","react-styled-components-advanced.html.vue"]]);export{I as default};
