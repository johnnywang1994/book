import{_ as s,c as a,d as p,o as e}from"./app-D_QMa3Pm.js";const t={};function c(l,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h1 id="parse-schema-object-章節" tabindex="-1"><a class="header-anchor" href="#parse-schema-object-章節"><span>Parse Schema Object 章節</span></a></h1><ul><li><a href="https://docs.parseplatform.org/js/guide/#schema" target="_blank" rel="noopener noreferrer">Link</a></li></ul><p>用來描述 Parse 物件的架構，用於 migration 或是 testing 非常方便，對於 Schema 的修改一律建議使用 migration 的方式進行，避免錯誤修改無法回溯查找問題</p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2><p>可以直接在線上環境修改 Schema，但請記住一但做了任何修改是回不去的，相關的欄位資料將被移除</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// create an instance to manage your class</span></span>
<span class="line"><span class="token keyword">const</span> mySchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token string">&#39;MyClass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// gets the current schema data</span></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// returns schema for all classes</span></span>
<span class="line">Parse<span class="token punctuation">.</span>Schema<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// add any # of fields, without having to create any objects</span></span>
<span class="line">mySchema</span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;stringField&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token string">&#39;numberField&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addBoolean</span><span class="token punctuation">(</span><span class="token string">&#39;booleanField&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addDate</span><span class="token punctuation">(</span><span class="token string">&#39;dateField&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addFile</span><span class="token punctuation">(</span><span class="token string">&#39;fileField&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addGeoPoint</span><span class="token punctuation">(</span><span class="token string">&#39;geoPointField&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addPolygon</span><span class="token punctuation">(</span><span class="token string">&#39;polygonField&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addArray</span><span class="token punctuation">(</span><span class="token string">&#39;arrayField&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">&#39;objectField&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addPointer</span><span class="token punctuation">(</span><span class="token string">&#39;pointerField&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addRelation</span><span class="token punctuation">(</span><span class="token string">&#39;relationField&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// new types can be added as they are available</span></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&#39;newField&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ANewDataType&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// delete field</span></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">deleteField</span><span class="token punctuation">(</span><span class="token string">&#39;stringField&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// save/update this schema to persist your field changes</span></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// returns save new schema</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// or</span></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// updates existing schema</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="indexes" tabindex="-1"><a class="header-anchor" href="#indexes"><span>Indexes</span></a></h2><p>需要 <code>masterKey</code> 來執行</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// field 必須在加入 index 之前就存在</span></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;stringField&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">defaultValue</span><span class="token operator">:</span> <span class="token string">&#39;defaultString&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 預設值</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">stringField</span><span class="token operator">:</span> <span class="token number">1</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">addIndex</span><span class="token punctuation">(</span><span class="token string">&#39;stringFieldIndex&#39;</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 刪除 index</span></span>
<span class="line">testSchema<span class="token punctuation">.</span><span class="token function">deleteIndex</span><span class="token punctuation">(</span><span class="token string">&#39;indexName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">mySchema<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 取得 indexes</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>indexes<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="purge" tabindex="-1"><a class="header-anchor" href="#purge"><span>Purge</span></a></h2><p>清除 schema(class) 中的所有 object，注意這是一項不可逆轉的動作</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">mySchema<span class="token punctuation">.</span><span class="token function">purge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="class-level-permission" tabindex="-1"><a class="header-anchor" href="#class-level-permission"><span>Class Level Permission</span></a></h2><p>CLP 是一項安全功能，允許開發者以比基於 ACL(Access Control List) 權限控制提供更廣泛的方式限制訪問。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 修改內建 User schema</span></span>
<span class="line"><span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">schema</span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment">// 設定 Schema 的 CLP</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">setCLP</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">requiresAuthentication</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">requiresAuthentication</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;*&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 建立 Post Schema，綁定欄位到 _User</span></span>
<span class="line"><span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token string">&#39;Post&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">schema</span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">addPointer</span><span class="token punctuation">(</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_User&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">setCLP</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">requiresAuthentication</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">update</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">pointerFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">await</span> schema<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16)]))}const o=s(t,[["render",c]]),u=JSON.parse('{"path":"/articles/memo/parse/schema.html","title":"Parse Schema Object 章節","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1748788505000,"contributors":[{"name":"JohnnyWang","username":"JohnnyWang","email":"johnnywang@TW-LW13987-M.local","commits":3,"url":"https://github.com/JohnnyWang"},{"name":"Lindy Liao","username":"","email":"meiliao1207@gmail.com","commits":1}],"changelog":[{"hash":"f01bfa128b4d33fbeddb8abb1697b5391b273d28","time":1748788505000,"email":"meiliao1207@gmail.com","author":"Lindy Liao","message":"UPD"},{"hash":"317e3ba2fcf702d2e69f3f2410d930ac415d7629","time":1658746476000,"email":"johnnywang@test.com","author":"JohnnyWang","message":"UPD: deploy blog"},{"hash":"031c910fdfeb90a178abc5c3aa29795203037f8c","time":1655636083000,"email":"johnnywang@test.com","author":"JohnnyWang","message":"UPD: update"},{"hash":"a891a343933b5b2dc7ef69489bb5257e71125b14","time":1655393828000,"email":"johnnywang@TW-LW13987-M.local","author":"JohnnyWang","message":"UPD: update"}]},"filePathRelative":"articles/memo/parse/schema.md"}');export{o as comp,u as data};
