import{_ as o,r as p,o as i,c as l,a,d as s,e as n,f as t}from"./app.d3ed1059.js";const u={},r=s("h1",{id:"singleton-pattern",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#singleton-pattern","aria-hidden":"true"},"#"),n(" Singleton Pattern")],-1),d=t(`<h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>\u5927\u5BB6\u597D\uFF0C\u6211\u662F Johnny\uFF0C\u4ECA\u5929\u8981\u7D00\u9304\u5206\u4EAB\u7684\u662F Patterns \u7B46\u8A18\u7CFB\u5217\u7684 <code>Singleton Pattern</code></p><h2 id="\u4ECB\u7D39" tabindex="-1"><a class="header-anchor" href="#\u4ECB\u7D39" aria-hidden="true">#</a> \u4ECB\u7D39</h2><p>Singletons \u662F\u4E00\u500B\u53EF\u4EE5\u521D\u59CB\u5316\u4E00\u6B21\uFF0C\u901A\u7528\u65BC\u5168\u5C40\u7684\u985E\u5225\u3002\u56E0\u5176\u5BE6\u4F8B\u53EF\u4EE5\u5728\u6574\u500B\u7A0B\u5F0F\u4E2D\u4F7F\u7528\uFF0C\u6545\u5E38\u5E38\u7528\u65BC\u4FDD\u5B58\u5168\u5C40\u72C0\u614B\u3002</p><blockquote><p>\u5F9E\u7A0B\u5F0F\u958B\u59CB\u751F\u547D\u9031\u671F\u6240\u5275\u9020\u7684\u9019\u4E00\u500B\u5BE6\u4F8B\uFF0C\u7406\u8AD6\u4E0A\u5230\u61C9\u7528\u7A0B\u5F0F\u7D50\u675F\u751F\u547D\u9031\u671F\u90FD\u53EA\u5B58\u5728\u9019\u4E00\u500B</p></blockquote><h2 id="\u9055\u53CD-singleton-\u7684-counter" tabindex="-1"><a class="header-anchor" href="#\u9055\u53CD-singleton-\u7684-counter" aria-hidden="true">#</a> \u9055\u53CD Singleton \u7684 Counter</h2><p>\u4E00\u500B singleton \u985E\u5225\u53EA\u53EF\u4EE5\u88AB\u521D\u59CB\u5316\u4E00\u6B21\uFF0C\u5169\u500B counter \u5BE6\u4F8B\u4E26\u4E0D\u76F8\u540C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
  <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> counter1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> counter2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>counter1<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> counter2<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pure-javascript-\u5BE6\u73FE-singleton" tabindex="-1"><a class="header-anchor" href="#pure-javascript-\u5BE6\u73FE-singleton" aria-hidden="true">#</a> Pure Javascript \u5BE6\u73FE Singleton</h2><p>\u70BA\u4E86\u4FDD\u8B49\u5BE6\u4F8B\u662F\u552F\u4E00\u7684\uFF0C\u6211\u5011\u53EF\u4EE5\u628A\u521D\u59CB\u5316\u7684\u5BE6\u4F8B\u5C0D\u8C61\u548C\u72C0\u614B\u4FDD\u5B58\u5728\u5916\u90E8\u8B8A\u6578\u4E2D\uFF0C\u4E26\u900F\u904E <code>Object.freeze</code> \u9396\u5B9A\u6211\u5011\u5BE6\u4F8B\u7684\u5C6C\u6027\u907F\u514D\u88AB\u5916\u90E8\u610F\u5916\u8986\u5BEB</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> instance<span class="token punctuation">;</span>
<span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;You can only create one instance!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    instance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> counter<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">++</span>counter<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">--</span>counter<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> singletonCounter <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> singletonCounter<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),k={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields",target:"_blank",rel:"noopener noreferrer"},v=t(`<p>\u6539\u5BEB\u5F8C\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> #instance<span class="token punctuation">;</span> <span class="token comment">// static \u662F\u975C\u614B\u5C6C\u6027\uFF0C\u639B\u8F09\u65BC\u985E\u5225\u672C\u8EAB\u800C\u4E0D\u662F\u5BE6\u4F8B\uFF0C\u9019\u88E1\u70BA\u975C\u614B\u96B1\u79C1\u5C6C\u6027</span>
  #counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Counter<span class="token punctuation">.</span>#instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;You can only create one instance!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    Counter<span class="token punctuation">.</span>#instance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#counter<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>#counter<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">--</span><span class="token keyword">this</span><span class="token punctuation">.</span>#counter<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Counter<span class="token punctuation">.</span>#instance<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> singletonCounter <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> singletonCounter<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64\u6211\u5011\u5B8C\u6210\u4E86\u4E00\u500B overkill \u7684\u641E\u7B11 Counter...\u70BA\u4F55\u9019\u9EBC\u8AAA\u5462\uFF1F\u6211\u5011\u7E7C\u7E8C\u770B\u4E0B\u53BB</p><h2 id="\u8A55\u50F9-singleton" tabindex="-1"><a class="header-anchor" href="#\u8A55\u50F9-singleton" aria-hidden="true">#</a> \u8A55\u50F9 Singleton</h2><p>\u900F\u904E\u9650\u5236\u985E\u5225\u7684\u521D\u59CB\u5316\u6B21\u6578\u5728 1 \u6B21\uFF0C\u53EF\u4EE5\u6E1B\u5C11\u6574\u9AD4\u61C9\u7528\u7A0B\u5F0F\u7684\u8A18\u61B6\u9AD4\u4F7F\u7528\u91CF\uFF0C\u7136\u800C <code>Singleton</code> \u53EF\u4EE5\u88AB\u8996\u70BA\u4E00\u7A2E\u53CD\u6A21\u5F0F\uFF0C\u4E26\u4E14\u5B8C\u5168\u4E0D\u5FC5\u8981\u5728 Javascript \u4E2D\u4F7F\u7528\u3002\u6BD4\u8D77\u5176\u4ED6\u50CF\u662F C++, Java \u7B49\uFF0C\u5FC5\u9808\u5148\u5EFA\u7ACB\u4E00\u500B\u985E\u5225\uFF0C\u518D\u900F\u904E\u985E\u5225\u53BB\u5EFA\u7ACB\u5C0D\u61C9\u7684\u7269\u4EF6\uFF0C\u6211\u5011\u5728 Javascript \u4E2D\u6211\u5011\u5B8C\u5168\u53EF\u4EE5\u76F4\u63A5\u5EFA\u7ACB\u4E00\u500B\u7269\u4EF6\u4F7F\u7528\u3002</p><h2 id="javascript-\u4E2D\u7684\u7269\u4EF6" tabindex="-1"><a class="header-anchor" href="#javascript-\u4E2D\u7684\u7269\u4EF6" aria-hidden="true">#</a> Javascript \u4E2D\u7684\u7269\u4EF6</h2><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u5728 Javascript \u4E2D\u5B8C\u5168\u904E\u5EA6\u8907\u96DC\u5316\u4E86\uFF0C\u7562\u7ADF\u900F\u904E Javascript \u53EF\u4EE5\u975E\u5E38\u5FEB\u901F\u5730\u76F4\u63A5\u5EFA\u7ACB\u4E00\u500B\u552F\u4E00\u7684\u7269\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> singletonCounter <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> counter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">++</span>counter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">--</span>counter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> singletonCounter<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7BC4\u4F8B\u6211\u5011\u900F\u904E IIFE \u5EFA\u7ACB\u4E00\u500B\u9694\u96E2\u5916\u90E8\u74B0\u5883\u7684\u4F5C\u7528\u57DF\uFF0C\u7701\u7565\u4E86\u591A\u9918\u7684\u624B\u52D5\u521D\u59CB\u5316\u6B65\u9A5F\uFF0C\u4E26\u5C07\u76F8\u95DC\u72C0\u614B\u4FDD\u5B58\u65BC\u5176\u4E2D\uFF0C\u800C\u5BE6\u4F8B\u672C\u8EAB\u5C31\u76F4\u63A5\u88AB\u56DE\u50B3\u51FA\u4F86\uFF0C\u5728 IIFE \u57F7\u884C\u5B8C\u7562\u7684\u540C\u6642\uFF0C\u552F\u4E00\u7684\u5BE6\u4F8B\u5C31\u5DF2\u7D93\u88AB\u5275\u5EFA</p><p>\u63DB\u6210\u9019\u7A2E\u5BEB\u6CD5\u9664\u4E86\u66F4\u76F4\u89BA\u5BB9\u6613\u4F7F\u7528\u4E4B\u5916\uFF0C\u4E5F\u80FD\u5920\u66F4\u9AD8\u5EA6\u7684\u5BA2\u5236\u5316\u5167\u90E8\u908F\u8F2F\uFF0C\u7562\u7ADF IIFE \u5167\u90E8\u5C31\u662F\u55AE\u7D14\u7684\u51FD\u6578\u74B0\u5883\uFF0C\u800C class \u985E\u5225\u5247\u9700\u8981\u4EF0\u8CF4\u76F8\u95DC feature \u7684\u652F\u63F4\u5EA6\uFF0C\u76F8\u6BD4\u4E4B\u4E0B IIFE \u5728 Singleton \u6A21\u5F0F\u4E0B\u7684\u5BE6\u73FE\u76F8\u5BB9\u5EA6\u3001\u9748\u6D3B\u5EA6\u90FD\u5927\u5927\u63D0\u5347</p><h2 id="lazy-singleton" tabindex="-1"><a class="header-anchor" href="#lazy-singleton" aria-hidden="true">#</a> Lazy Singleton</h2><p>\u628A\u4E0A\u9762\u7BC4\u4F8B\u6539\u6210\u61F6\u52A0\u8F09\uFF0C\u7576\u6C92\u6709\u7528\u5230\u9019\u500B\u6A21\u7D44\u6642\u7BC0\u7701\u8A18\u61B6\u9AD4\u7528\u91CF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> singletonCounter <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> instance<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">initialize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    instance <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> counter<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">++</span>counter<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">--</span>counter<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),m=t('<h2 id="\u7D50\u8AD6" tabindex="-1"><a class="header-anchor" href="#\u7D50\u8AD6" aria-hidden="true">#</a> \u7D50\u8AD6</h2><p>\u7E3D\u7D50 Singleton Patterns \u5177\u6709\u4EE5\u4E0B\u512A\u9EDE</p><ul><li>\u7BC0\u7701\u8A18\u61B6\u9AD4\u7A7A\u9593\u7684\u4F7F\u7528</li><li>\u907F\u514D\u91CD\u8907\u521D\u59CB\u5316\u3001\u91CB\u653E\u7269\u4EF6\uFF0C\u63D0\u9AD8\u6548\u80FD</li><li>\u7269\u4EF6\u7684\u552F\u4E00\u6027\uFF0C\u4FDD\u8B49\u7A0B\u5F0F\u72C0\u614B\u7684\u4E00\u81F4\u6027</li></ul><p>\u7F3A\u9EDE\u5982\u4E0B</p><ul><li>\u8F03\u96E3\u9032\u884C\u6E2C\u8A66\uFF0C\u72C0\u614B\u7121\u6CD5\u9694\u96E2</li><li>\u96B1\u85CF\u7684\u72C0\u614B\u76F8\u4F9D\u95DC\u4FC2</li></ul><p>\u7D9C\u5408\u8A55\u65B7\u4F86\u770B\uFF0CSingleton Pattern \u9069\u5408\u7528\u5728\u72C0\u614B\u4E0D\u53EF\u91CD\u8907\u3001\u689D\u4EF6\u8B8A\u52D5\u8F03\u5C11\u7684\u60C5\u5883\uFF08\u6E2C\u8A66\u60C5\u5883\u4E0D\u6703\u51FA\u73FE\u592A\u591A\u60C5\u5883\uFF0C\u5426\u5247\u6703\u8F03\u96E3\u6E2C\u8A66\uFF09\uFF0C\u6BD4\u5982\u74B0\u5883\u8B8A\u6578\u521D\u59CB\u5316\u3001\u767B\u5165\u8EAB\u4EFD\u9A57\u8B49\uFF08\u53EA\u6709\u767B\u5165\u3001\u767B\u51FA\u5169\u7A2E\u72C0\u614B\uFF09\u7B49\u7B49</p><p>\u611F\u8B1D\u6536\u770B\uFF0C\u4E0B\u4E00\u7BC7\u898B\u62C9\uFF5E</p>',7);function b(h,g){const e=p("SocialBlock"),c=p("ExternalLinkIcon");return i(),l("div",null,[r,a(e,{hashtags:"design,pattern,singleton"}),d,s("p",null,[n("\u4F46\u9019\u9EBC\u5BEB\u4E5F\u6709\u7F3A\u9EDE\uFF0C\u6211\u5011\u5FC5\u9808\u628A\u6240\u6709\u72C0\u614B\u79FB\u51FA\u985E\u5225\u5B9A\u7FA9\uFF0C\u9020\u6210\u5916\u90E8\u72C0\u614B\u7684\u6C61\u67D3\uFF0C\u70BA\u4E86\u907F\u514D\u9019\u500B\u72C0\u6CC1\u6211\u5011\u53EF\u4EE5\u900F\u904E\u4F7F\u7528 "),s("a",k,[n("Private class features"),a(c)]),n("\uFF0C\u628A\u985E\u5225\u76F8\u95DC\u7684\u72C0\u614B\u76F4\u63A5\u5BEB\u5728\u985E\u5225\u4E2D\uFF0C\u4E26\u4E14\u5C0D\u5916\u90E8\u8A2A\u554F\u9032\u884C\u963B\u7D55\uFF0C\u9019\u500B\u529F\u80FD\u662F\u76EE\u524D\u539F\u751F javascript \u6240\u652F\u63F4\u7684\u7279\u6027")]),v,a(e,{hashtags:"design,pattern,singleton"}),m])}const y=o(u,[["render",b],["__file","singleton.html.vue"]]);export{y as default};
