import{_ as p,r as o,o as c,c as i,d as n,e as s,a as t,f as e}from"./app.31edfc4c.js";const l={},u=n("h1",{id:"react-testing-library",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-testing-library","aria-hidden":"true"},"#"),s(" React Testing Library")],-1),r=n("code",null,"@testing-library/react",-1),d={href:"https://testing-library.com/docs/react-testing-library/api",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"install",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#install","aria-hidden":"true"},"#"),s(" Install")],-1),v=n("p",null,"\u5176\u4ED6\u5FC5\u9808\u5B89\u88DD\u7684\u6771\u897F\u5728\u53E6\u4E00\u7BC7\u4E2D\u5DF2\u7D00\u9304\uFF0C\u9019\u908A\u4E0D\u518D\u591A\u5BEB\u4E00\u6B21~",-1),m={href:"https://testing-library.com/docs/react-testing-library/intro",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/testing-library/jest-dom",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"toBeVisible",-1),h=n("code",null,"toBeInTheDocument",-1),f=e(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev @testing-library/react @testing-library/jest-dom
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="query" tabindex="-1"><a class="header-anchor" href="#query" aria-hidden="true">#</a> Query</h2><p>\u67E5\u627E\u5143\u7D20</p><h3 id="\u4E09\u7A2E\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E09\u7A2E\u65B9\u5F0F" aria-hidden="true">#</a> \u4E09\u7A2E\u65B9\u5F0F</h3><ul><li>getBy: \u5C0B\u627E\u76EE\u6A19\uFF0C\u4E0D\u5B58\u5728\u6642\u5674\u932F</li><li>queryBy: \u5C0B\u627E\u76EE\u6A19\uFF0C\u4E0D\u5B58\u5728\u6642\u70BA null</li><li>findBy: \u7B49\u5230\u76EE\u6A19\u5230\u8D85\u6642\u70BA\u6B62</li></ul><h3 id="\u63A8\u85A6\u4F7F\u7528\u9806\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63A8\u85A6\u4F7F\u7528\u9806\u5E8F" aria-hidden="true">#</a> \u63A8\u85A6\u4F7F\u7528\u9806\u5E8F</h3><ul><li>getByLabelText</li><li>getByText</li><li>getByDisplayValue</li><li>getByTitle</li><li>getByTestId</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>screen<span class="token punctuation">,</span> getByLabelText<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/dom&#39;</span>

<span class="token comment">// With screen:</span>
<span class="token keyword">const</span> inputNode1 <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getByLabelText</span><span class="token punctuation">(</span><span class="token string">&#39;Username&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// Without screen, you need to provide a container:</span>
<span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> inputNode2 <span class="token operator">=</span> <span class="token function">getByLabelText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> <span class="token string">&#39;Username&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="match" tabindex="-1"><a class="header-anchor" href="#match" aria-hidden="true">#</a> Match</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span> <span class="token comment">// full string match</span>
screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;llo Worl&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">exact</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// substring match</span>
screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">exact</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// ignore case</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> Debug</h3><p>\u6253\u5370\u51FA\u50CF\u662F console.log(prettyDOM(element)) \u7684\u6548\u679C</p>`,12),y=n("code",null,"prettyDOM",-1),x={href:"https://testing-library.com/docs/dom-testing-library/api-debugging",target:"_blank",rel:"noopener noreferrer"},w=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// debug document</span>
screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// debug single element</span>
screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// debug multiple elements</span>
screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getAllByText</span><span class="token punctuation">(</span><span class="token string">&#39;multi-test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manual" tabindex="-1"><a class="header-anchor" href="#manual" aria-hidden="true">#</a> Manual</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>container<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> container<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;[data-foo=&quot;bar&quot;]&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="user-actions" tabindex="-1"><a class="header-anchor" href="#user-actions" aria-hidden="true">#</a> User Actions</h2><h3 id="fireevent" tabindex="-1"><a class="header-anchor" href="#fireevent" aria-hidden="true">#</a> fireEvent</h3><p>\u900F\u904E <code>fireEvent</code> \u5C0D\u6307\u5B9A\u5143\u7D20\u9032\u884C\u4E8B\u4EF6\u89F8\u767C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> fireEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Button</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>onClick<span class="token punctuation">,</span> children<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>onClick<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
<span class="token punctuation">)</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;calls onClick prop when clicked&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> handleClick <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span><span class="token operator">&gt;</span>Click Me<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span><span class="token punctuation">)</span>
  fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">click me</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>handleClick<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u662F\u63A8\u85A6\u900F\u904E <code>@testing-library/user-event</code> \u5957\u4EF6\u4F86\u89F8\u767C DOM \u4E8B\u4EF6</p>`,8),_=n("code",null,"setTimeout",-1),j=n("code",null,"delay: null",-1),B={href:"https://github.com/testing-library/user-event/issues/833",target:"_blank",rel:"noopener noreferrer"},T=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> userEvent <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/user-event&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Dummy <span class="token keyword">from</span> <span class="token string">&#39;./Dummy&#39;</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  jest<span class="token punctuation">.</span><span class="token function">useFakeTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> userEvent<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;test event&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> onClick <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> getByRole <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Dummy onClick<span class="token operator">=</span><span class="token punctuation">{</span>onClick<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u89F8\u767C\u4E8B\u4EF6</span>
    <span class="token keyword">await</span> user<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>
    jest<span class="token punctuation">.</span><span class="token function">runOnlyPendingTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>onClick<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="async-methods" tabindex="-1"><a class="header-anchor" href="#async-methods" aria-hidden="true">#</a> Async methods</h3>`,2),C={href:"https://testing-library.com/docs/dom-testing-library/api-async",target:"_blank",rel:"noopener noreferrer"},E=e(`<h4 id="findby" tabindex="-1"><a class="header-anchor" href="#findby" aria-hidden="true">#</a> findBy</h4><p>\u5BE6\u969B\u4E0A\u5C31\u662F getBy \u67E5\u8A62\u548C waitFor \u7684\u7D44\u5408\uFF0C\u7576\u60A8\u671F\u671B\u4E00\u500B\u5143\u7D20\u51FA\u73FE\u4F46\u5C0D DOM \u7684\u66F4\u6539\u53EF\u80FD\u4E0D\u6703\u7ACB\u5373\u767C\u751F\u6642\uFF0C\u8ACB\u4F7F\u7528 findBy \u67E5\u8A62</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> button <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Click Me&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span>
<span class="token keyword">await</span> screen<span class="token punctuation">.</span><span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked once&#39;</span><span class="token punctuation">)</span>
fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span>
<span class="token keyword">await</span> screen<span class="token punctuation">.</span><span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked twice&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="waitfor" tabindex="-1"><a class="header-anchor" href="#waitfor" aria-hidden="true">#</a> waitFor</h4><p>\u4EFB\u4F55\u6642\u5019\u9700\u8981\u7B49\u5F85\u4E00\u6BB5\u6642\u9593\u6642\uFF0C\u4F7F\u7528 <code>waitFor</code></p><blockquote><p>\u6CE8\u610F\uFF0C<code>waitFor</code> \u53EF\u80FD\u6703\u591A\u6B21\u904B\u884C\u56DE\u8ABF\uFF0C\u76F4\u5230\u9054\u5230\u8D85\u6642</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B49\u5230 mockAPI \u88AB\u57F7\u884C\u4E00\u6B21\u5F8C</span>
<span class="token keyword">await</span> <span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">expect</span><span class="token punctuation">(</span>mockAPI<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="waitforelementtoberemoved" tabindex="-1"><a class="header-anchor" href="#waitforelementtoberemoved" aria-hidden="true">#</a> waitForElementToBeRemoved</h4><p><code>waitForElementToBeRemoved</code> \u662F\u4EE5 <code>waitFor</code> \u70BA\u57FA\u790E\u88FD\u4F5C\uFF0C\u7528\u4F86\u7B49\u5F85\u5F9E DOM \u4E2D\u79FB\u9664\u5143\u7D20</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;div.getOuttaHere&#39;</span><span class="token punctuation">)</span>
<span class="token function">waitForElementToBeRemoved</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;div.getOuttaHere&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Element no longer in DOM&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-neat&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token comment">// other mutations are ignored...</span>
el<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
<span class="token comment">// logs &#39;Element no longer in DOM&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="appearance-disappearance" tabindex="-1"><a class="header-anchor" href="#appearance-disappearance" aria-hidden="true">#</a> Appearance &amp; Disappearance</h3>`,11),q={href:"https://testing-library.com/docs/guide-disappearance",target:"_blank",rel:"noopener noreferrer"},D=e(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev @testing-library/jest-dom
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;movie title appears&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// element is initially not present...</span>
  <span class="token comment">// wait for appearance and return the element</span>
  <span class="token keyword">const</span> movie <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;the lion king&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;movie title appears&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// element is initially not present...</span>

  <span class="token comment">// wait for appearance inside an assertion</span>
  <span class="token keyword">await</span> <span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;the lion king&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> submitButton <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">queryByText</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>submitButton<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// it doesn&#39;t exist</span>

<span class="token keyword">const</span> submitButtons <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">queryAllByText</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>submitButtons<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// expect no elements</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fake-timer" tabindex="-1"><a class="header-anchor" href="#fake-timer" aria-hidden="true">#</a> Fake Timer</h3>`,4),F={href:"https://testing-library.com/docs/using-fake-timers",target:"_blank",rel:"noopener noreferrer"},M=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Fake timers using Jest</span>
<span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  jest<span class="token punctuation">.</span><span class="token function">useFakeTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// Running all pending timers and switching to real timers using Jest</span>
<span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  jest<span class="token punctuation">.</span><span class="token function">runOnlyPendingTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  jest<span class="token punctuation">.</span><span class="token function">useRealTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="querying-within-elements" tabindex="-1"><a class="header-anchor" href="#querying-within-elements" aria-hidden="true">#</a> Querying Within Elements</h3><p>\u4F7F\u7528 <code>within</code> \u51FD\u6578\u5305\u88F9\u5143\u7D20\uFF0C\u53EF\u76F4\u63A5\u5728\u5176\u5167\u9032\u884C querying\uFF0C\u4E0D\u7528\u7D66\u4E88 container</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>render<span class="token punctuation">,</span> within<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span>getByText<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> messages <span class="token operator">=</span> <span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;messages&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> helloMessage <span class="token operator">=</span> <span class="token function">within</span><span class="token punctuation">(</span>messages<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2>`,5),R={href:"https://testing-library.com/docs/dom-testing-library/api-configuration",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"configure",-1),O=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> configure <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>

<span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">testIdAttribute</span><span class="token operator">:</span> <span class="token string">&#39;data-my-test-id&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redux-testing" tabindex="-1"><a class="header-anchor" href="#redux-testing" aria-hidden="true">#</a> Redux Testing</h2>`,2),P={href:"https://redux.js.org/usage/writing-tests",target:"_blank",rel:"noopener noreferrer"},I=n("h3",{id:"reducers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reducers","aria-hidden":"true"},"#"),s(" Reducers")],-1),L=n("p",null,[s("\u900F\u904E\u547C\u53EB "),n("code",null,"reducer"),s(" \u6211\u5011\u53EF\u4EE5\u7D66\u4E88\u76F8\u61C9\u7684 "),n("code",null,"state"),s(", "),n("code",null,"action"),s(" \u5C0D store \u9032\u884C\u6E2C\u8A66\u64CD\u4F5C")],-1),S={href:"https://redux.js.org/usage/writing-tests#reducers",target:"_blank",rel:"noopener noreferrer"},H=e(`<h3 id="redux-in-components" tabindex="-1"><a class="header-anchor" href="#redux-in-components" aria-hidden="true">#</a> Redux in Components</h3><p>\u64B0\u5BEB\u4E00\u500B\u5BA2\u88FD\u5316 <code>render</code> \u51FD\u6578\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token keyword">as</span> StoreProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> store <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">AllTheProviders</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>StoreProvider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>children<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>StoreProvider<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">customRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token parameter">ui<span class="token punctuation">,</span>
  options</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">render</span><span class="token punctuation">(</span>ui<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">wrapper</span><span class="token operator">:</span> AllTheProviders<span class="token punctuation">,</span> <span class="token operator">...</span>options<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span>customRender <span class="token keyword">as</span> render<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function N(V,W){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("\u9019\u7BC7\u8A18\u9304 "),r,s(" \u7684\u4E00\u4E9B\u5B78\u7FD2\u7B46\u8A18\uFF0C\u4E3B\u8981\u4F86\u6E90\u65BC"),n("a",d,[s("\u5B98\u7DB2"),t(a)])]),k,v,n("ul",null,[n("li",null,[n("a",m,[s("@testing-library/react"),t(a)])]),n("li",null,[n("a",b,[s("@testing-library/jest-dom"),t(a)]),s(": \u53EF\u4EE5\u4F7F\u7528\u4E00\u4E9B\u7279\u6B8A matcher "),g,s(", "),h])]),f,n("blockquote",null,[n("p",null,[y,s(" \u662F\u4E00\u500B\u5167\u5EFA\u7684"),n("a",x,[s("\u6253\u5370\u5143\u7D20\u5DE5\u5177\u51FD\u6578"),t(a)])])]),w,n("blockquote",null,[n("p",null,[s("\u4F7F\u7528\u6642\u9700\u6CE8\u610F\uFF0C\u82E5 event \u7576\u4E2D\u6709 "),_,s(" \u52D5\u4F5C\uFF0C\u5FC5\u9808\u5728 setup \u6642\u52A0\u4E0A "),j,s(" option\uFF0C\u907F\u514D\u9020\u6210 timeout \u554F\u984C\uFF0C\u8A73\u7D30"),n("a",B,[s("\u8A0E\u8AD6\u53EF\u898B\u9019\u908A"),t(a)])])]),T,n("ul",null,[n("li",null,[n("a",C,[s("\u8AAA\u660E"),t(a)])])]),E,n("ul",null,[n("li",null,[n("a",q,[s("\u8AAA\u660E"),t(a)])])]),D,n("ul",null,[n("li",null,[n("a",F,[s("\u8AAA\u660E"),t(a)])])]),M,n("ul",null,[n("li",null,[n("a",R,[s("\u8AAA\u660E"),t(a)]),A,s(" \u8A2D\u5B9A\u6703\u81EA\u52D5\u5408\u4F75\u5230\u9810\u8A2D\u7684\u8A2D\u5B9A\u4E2D")])]),O,n("ul",null,[n("li",null,[n("a",P,[s("\u8AAA\u660E"),t(a)])])]),I,L,n("ul",null,[n("li",null,[n("a",S,[s("\u7BC4\u4F8B"),t(a)])])]),H])}const J=p(l,[["render",N],["__file","react-testing-library.html.vue"]]);export{J as default};
