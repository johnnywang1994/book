import{_ as p,r as o,o as c,c as l,b as n,a,e as t,d as e}from"./app.c5f5e7d3.js";const i={},u=t(`<h1 id="react-unit-test" tabindex="-1"><a class="header-anchor" href="#react-unit-test" aria-hidden="true">#</a> React Unit Test</h1><p>\u9019\u7BC7\u8A18\u9304\u5B78\u7FD2\u57FA\u672C React Unit Test \u7684\u76F8\u95DC\u5FC3\u5F97\u7B46\u8A18</p><h2 id="\u5B89\u88DD" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88DD" aria-hidden="true">#</a> \u5B89\u88DD</h2><p>\u5148\u5B89\u88DD\u6700\u57FA\u672C\u7684\u4F9D\u8CF4\u5957\u4EF6</p><ul><li><code>jest-transform-stub</code>: \u9019\u500B\u5957\u4EF6\u5C31\u53EA\u662F\u8B93\u4E0D\u9700\u8981\u8655\u7406\u7684\u6A21\u7D44\u5FFD\u7565\u7684\u8F49\u63DB\u5668</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev jest ts-jest babel-jest jest-environment-jsdom jest-transform-stub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u53E6\u5916\u5982\u679C\u74B0\u5883\u6C92\u6709\u8A2D\u5B9A babel \u4E5F\u9700\u8981\u5B89\u88DD\u76F8\u95DC\u5957\u4EF6</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev @babel/preset-env @babel/preset-react
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token comment">// babel.config.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">&quot;@babel/preset-react&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;runtime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;automatic&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E" aria-hidden="true">#</a> \u914D\u7F6E</h2><p>\u9019\u88E1\u8981\u6CE8\u610F\uFF0C\u6709\u5169\u7A2E\u60C5\u6CC1\u5FC5\u9808\u8655\u7406\uFF0C\u7B2C\u4E00\u7A2E\u662F\u975E js \u6A94\u6848\u8655\u7406\uFF0C\u7B2C\u4E8C\u7A2E\u662F <code>@</code> \u958B\u982D\u7684 alias \u6A94\u6848\u8655\u7406\uFF0C\u5982\u679C\u6C92\u6709\u5728\u9019\u908A\u8A2D\u5B9A\uFF0C\u8DD1\u6E2C\u8A66\u6642\u6703\u5674\u932F <code>Can not find module</code>\uFF0C\u53E6\u5916\u56E0\u70BA <code>moduleNameMapper</code> \u662F\u7531\u4E0A\u5F80\u4E0B\u6BD4\u5C0D\u8A2D\u5B9A\uFF0C\u975E js \u6A94\u8981\u8A18\u5F97\u5148\u653E\u524D\u9762\uFF0C\u653E <code>alias</code> \u5F8C\u9762\u5C31\u9084\u662F\u6703\u5674\u932F!!</p>`,11),r={href:"https://stackoverflow.com/questions/42629925/testing-with-jest-and-webpack-aliases",target:"_blank",rel:"noopener noreferrer"},d=e("testing-with-jest-and-webpack-aliases"),k=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// jest.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// if use typescript</span>
  <span class="token comment">// preset: &#39;ts-jest&#39;,</span>
  <span class="token comment">// transform: {</span>
  <span class="token comment">//   &quot;^.+\\\\js$&quot;: &quot;babel-jest&quot;</span>
  <span class="token comment">// },</span>
  <span class="token literal-property property">globals</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">testEnvironment</span><span class="token operator">:</span> <span class="token string">&#39;jsdom&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">moduleNameMapper</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// test these unresolved extension first</span>
    <span class="token string-property property">&quot;.+\\\\.(svg|css|styl|less|sass|scss|png|jpg|ttf|woff|woff2)$&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jest-transform-stub&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// test for alias in the end</span>
    <span class="token string-property property">&quot;^@/(.*)$&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;rootDir&gt;/src/$1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">moduleFileExtensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;jsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ts&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;node&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BEB\u6E2C\u8A66" tabindex="-1"><a class="header-anchor" href="#\u5BEB\u6E2C\u8A66" aria-hidden="true">#</a> \u5BEB\u6E2C\u8A66</h2><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// MyButton.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> PropsWithChildren <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">Props</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  label<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">MyButton</span><span class="token punctuation">(</span><span class="token punctuation">{</span> label <span class="token punctuation">}</span><span class="token operator">:</span> PropsWithChildren<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-testid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>label<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyButton
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// MyButton.test.js</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom/client&#39;</span>
<span class="token keyword">import</span> MyButton <span class="token keyword">from</span> <span class="token string">&#39;../MyButton&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;MyButton render&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;render without error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> root <span class="token operator">=</span> ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span>
    root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyButton <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    root<span class="token punctuation">.</span><span class="token function">unmount</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="testing-library-react" tabindex="-1"><a class="header-anchor" href="#testing-library-react" aria-hidden="true">#</a> @testing-library/react</h2><p>\u5B89\u88DD <code>@testing-library/react</code></p>`,6),v={href:"https://testing-library.com/docs/react-testing-library/intro",target:"_blank",rel:"noopener noreferrer"},m=e("\u5B98\u65B9\u6587\u4EF6"),b={href:"https://testing-playground.com/",target:"_blank",rel:"noopener noreferrer"},g=e("Testing Playground"),h=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev @testing-library/react
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6539\u5BEB\u525B\u525B\u7684\u6E2C\u8A66\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// MyButton.test.js</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> cleanup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>
<span class="token keyword">import</span> MyButton <span class="token keyword">from</span> <span class="token string">&#39;../MyButton&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;MyButton render&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// this is implements automatically</span>
  <span class="token comment">// cleanup each rendered components</span>
  <span class="token function">afterEach</span><span class="token punctuation">(</span>cleanup<span class="token punctuation">)</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;render without error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyButton label<span class="token operator">=</span><span class="token string">&quot;Hello World&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;render element currect&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyButton label<span class="token operator">=</span><span class="token string">&quot;Hello World&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByTestId</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="react-test-renderer" tabindex="-1"><a class="header-anchor" href="#react-test-renderer" aria-hidden="true">#</a> react-test-renderer</h2><p>\u7528\u9019\u500B\u5957\u4EF6\u642D\u914D jest \u53EF\u9032\u884C snapshot \u6E2C\u8A66\uFF0C\u91DD\u5C0D\u6574\u500B\u7D44\u4EF6\u6E32\u67D3\u7D50\u679C\u7D30\u90E8\u6BD4\u5C0D\uFF0C\u7B2C\u4E00\u6B21\u57F7\u884C\u6E2C\u8A66\u6642\u6703\u5C07\u7D50\u679C\u5132\u5B58\u5728 <code>__snapshots__</code> \u8CC7\u6599\u593E\u5167\uFF0C\u4E4B\u5F8C\u90FD\u6703\u5F9E\u9019\u88E1\u9032\u884C\u6BD4\u5C0D\uFF0C\u7576\u6E2C\u8A66\u7D50\u679C\u4E0D\u543B\u5408\u6642\u5C31\u6703\u91DD\u5C0D\u6539\u52D5\u8655\u6A19\u8A3B\u4E26\u5674\u932F\u63D0\u793A</p>`,5),f={href:"https://jestjs.io/docs/snapshot-testing",target:"_blank",rel:"noopener noreferrer"},y=e("Jest Snapshot \u5B98\u65B9\u6587\u4EF6"),_=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev react-test-renderer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// MyButton.test.js</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> cleanup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>
<span class="token keyword">import</span> renderer <span class="token keyword">from</span> <span class="token string">&#39;react-test-renderer&#39;</span>
<span class="token keyword">import</span> MyButton <span class="token keyword">from</span> <span class="token string">&#39;../MyButton&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;MyButton render&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// cleanup each rendered components</span>
  <span class="token function">afterEach</span><span class="token punctuation">(</span>cleanup<span class="token punctuation">)</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;render without error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyButton label<span class="token operator">=</span><span class="token string">&quot;Hello World&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;render element currect&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyButton label<span class="token operator">=</span><span class="token string">&quot;Hello World&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByTestId</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;matches snapshot&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> tree <span class="token operator">=</span> renderer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyButton label<span class="token operator">=</span><span class="token string">&quot;Hello World&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function j(q,w){const s=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[d,a(s)])])]),k,n("ul",null,[n("li",null,[n("a",v,[m,a(s)])]),n("li",null,[n("a",b,[g,a(s)])])]),h,n("ul",null,[n("li",null,[n("a",f,[y,a(s)])])]),_])}var B=p(i,[["render",j],["__file","react-unit-test.html.vue"]]);export{B as default};
