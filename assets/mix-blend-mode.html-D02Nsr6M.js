import{_ as l,c as i,b as n,e,a as t,d as o,o as p,r as c}from"./app-mRs5tNIG.js";const d={};function r(u,s){const a=c("SocialBlock");return p(),i("div",null,[s[0]||(s[0]=n("h1",{id:"css-mix-blend-mode-屬性混合圖層動畫",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#css-mix-blend-mode-屬性混合圖層動畫"},[n("span",null,"CSS: mix-blend-mode 屬性混合圖層動畫")])],-1)),s[1]||(s[1]=n("h6",{id:"tags-css-animation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tags-css-animation"},[n("span",null,[e("tags: "),n("code",null,"CSS"),e(),n("code",null,"Animation")])])],-1)),t(a,{hashtags:"css,animation"}),s[2]||(s[2]=o(`<h3 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h3><p>前端工作上，常使用到一些動畫效果，除了使用 <code>@keyframes</code> 製作簡單動畫外，也會使用例如<code>background-position: -800px 0;</code> 搭配 <code>animation: XX 2s step(10) infinite</code> 等來將動畫以 frame 的方式進行處理，或是使用 JavaScript 的 requestAnimationFrame 製作，但今天要分享的是一種特殊使用場景＿使用 gif 疊加圖層製作。</p><h3 id="範例" tabindex="-1"><a class="header-anchor" href="#範例"><span>範例</span></a></h3><p>主要使用的是 CSS 的 <code>mix-blend-mode</code> 屬性，它能夠對圖層進行混合處理，而此一特性，正好可用來將 gif 的黑色背景去除，從而達到類似 png 的透明效果。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>XX.gif<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.bg</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;XX.png&#39;</span><span class="token punctuation">)</span></span><span class="token selector">;</span>
<span class="line">  img</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">mix-blend-mode</span><span class="token punctuation">:</span> color-dodge<span class="token punctuation">;</span> // 混合模式</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上最後會將 bg 內的 img 進行圖層混合， <code>color-dodge</code> 為加亮功能，正好去除 gif 黑色底，讓 gif 就像 png 一般疊加在背景上，卻又能進行動畫的效果。</p><h3 id="注意點" tabindex="-1"><a class="header-anchor" href="#注意點"><span>注意點</span></a></h3><ul><li><code>mix-blend-mode</code> 除了直接加在 img 標籤的 CSS 設定上以外，假如需要將較深層的圖片混合到外部背景之類的狀況下，可以在外部背景的區塊加上此屬性進行混合，但需注意，當對整個區塊混合時，內部所有節點會視為一個整體而一起被混入，有時會造成畫面渲染的顯示異常。</li><li>需要混合的圖層必須在同一個元素區塊的子節點中，背景若設定在單獨被 fixed 的圖層，則該背景將無法與其他圖層混合導致問題。</li><li>使用時需注意圖層之間 z-index 的設定會影響圖層疊加的順序</li></ul>`,9)),t(a,{hashtags:"css,animation"})])}const g=l(d,[["render",r],["__file","mix-blend-mode.html.vue"]]),k=JSON.parse('{"path":"/articles/css/mix-blend-mode.html","title":"CSS: mix-blend-mode 屬性混合圖層動畫","lang":"zh-TW","frontmatter":{},"headers":[{"level":3,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":3,"title":"範例","slug":"範例","link":"#範例","children":[]},{"level":3,"title":"注意點","slug":"注意點","link":"#注意點","children":[]}],"git":{"updatedTime":1704630173000,"contributors":[{"name":"johnnywang","email":"johnnywang@test.com","commits":1},{"name":"johnnywang1994","email":"johnny29621189@kimo.com","commits":1}]},"filePathRelative":"articles/css/mix-blend-mode.md"}');export{g as comp,k as data};
