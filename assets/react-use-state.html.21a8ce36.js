import{_ as o,r as p,o as l,c as i,a,d as n,e as s,f as c}from"./app.29e1f3ff.js";const u={},r=n("h1",{id:"react-usestate-\u53D6\u5F97\u6700\u65B0\u503C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-usestate-\u53D6\u5F97\u6700\u65B0\u503C","aria-hidden":"true"},"#"),s(" React useState \u53D6\u5F97\u6700\u65B0\u503C")],-1),d=n("h2",{id:"\u524D\u8A00",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u524D\u8A00","aria-hidden":"true"},"#"),s(" \u524D\u8A00")],-1),k={href:"https://johnnywang1994.github.io/book/articles/memo/learning.html#react",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"useState",-1),m=n("code",null,"\u72C0\u614B\u66F4\u65B0\u6A5F\u5236",-1),b=c(`<h2 id="\u76EE\u6A19" tabindex="-1"><a class="header-anchor" href="#\u76EE\u6A19" aria-hidden="true">#</a> \u76EE\u6A19</h2><p>\u7576\u8ABF\u7528\u5982\u4E0B\u65B9\u5F0F\u66F4\u65B0\u72C0\u614B\u6642\uFF0C\u56E0\u70BA <code>setState</code> \u672C\u8EAB\u662F\u975E\u540C\u6B65\u7684\uFF0CReact \u5167\u90E8\u6703\u5728 hooks \u69CB\u5EFA\u968E\u6BB5\u624D\u91CD\u65B0\u53D6\u503C\u653E\u5230 <code>memoizedState</code> \u53BB render \u756B\u9762\uFF0C\u5728\u539F\u4F86\u7684 function \u7684 scope \u4E2D\u6211\u5011\u62FF\u5230\u7684\u9084\u662F\u820A\u7684\u503C\uFF0C\u82E5\u6211\u5011\u5E0C\u671B\u80FD\u62FF\u5230\u66F4\u65B0\u5F8C\u7684\u72C0\u614B\u505A\u4E8B\u60C5\u6642\uFF0C\u5C31\u5FC5\u9808\u7528 <code>useEffect</code> \u7D81\u5B9A deps\uFF0C\u7576\u89F8\u767C\u4E00\u6B21 increment \u6642\uFF0C\u5728 useEffect \u968E\u6BB5\u624D\u6703\u62FF\u5230\u65B0\u7684\u72C0\u614B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> increment <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> c <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token comment">// 0</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;effect trigger&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span> <span class="token comment">// effect trigger 1</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;rerender&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h3 onClick<span class="token operator">=</span><span class="token punctuation">{</span>increment<span class="token punctuation">}</span><span class="token operator">&gt;</span>Hi<span class="token punctuation">,</span> <span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u7DB2\u67E5\u4E86\u4E0B\u767C\u73FE\u8A31\u591A\u89E3\u6CD5\u90FD\u662F\u570D\u7E5E\u8457\u904E\u53BB class component \u6642\u671F\u7684 callback\uFF0C\u88FD\u4F5C\u50CF\u662F <code>useCallbackState</code> \u9019\u7A2E hooks \u4F86\u8655\u7406</p><h3 id="\u7B2C\u4E00\u7A2E\u505A\u6CD5-usecallbackstate" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u7A2E\u505A\u6CD5-usecallbackstate" aria-hidden="true">#</a> \u7B2C\u4E00\u7A2E\u505A\u6CD5 useCallbackState</h3><p>\u7B2C\u4E00\u7A2E callback \u7684\u5BEB\u6CD5\u6309\u7167\u4E0A\u9762\u7684 <code>useEffect</code> \u4F5C\u6CD5\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">useCallbackState</span><span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span>
  <span class="token keyword">const</span> callbackRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSetState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">updatedState<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    callbackRef<span class="token punctuation">.</span>current <span class="token operator">=</span> cb
    <span class="token function">setState</span><span class="token punctuation">(</span>updatedState<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callbackRef<span class="token punctuation">.</span>current <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      callbackRef<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span>
      callbackRef<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> handleSetState<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>useRef</code> \u628A callback \u51FD\u6578\u5132\u5B58\u8D77\u4F86\uFF0C\u4E26\u5728 <code>useEffect</code> \u4E2D\u8ABF\u7528\u57F7\u884C\uFF0C\u4F46\u9019\u7A2E\u4F5C\u6CD5\u7684\u57F7\u884C\u7D50\u679C\u5982\u4E0B\uFF0C\u53EF\u4EE5\u660E\u986F\u770B\u5230\u6703\u5728 rerender \u5F8C\u624D\u57F7\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// rerender</span>
<span class="token comment">// 1</span>
<span class="token comment">// effect trigger 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B2C\u4E8C\u7A2E\u505A\u6CD5-usecallbackstate" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u7A2E\u505A\u6CD5-usecallbackstate" aria-hidden="true">#</a> \u7B2C\u4E8C\u7A2E\u505A\u6CD5 useCallbackState</h3><p>\u70BA\u4E86\u4FDD\u8B49\u6211\u5011\u7684 callback \u662F\u5728\u6B63\u78BA\u7684\u6642\u9593\u9EDE\u88AB\u57F7\u884C\uFF0C\u7B2C\u4E8C\u7A2E\u6BD4\u8D77\u7B2C\u4E00\u7A2E\u505A\u6CD5\uFF1A<code>\u4E0D\u5FC5\u7B49\u5230\u72C0\u614B commit \u5F8C\u624D\u57F7\u884C\uFF0C\u80FD\u4FDD\u6709\u66F4\u5B8C\u6574\u7684\u751F\u547D\u9031\u671F\u6B63\u78BA\u6027</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">useCallbackState</span><span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSetState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">updatedState<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setState</span><span class="token punctuation">(</span>updatedState<span class="token punctuation">)</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prevState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">cb</span><span class="token punctuation">(</span>prevState<span class="token punctuation">)</span>
      <span class="token keyword">return</span> prevState
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> handleSetState<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),f={href:"https://stackoverflow.com/a/65757628/10300120",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"functional setState",-1),g=c(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1</span>
<span class="token comment">// rerender</span>
<span class="token comment">// effect trigger 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B2C\u4E09\u7A2E\u4F5C\u6CD5-useasyncstate" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u7A2E\u4F5C\u6CD5-useasyncstate" aria-hidden="true">#</a> \u7B2C\u4E09\u7A2E\u4F5C\u6CD5 useAsyncState</h3><p>\u9019\u7A2E\u4F5C\u6CD5\u8DDF\u7B2C\u4E00\u7A2E\u5F88\u50CF\uFF0C\u53EA\u662F\u628A callback \u66FF\u63DB\u6210 promise resolve\uFF0C\u4E26\u4E14\u56E0\u70BA promise resolve \u5BE6\u969B\u4E0A\u662F\u6BD4\u540C\u6B65\u57F7\u884C\u6162\u534A\u62CD\u7684\uFF0C\u6240\u4EE5\u5BE6\u969B\u5BE6\u884C\u6642\u6A5F\u751A\u81F3\u6BD4\u5176\u4ED6 useEffect \u66F4\u665A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">useAsyncState</span><span class="token punctuation">(</span><span class="token parameter">initialValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>initialValue<span class="token punctuation">)</span>
  <span class="token keyword">const</span> resolveCb <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSetState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">updatedState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// force previous promise resolved</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> resolveCb<span class="token punctuation">.</span>current <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resolveCb<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span>updatedState<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      resolveCb<span class="token punctuation">.</span>current <span class="token operator">=</span> resolve
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">setState</span><span class="token punctuation">(</span>updatedState<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resolveCb<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">undefined</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> resolveCb<span class="token punctuation">.</span>current <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      resolveCb<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span>
      resolveCb<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> handleSetState<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u57F7\u884C\u9806\u5E8F\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// rerender</span>
<span class="token comment">// effect trigger 1</span>
<span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7D50\u8AD6" tabindex="-1"><a class="header-anchor" href="#\u7D50\u8AD6" aria-hidden="true">#</a> \u7D50\u8AD6</h2><ul><li>Promise \u96D6\u7136\u4E0D\u6703\u9020\u6210 callback hell\uFF0C\u4F46\u5F8C\u7E8C\u52D5\u4F5C\u8ABF\u7528\u6642\u6A5F\u6703\u88AB\u5F80\u5F8C<code>\u5EF6\u5230\u5176\u4ED6 useEffect \u4E4B\u5F8C</code></li><li>Callback \u5206\u6210\u5169\u7A2E\u505A\u6CD5 <ul><li>\u7B2C\u4E00\u7A2E\uFF1A\u50B3\u905E callback \u51FD\u6578\u4E26\u4EE5 <code>useRef</code> \u5132\u5B58\uFF0C\u4E26\u5728 <code>useEffect</code> \u4E2D\u8ABF\u7528\u57F7\u884C\uFF0C\u9019\u7A2E\u4F5C\u6CD5\u4E5F\u662F\u7B49\u5230 <code>commit</code> \u72C0\u614B <code>rerender</code> \u5F8C\u624D\u57F7\u884C</li><li>\u7B2C\u4E8C\u7A2E\uFF1A\u904B\u7528 <code>functional setState</code> \u72C0\u614B\u4E32\u806F\u50B3\u905E\u7684\u539F\u7406\uFF0C\u9023\u7E8C\u8ABF\u7528\u5169\u6B21 <code>setState</code> \u4E26\u5C07 <code>callback</code> \u5728\u7B2C\u4E8C\u6B21 <code>setState</code> \u4E2D\u8ABF\u7528\uFF0C\u9019\u7A2E\u505A\u6CD5\u4E0D\u7528\u7B49\u5230\u72C0\u614B <code>commit</code> \u968E\u6BB5 <code>rerender</code> \u7D50\u675F\uFF0C\u6703\u5728 <code>commit</code> \u72C0\u614B\u524D\u5C31\u4F9D\u5E8F\u57F7\u884C</li></ul></li></ul><p>\u611F\u8B1D\u5927\u5BB6\u89C0\u770B\uFF0C\u4E0B\u7BC7\u6587\u7AE0\u898B\u62C9\u5927\u5BB6!~ =V=</p>`,9),S=n("h2",{id:"\u53C3\u8003",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C3\u8003","aria-hidden":"true"},"#"),s(" \u53C3\u8003")],-1),y={href:"https://stackoverflow.com/a/65757628/10300120",target:"_blank",rel:"noopener noreferrer"};function _(w,j){const t=p("SocialBlock"),e=p("ExternalLinkIcon");return l(),i("div",null,[r,a(t,{hashtags:"react,javascript,useState,setState,promise"}),d,n("p",null,[s("\u55E8~\u5927\u5BB6\u597D\uFF0C\u6211\u662F Johnny\u3002\u6700\u8FD1\u5728\u7814\u7A76 React Hooks \u7684\u4E00\u4E9B\u5E95\u5C64\u6A5F\u5236\uFF0C\u5305\u542B\u50CF\u662F\u72C0\u614B\u66F4\u65B0\u3001\u751F\u547D\u9031\u671F\u3001Hooks \u7684\u6574\u500B\u5275\u5EFA\u5230\u66F4\u65B0\u7684\u6D41\u7A0B(\u76F8\u95DC\u6587\u7AE0\u90FD\u8A18\u9304\u5728"),n("a",k,[s("\u6211\u7684\u95B1\u8B80\u7D00\u9304"),a(e)]),s("\u7684 React \u7AE0\u7BC0\u4E2D)\uFF0C\u800C\u5176\u4E2D\u6700\u8B93\u6211\u611F\u8208\u8DA3\u7684\u662F "),v,s(" \u4E2D\u7684"),m]),b,n("p",null,[s("\u9019\u500B\u505A\u6CD5\u662F\u6839\u64DA"),n("a",f,[s("\u9019\u7BC7\u8A0E\u8AD6"),a(e)]),s("\u4E2D\u63D0\u5230\u7684 "),h,s(" \u4E32\u806F\u7279\u6027\uFF0C\u6BCF\u4E00\u500B setState \u7684 function prevState \u90FD\u5FC5\u7136\u662F\u524D\u9762\u72C0\u614B\u66F4\u65B0\u5F8C\u7684\u56DE\u50B3")]),g,a(t,{hashtags:"react,javascript,useState,setState,promise"}),S,n("ul",null,[n("li",null,[n("a",y,[s("how-to-use-setstate-callback-on-react-hooks"),a(e)])])])])}const C=o(u,[["render",_],["__file","react-use-state.html.vue"]]);export{C as default};
