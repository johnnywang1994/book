import{_ as c,r as o,o as l,c as i,a,b as n,d as s,e as p}from"./app.253724a9.js";const u={},r=n("h1",{id:"vue-vitejs-\u90E8\u5206\u6E90\u78BC\u89E3\u6790",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vue-vitejs-\u90E8\u5206\u6E90\u78BC\u89E3\u6790","aria-hidden":"true"},"#"),s(" Vue/Vitejs \u90E8\u5206\u6E90\u78BC\u89E3\u6790")],-1),k=n("p",null,"\u672C\u7BC7\u662F\u4F5C\u70BA\u81EA\u5DF1\u95B1\u8B80 Vite \u90E8\u5206\u6E90\u78BC\u5F8C\u7684\u4E00\u9EDE\u7B46\u8A18\uFF0C\u4E26\u4E14\u7C21\u55AE\u5BE6\u73FE\u4E00\u500B\u57FA\u65BC ESM \u7684\u6A21\u7D44\u89E3\u6790 server\u3002",-1),d=n("p",null,"\u56E0\u70BA\u5C0F\u5F1F\u672C\u4EBA\u53EA\u6703\u7528 express...\uFF0C\u6240\u4EE5\u672C\u7BC7\u662F\u4EE5 express \u4F86\u642D\u5EFA\uFF0CVite \u5B98\u65B9\u662F\u4F7F\u7528 Koa \u5BE6\u73FE\u3002\u4F46\u61C9\u8A72\u6982\u5FF5\u4E0A\u662F\u5DEE\u4E0D\u591A\u7684\u3002",-1),v=n("p",null,"\u90A3\u5C31\u958B\u59CB\u52D5\u624B\u6E96\u5099 get dirty \u62C9\uFF5E",-1),m=n("h2",{id:"\u524D\u8A00",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u524D\u8A00","aria-hidden":"true"},"#"),s(" \u524D\u8A00")],-1),b=n("p",null,"\u56E0\u70BA\u6709\u95DC ESM \u76F8\u95DC\u6280\u8853\u7684\u8A73\u7D30\u8AAA\u660E\uFF0C\u61C9\u8A72\u5DF2\u7D93\u6709\u8A31\u591A\u5F37\u5927\u7684\u6280\u8853\u5927\u5927\u5011\u5206\u4EAB\u904E\u4E86\uFF0C\u9019\u88E1\u5C31\u4E0D\u8D05\u8FF0\u4E86\uFF0C\u53EA\u7C21\u55AE\u63D0\u4E00\u4E0B\u6982\u5FF5\u3002",-1),g=n("p",null,"\u4EE5\u5F80\u5728\u4F7F\u7528 webpack \u7B49\u69CB\u4EF6\u5DE5\u5177\u6642\uFF0C\u6211\u5011\u6703\u4F7F\u7528\u50CF\u662F Babel \u7B49\u8F49\u8B6F\u7684\u5DE5\u5177\u5C07\u65B0\u7684 es6^ \u8A9E\u6CD5\u8F49\u70BA es5 \u7684 Node cjs \u5BEB\u6CD5\uFF0C\u8B93 nodejs \u5E6B\u52A9\u6211\u5011\u5B8C\u6210\u6A21\u584A\u5316\u7684\u9700\u6C42\uFF0C\u4F46\u5176\u5BE6\u73FE\u4EE3\u700F\u89BD\u5668\u4E2D\uFF0C\u591A\u6578\u5DF2\u7D93\u5177\u5099\u76F4\u63A5\u8B80\u53D6 es6^ \u8A9E\u6CD5\u7684\u80FD\u529B\uFF0C\u5176\u4E2D\u4E5F\u5305\u62EC\u4E86\u65B0\u7684\u6A21\u7D44\u5316\u6280\u8853 ESM\uFF0C\u56E0\u6B64\uFF0C\u50CF\u662F Vite, Snowpack(\u524D\u8EAB\u70BA @pika/web) \u7B49\u7B49\u5DE5\u5177\u5C31\u662F\u4EE5\u700F\u89BD\u5668\u81EA\u8EAB\u7684\u7DE8\u8B6F\u80FD\u529B\u4F86\u5B8C\u6210\u958B\u767C\u74B0\u5883\u7684\u4F7F\u7528",-1),f=n("p",null,"\u4F7F\u7528 webpack \u6642\u5FC5\u9808\u5728\u672C\u6A5F\u5148\u7B49\u7DE8\u8B6F\u5B8C\u6210\u5F8C\u518D\u6253\u958B\u700F\u89BD\u5668\uFF0C\u800C\u900F\u904E\u4F3A\u670D\u5668\u76F4\u63A5\u7DE8\u8B6F\u7684\u65B9\u5F0F\uFF0C\u6703\u5728\u6253\u958B\u700F\u89BD\u5668\u5F8C\u624D\u958B\u59CB\u7DE8\u8B6F\uFF0C\u5DEE\u5225\u5728\u65BC\uFF0C\u7576\u4F3A\u670D\u5668\u7DE8\u8B6F\u5B8C\u6210\u5F8C\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4EA4\u7D66\u700F\u89BD\u5668\u8B80\u53D6\u4E26\u89E3\u6790\uFF0C\u800C\u900F\u904E\u672C\u5730\u7DE8\u8B6F\u7684\u65B9\u5F0F\u5247\u5FC5\u9808\u5728\u6253\u958B\u700F\u89BD\u5668\u5F8C\u518D\u9032\u884C\u4E00\u6B21 webpack \u672C\u8EAB\u7684 map \u4F9D\u8CF4\u8655\u7406\u74B0\u7BC0\uFF0C\u6545\u6548\u7387\u4E0A\u6703\u6709\u4E00\u5B9A\u7684\u5DEE\u8DDD\u3002",-1),y=s("\u5EE2\u8A71\u5C31\u4E0D\u591A\u8AAA\u62C9\uFF38\uFF24\uFF5E\uFF0C\u6709\u8208\u8DA3\u7684\u53EF\u4EE5\u770B\u4E00\u4E0B\u793E\u7FA4 Huli \u5927\u4F6C\u7684\u9019\u7BC7--"),h={href:"https://blog.techbridge.cc/2020/08/07/vite-and-esmodules-snowpack/",target:"_blank",rel:"noopener noreferrer"},w=s("Vite \u600E\u9EBC\u80FD\u90A3\u9EBC\u5FEB\uFF1F\u5F9E ES modules \u958B\u59CB\u8AC7\u8D77"),x=s("\uFF0C\u6211\u5011\u8D95\u5FEB\u958B\u59CB\u5BEB code\uFF01"),_=p(`<h2 id="\u7B2C\u4E00\u6B65-server-\u69CB\u5EFA" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u6B65-server-\u69CB\u5EFA" aria-hidden="true">#</a> \u7B2C\u4E00\u6B65\uFF1AServer \u69CB\u5EFA</h2><p>\u9996\u5148\u5B89\u88DD\u76F8\u95DC\u5DE5\u5177\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">yarn</span> init
$ <span class="token function">yarn</span> <span class="token function">add</span> express nodemon socket.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76EE\u9304\u7D50\u69CB\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>--public
--server
  --import
    --path
      --vue.js
      --react.js
    --reader
      --readIndex.js
      --readESInit.js
      --readModule.js
      --readNodeModules.js
      --readStyle.js
      --readUrl.js
      --readVueComponent.js
    --index.js
    --utils.js
  --app.js
  --www.js
  --config.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5EFA\u7ACB app.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> io <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;socket.io&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>http<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">CONFIGS</span><span class="token punctuation">,</span> resolveRoot <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// static files</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token function">resolveRoot</span><span class="token punctuation">(</span><span class="token constant">CONFIGS</span><span class="token punctuation">.</span>static <span class="token operator">||</span> <span class="token string">&#39;./public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// hot reload watch</span>
io<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;connection&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;ES module hot-reload on watching...&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token parameter">port</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  http<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Server on port: &#39;</span> <span class="token operator">+</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> io<span class="token punctuation">,</span> listen <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5EFA\u7ACB config.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> __ROOT <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> __NODE_MODULES <span class="token operator">=</span> <span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> __MODULE <span class="token operator">=</span> <span class="token string">&#39;/@modules/&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">CONFIGS</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token function">resolveRoot</span><span class="token punctuation">(</span><span class="token string">&#39;./es.config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// resolve path from root</span>
<span class="token keyword">function</span> <span class="token function">resolveRoot</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__ROOT<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token comment">// resolve path from node_modules</span>
<span class="token keyword">function</span> <span class="token function">resolveModules</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__ROOT<span class="token punctuation">,</span> __NODE_MODULES<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  __ROOT<span class="token punctuation">,</span>
  __MODULE<span class="token punctuation">,</span>
  <span class="token constant">CONFIGS</span><span class="token punctuation">,</span>
  resolveRoot<span class="token punctuation">,</span>
  resolveModules<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5EFA\u7ACB www.js(nodejs \u555F\u52D5\u6A94)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> listen <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> importMiddleware <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./import&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> resolveRoot <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> port <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">||</span> <span class="token number">8080</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;port&#39;</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// import middleware \u4E2D\u8A2D\u5B9A\u6240\u6709\u6A94\u6848\u8B80\u53D6\u7684\u898F\u5247</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>importMiddleware<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u9019\u88E1\u53EF\u4EE5\u8B93\u5F8C\u7E8C\u5C0D /src \u958B\u982D\u7684\u5716\u7247\u8ACB\u6C42\u9806\u5229\u62FF\u5230\u6A94\u6848</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/src&#39;</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token function">resolveRoot</span><span class="token punctuation">(</span><span class="token string">&#39;./src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C\u4E8C\u6B65-import-middleware-\u69CB\u5EFA" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u6B65-import-middleware-\u69CB\u5EFA" aria-hidden="true">#</a> \u7B2C\u4E8C\u6B65\uFF1Aimport middleware \u69CB\u5EFA</h2><p>\u9019\u88E1\u4E3B\u8981\u662F\u4EE5\u985E\u4F3C webpack \u7684 rules \u7684\u8655\u7406\u65B9\u5F0F\u4F86\u5B9A\u7FA9\u6240\u6709 import \u6A94\u6848\u7684\u8ACB\u6C42\u8655\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> testRules <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token comment">// ...rules</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">importFile</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> url <span class="token punctuation">}</span> <span class="token operator">=</span> req<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>testRules<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">test</span><span class="token operator">:</span> rule<span class="token punctuation">,</span> loader <span class="token punctuation">}</span> <span class="token operator">=</span> testRules<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// match string</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> rule <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">&amp;&amp;</span> url <span class="token operator">===</span> rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">loader</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// match regexp</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> rule <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> rule<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">loader</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^.]\\.{1}[\\w+\\.]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// default use .js file</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">readModule</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">importMiddleware</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> data<span class="token punctuation">;</span>
  <span class="token comment">// handle file</span>
  data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">importFile</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// return content</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// pass to native browser</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> importMiddleware<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C\u4E09\u6B65-rules-\u8655\u7406" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u6B65-rules-\u8655\u7406" aria-hidden="true">#</a> \u7B2C\u4E09\u6B65\uFF1ARules \u8655\u7406</h2><p>\u5728 index.js \u4E2D\u4F9D\u5E8F\u6DFB\u52A0\u5982\u4E0B\u8655\u7406\u898F\u5247</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> testRules <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token comment">// \u8655\u7406 index.html</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">loader</span><span class="token operator">:</span> readIndex<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8655\u7406 js \u4E2D\u7684 import images</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/@url</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">loader</span><span class="token operator">:</span> readUrl<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8655\u7406 js \u521D\u59CB\u5316\u6587\u4EF6</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/esinit$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">loader</span><span class="token operator">:</span> readESInit<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8655\u7406 node_modules</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/@modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">loader</span><span class="token operator">:</span> readNodeModules<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8655\u7406 styles</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s?css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">loader</span><span class="token operator">:</span> readStyle<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8655\u7406 vue single file</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.vue</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">loader</span><span class="token operator">:</span> readVueComponent<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="readindex" tabindex="-1"><a class="header-anchor" href="#readindex" aria-hidden="true">#</a> readIndex</h3><p>\u9996\u5148\u8981\u8655\u7406\u9996\u9801\u5165\u53E3\u8B80\u53D6\uFF0C\u9019\u662F\u5168\u90E8\u7684\u8D77\u59CB\u9EDE\uFF01\u5FC5\u9808\u5C07\u4E00\u4E9B\u5468\u908A\u8A2D\u5B9A\u5728\u9019\u968E\u6BB5\u6CE8\u5165\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> watchFile<span class="token punctuation">,</span> fileExists <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Read entry file
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">req</span> 
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">res</span> 
 */</span>
<span class="token keyword">function</span> <span class="token function">readIndex</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text/html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token string">&#39;./index.html&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// check file exist</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fileExists</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// watch file, if file change will trigger socket to client reloading</span>
    <span class="token function">watchFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// inject socket into template</span>
    <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token string">&#39;&lt;script crossorigin src=&quot;https://cdn.socket.io/socket.io-2.3.0.js&quot;&gt;&lt;/script&gt;&#39;</span><span class="token punctuation">;</span>
    <span class="token comment">// inject init script as module</span>
    code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n&lt;script type=&quot;module&quot; src=&quot;/esinit&quot;&gt;&lt;/script&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\n&lt;script &#39;</span><span class="token punctuation">;</span>
    <span class="token comment">// set process for browser</span>
    <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;script &#39;</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> readIndex<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="readesinit" tabindex="-1"><a class="header-anchor" href="#readesinit" aria-hidden="true">#</a> readESInit</h3>`,21),q=s("\u9019\u88E1\u8655\u7406\u81EA\u5B9A\u7FA9\u7684\u8DEF\u5F91 "),j=n("code",null,"/esinit",-1),V=s(" \u4F86\u9032\u884C socket.io \u7684\u521D\u59CB\u5316\u53CA\u5F8C\u7E8C\u8655\u7406\u7B49\u7B49\uFF0C\u9019\u908A\u70BA\u6C42\u65B9\u4FBF\u5C31\u53EA\u76F4\u63A5 reload page\uFF0C\u5BE6\u969B Vite \u5728\u9019\u88E1\u4E0B\u5F88\u591A\u5DE5\u592B\uFF0C\u53EF\u4EE5\u53C3\u8003 "),P={href:"https://github.com/vitejs/vite/blob/master/src/node/server/serverPluginHmr.ts",target:"_blank",rel:"noopener noreferrer"},S=s("Vite: How HMR works"),C=p(`<p>\u56E0\u70BA Vue \u5167\u90E8\u9700\u8981\u7528\u5230 p<wbr>rocess.env\uFF0C\u9019\u88E1\u53EA\u7C21\u55AE\u63D2\u5165\u5230 window \u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">CONFIGS</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Init ES settings
 */</span>
<span class="token keyword">function</span> <span class="token function">readESInit</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/javascript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Vue will need p<wbr>rocess.env</span>
  <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token string">&#39;window.process = {env:{ NODE_ENV: &quot;dev&quot;}};&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// check if need hotreload</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CONFIGS</span><span class="token punctuation">.</span>hmr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nconst socket = io();&#39;</span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nsocket.on(&quot;init&quot;, (msg) =&gt; console.log(msg));&#39;</span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nsocket.on(&quot;update&quot;, () =&gt; window.location.reload());&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> code<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> readESInit<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="readmodule" tabindex="-1"><a class="header-anchor" href="#readmodule" aria-hidden="true">#</a> readModule</h3><p>\u63A5\u8457\u4F86\u8655\u7406\u6700\u57FA\u672C\u7684 <code>.js</code> \u6A94\u6848\uFF0C\b\u9019\u88E1\u4E3B\u8981\u5FC5\u9808\u505A\u5E7E\u4EF6\u4E8B\uFF0C\u9664\u4E86\u5C07\u57FA\u672C\u7684\u6A94\u6848\u8B80\u53D6\u4E4B\u5916\uFF0C\u8981\u53E6\u5916\u8655\u7406\u50CF\u662F <code>import Vue from &#39;vue&#39;</code> \u9019\u7A2E\u5BEB\u6CD5\uFF0C\u56E0\u70BA\u539F\u751F ESM \u662F\u53EA\u80FD\u8655\u7406\u8DEF\u5F91\u50CF\u662F <code>./</code>, <code>/</code> \u9019\u7A2E\uFF0C\u9019\u88E1\u6211\u5011\u7528\u6B63\u5247\u4F86\u66FF\u63DB\u9019\u7A2E\u5BEB\u6CD5\uFF0C\u5C07\u5176\u5C0E\u5F15\u81F3\u6211\u5011\u5B9A\u7FA9\u7684 <code>/@modules/</code> \u958B\u982D\uFF0C\u4E26\u5728\u5F8C\u7E8C\u8655\u7406\u4ED6</p><blockquote><p>\u9019\u88E1\u5982\u679C\u76F4\u63A5\u628A\u4ED6\u8F49\u6210 /node_modules \u958B\u982D\u800C\u4E0D\u53E6\u5916\u8655\u7406\u7684\u8A71\u6703\u6709\u8CC7\u6599\u593E\u8DEF\u5F91\u7B49\u7B49\u66F4\u8907\u96DC\u7684\u554F\u984C\uFF0C\u900F\u904E\u8F49\u6210\u6211\u5011\u81EA\u5B9A\u7FA9\u7684\u8DEF\u5F91\uFF0C\u53EF\u4EE5\u66F4\u65B9\u4FBF\u7684\u8655\u7406\u3002</p></blockquote><p>\u9019\u88E1\u9700\u8981\u5B89\u88DD <code>@babel/core @babel/plugin-transform-react-jsx</code> \u4F86\u8655\u7406 react \u7684 jsx\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">CONFIGS</span><span class="token punctuation">,</span> resolveRoot <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>
  watchFile<span class="token punctuation">,</span>
  fileExists<span class="token punctuation">,</span>
  rewriteImport
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> babelCore<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Import Local Module
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">req</span> 
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">res</span> 
 */</span>
<span class="token keyword">function</span> <span class="token function">readModule</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> url <span class="token punctuation">}</span><span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/javascript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token function">resolveRoot</span><span class="token punctuation">(</span>
    <span class="token comment">// use .js by default</span>
    <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^.]\\.{1}[\\w+\\.]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token operator">?</span> url <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fileExists</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">watchFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// here we only compile user module for jsx</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CONFIGS</span><span class="token punctuation">.</span>jsx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      babelCore <span class="token operator">=</span> babelCore <span class="token operator">||</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@babel/core&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> babelCore<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/plugin-transform-react-jsx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// match &amp; rewrite import path</span>
      <span class="token keyword">return</span> <span class="token function">rewriteImport</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">rewriteImport</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> readModule<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>rewriteImport</code> \u9577\u7684\u5927\u6982\u50CF\u9019\u6A23\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>
  __MODULE<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// rewrite matched path to /@modules/</span>
<span class="token keyword">function</span> <span class="token function">rewriteImport</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> filePath</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">from [&#39;&quot;]([^&#39;&quot;]+)[&#39;&quot;]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s0<span class="token punctuation">,</span> s1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// . ../ /</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">&amp;&amp;</span> s1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">from &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>__MODULE <span class="token operator">+</span> s1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|svg)(\\?.*)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// \u53D6\u4EE3 import image</span>
      <span class="token keyword">const</span> base <span class="token operator">=</span> path<span class="token punctuation">.</span>posix<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">from &#39;/@url?path=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span> s1<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> s0<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="readnodemodules" tabindex="-1"><a class="header-anchor" href="#readnodemodules" aria-hidden="true">#</a> readNodeModules</h3><p>\u9019\u500B rule \u4E3B\u8981\u8CA0\u8CAC\u5C0D <code>node_modules</code> \u7684\u4F9D\u8CF4\u8655\u7406\uFF0C\u4E5F\u5C31\u662F\u4E0A\u4E00\u6B65\u88AB\u6539\u5BEB\u6210 <code>/@modules/</code> \u958B\u982D\u7684\u8DEF\u5F91\u8655\u7406\u3002\u9019\u4E00\u6B65\u6703\u9047\u5230\u500B\u554F\u984C\uFF0C\u5C31\u662F\u5404\u500B package \u5C0D\u65BC\u81EA\u5DF1 esm \u6A21\u7D44\u7684\u5F15\u5165\u4F4D\u7F6E\u90FD\u662F\u4E0D\u4E00\u5B9A\u7684\uFF0C\u53EF\u80FD\u6703\u9700\u8981\u500B\u5225\u8655\u7406\uFF0C\u4F8B\u5982 Vue2 \u7684\u539F\u751F\u700F\u89BD\u5668 esm \u6A21\u7D44\u8DEF\u5F91\u4E26\u4E0D\u662F\u5728 <code>package.json</code> \u7684 <code>module</code> \u8DEF\u5F91\u4E0B\uFF0C\u9019\u88E1\u6211\u5011\u53E6\u5916\u7528 <code>handleModulePath</code> \u8655\u7406\u6A21\u7D44\u771F\u5BE6\u8DEF\u5F91\uFF0C\u91DD\u5C0D\u500B\u5225\u5957\u4EF6\u53BB\u5224\u65B7\uFF08\u7576\u7136\u524D\u63D0\u662F\u5982\u679C\u6709\u9700\u8981\uFF09\uFF0C\u6211\u5011\u7D66\u4ED6\u9810\u8A2D\u60C5\u6CC1\u4E0B\u4F7F\u7528 <code>module</code> \u6216\u662F <code>main</code> \u7684\u6A21\u7D44\u3002</p><p>\u53E6\u5916\u56E0\u70BA\u8A31\u591A node_modules \u4E2D\u7684\u5957\u4EF6\u662F\u7D93\u904E\u7DE8\u8B6F\u7684 es5 \u683C\u5F0F\uFF0C\u5728\u5F15\u5165\u6642\u6703\u5674\u932F\uFF0C\u9019\u88E1\u4F7F\u7528 <code>lebab</code> \u5957\u4EF6\u4F86\u5C07 es5 \u7684\u6A21\u7D44\u5BEB\u6CD5\u8F49\u70BA es6\uFF0C\u8B93\u700F\u89BD\u5668\u53EF\u4EE5\u7406\u89E3\u3002</p><blockquote><p>\u9019\u88E1\u8981\u5B89\u88DD <code>lebab</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> transform <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lebab&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>
  __MODULE<span class="token punctuation">,</span>
  <span class="token constant">CONFIGS</span><span class="token punctuation">,</span>
  resolveModules<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>
  fileExists<span class="token punctuation">,</span>
  rewriteImport<span class="token punctuation">,</span>
  handleModulePath<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Import Modules from node_modules
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">req</span> 
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">res</span> 
 */</span>
<span class="token keyword">function</span> <span class="token function">readNodeModules</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> url <span class="token punctuation">}</span><span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/javascript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> prefix <span class="token operator">=</span> <span class="token function">resolveModules</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>__MODULE<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// get filepath</span>
  <span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token function">handleModulePath</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fileExists</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// auto es5 =&gt; es6 by lebab</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CONFIGS</span><span class="token punctuation">.</span>autoTransform<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data <span class="token operator">=</span> <span class="token function">transform</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;commonjs&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>code<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// node_modules dep import</span>
    <span class="token keyword">return</span> <span class="token function">rewriteImport</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> readNodeModules<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8655\u7406 filePath</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">handleModulePath</span><span class="token punctuation">(</span><span class="token parameter">prefix</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&#39;/package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> modulePath<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pkg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> isVuePath <span class="token operator">=</span> <span class="token function">checkVuePath</span><span class="token punctuation">(</span>pkg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> isReactPath <span class="token operator">=</span> <span class="token function">checkReactPath</span><span class="token punctuation">(</span>pkg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isVuePath<span class="token punctuation">)</span> <span class="token punctuation">{</span> modulePath <span class="token operator">=</span> isVuePath<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isReactPath<span class="token punctuation">)</span> <span class="token punctuation">{</span> modulePath <span class="token operator">=</span> isReactPath<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token constant">CONFIGS</span><span class="token punctuation">.</span>checkModulePath <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> customPath <span class="token operator">=</span> <span class="token constant">CONFIGS</span><span class="token punctuation">.</span><span class="token function">checkModulePath</span><span class="token punctuation">(</span>pkg<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>customPath<span class="token punctuation">)</span> modulePath <span class="token operator">=</span> customPath<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9810\u8A2D\u7D66\u4ED6 pkg.module or pkg.main</span>
    <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>prefix<span class="token punctuation">,</span> modulePath <span class="token operator">||</span> pkg<span class="token punctuation">.</span>module <span class="token operator">||</span> pkg<span class="token punctuation">.</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="readstyle" tabindex="-1"><a class="header-anchor" href="#readstyle" aria-hidden="true">#</a> readStyle</h3><p>\u63A5\u8457\u8981\u8655\u7406\u4E0B styles \u7B49 css \u7684\u5F15\u5165\uFF0C\u9019\u88E1\u50C5\u793A\u610F\u4F7F\u7528 scss \u4F5C\u70BA\u9810\u8655\u7406\u5668\u3002</p><p>\u9700\u8981\u5B89\u88DD <code>node-sass</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sass <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node-sass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> resolveRoot <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>
  watchFile<span class="token punctuation">,</span>
  fileExists<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Import Styles
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">param0</span> 
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">res</span> 
 */</span>
<span class="token keyword">function</span> <span class="token function">readStyle</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> url <span class="token punctuation">}</span><span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/javascript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token function">resolveRoot</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fileExists</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">watchFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// sass compile</span>
    data <span class="token operator">=</span> sass<span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>css<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s{2,}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// inject</span>
    <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">const cssText = &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nconst head = document.head;&#39;</span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nconst style = document.createElement(&quot;style&quot;);&#39;</span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nstyle.setAttribute(&quot;type&quot;, &quot;text/css&quot;);&#39;</span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nstyle.innerHTML = cssText;&#39;</span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nhead.insertBefore(style, head.querySelector(&quot;style&quot;));&#39;</span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nexport default cssText;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> code<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> readStyle<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="readurl" tabindex="-1"><a class="header-anchor" href="#readurl" aria-hidden="true">#</a> readUrl</h3><p>\u9019\u88E1\u8655\u7406 import image\uFF0C\u4E5F\u5C31\u662F\u88AB\u6211\u5011\u4EE5 <code>/@url?path=XXX</code> \u53D6\u4EE3\u7684\u683C\u5F0F\uFF0C\u9019\u88E1\u6703\u5C07\u771F\u5BE6\u8DEF\u5F91\u900F\u904E /src \u958B\u982D\u8FD4\u56DE\uFF0C\u4E5F\u5C31\u80FD\u505A\u5230\u4EE5\u76F8\u5C0D\u8DEF\u5F91\u5F15\u5165\u3002</p><blockquote><p>\u6CE8\u610F\u5594\uFF01\uFF01\u9019\u88E1\u53E6\u5916\u4EE5 <code>/@url</code> \u8655\u7406\u662F\u70BA\u4E86\u8207\u539F\u4F86\u7684\u8ACB\u6C42\u5340\u5225\u958B\u4F86\uFF0C\u9019\u6A23\u5C31\u53EF\u4EE5\u5B8C\u6210\u50CF\u662F <code>react</code> \u5728 js \u4E2D\u9032\u884C image \u7684\u5F15\u5165\u8207\u6CE8\u5165\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">readUrl</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> query <span class="token punctuation">}</span><span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/javascript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">export default &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>query<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> readUrl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5BE6\u5230\u9019\u908A\u5DF2\u7D93\u53EF\u4EE5\u4F7F\u7528 react \u4E86\uFF5E\uFF5E\uFF0C\u53EA\u662F\u8981\u8A18\u5F97\u5B89\u88DD <code>@pika/react @pika/react-dom</code></p><p>react path\u8655\u7406\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> __REACT <span class="token operator">=</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> __REACT_DOM <span class="token operator">=</span> <span class="token string">&#39;react-dom&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">isReact</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pkg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> pkg<span class="token punctuation">.</span>name <span class="token operator">===</span> __REACT<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">isReactDom</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pkg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> pkg<span class="token punctuation">.</span>name <span class="token operator">===</span> __REACT_DOM<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">checkReactPath</span><span class="token punctuation">(</span><span class="token parameter">pkg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReact</span><span class="token punctuation">(</span>pkg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;../@pika/react/source.development.js&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReactDom</span><span class="token punctuation">(</span>pkg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;../@pika/react-dom/source.development.js&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// give default path</span>
  <span class="token comment">// first get .module, then .main</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> checkReactPath<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="readvuecomponent" tabindex="-1"><a class="header-anchor" href="#readvuecomponent" aria-hidden="true">#</a> readVueComponent</h3>`,28),M=s("\u524D\u9762\u90FD\u9084\u7B97\u597D\u7406\u89E3\uFF0C\u63A5\u4E0B\u4F86\u7684\u53CD\u800C\u662F\u6574\u500B\u90E8\u5206\u6700\u9EBB\u7169\u7684\uFF38\uFF24\uFF0C\u56E0\u70BA \uFF36ue \u672C\u8EAB\u6709\u7368\u7279\u7684 Single File Component\uFF0C\u4E5F\u5C31\u5FC5\u9808\u7528\u5230 Vue \u81EA\u8EAB\u63D0\u4F9B\u7684\u7DE8\u8B6F\u5DE5\u5177\u4F86\u9032\u884C\uFF0C\u597D\u5728 Vue \u7684\u76F8\u95DC\u7DE8\u8B6F\u5DE5\u5177\u90FD\u6709\u5F88\u5145\u5206\u7684\u4F7F\u7528\u8AAA\u660E\uFF0C\u8B93\u61F6\u4EBA\u5982\u6211\u4E5F\u80FD\u5FEB\u901F\u4F7F\u7528\u3002\u9019\u88E1\u6E90\u78BC\u5206\u5225\u53C3\u8003\u81EA "),R={href:"https://github.com/vitejs/vite/blob/master/src/node/server/serverPluginVue.ts",target:"_blank",rel:"noopener noreferrer"},F=s("Vite: serverPluginVue"),E=s("\u3001"),I={href:"https://github.com/vuejs/vue-loader/blob/master/lib/loaders/templateLoader.js",target:"_blank",rel:"noopener noreferrer"},O=s("Vue Loader: templateLoader"),T=s("\u4EE5\u53CA"),N={href:"https://github.com/vuejs/vue-loader/blob/master/lib/index.js",target:"_blank",rel:"noopener noreferrer"},U=s("Vue Loader: Parser"),$=p(`<h4 id="vue3-compile" tabindex="-1"><a class="header-anchor" href="#vue3-compile" aria-hidden="true">#</a> Vue3 Compile</h4><p>\u9019\u88E1\u6211\u5011\u5148\u8655\u7406 Vue-next \u7248\u672C\u7684\u7DE8\u8B6F\u5427\uFF5E</p><p>\u9019\u88E1\u9700\u5B89\u88DD\u4F7F\u7528 <code>hash-sum lru-cache</code> \u4F86\u88FD\u4F5C scoped \u7684 hash \u8207 Cache\u3002</p><p>\u770B\u4E00\u4E0B utils\uFF5E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// utils</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> LRUCache <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lru-cache&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> io <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>
  __MODULE<span class="token punctuation">,</span>
  <span class="token constant">CONFIGS</span><span class="token punctuation">,</span>
  resolveRoot<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> VueCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LRUCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">65535</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> watchedFileMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// cache watched file&#39;s name</span>

<span class="token comment">// watch config file</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CONFIGS</span><span class="token punctuation">.</span>hmr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">watchFile</span><span class="token punctuation">(</span><span class="token function">resolveRoot</span><span class="token punctuation">(</span><span class="token string">&#39;./es.config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// watch file change</span>
<span class="token keyword">function</span> <span class="token function">watchFile</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> localP</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">CONFIGS</span><span class="token punctuation">.</span>hmr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>watchedFileMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  watchedFileMap<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
  fs<span class="token punctuation">.</span><span class="token function">watchFile</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">interval</span><span class="token operator">:</span> <span class="token constant">CONFIGS</span><span class="token punctuation">.</span>hmr<span class="token punctuation">.</span>interval <span class="token operator">||</span> <span class="token number">2000</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      VueCache<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>localP<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    io<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u8005\u8655\u7406\u6B63\u6587</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sass <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node-sass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> hash_sum <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;hash-sum&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span>
  resolveRoot<span class="token punctuation">,</span>
  resolveModules<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>
  VueCache<span class="token punctuation">,</span>
  watchFile<span class="token punctuation">,</span>
  fileExists<span class="token punctuation">,</span>
  rewriteImport<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> Vue3CompilerSfc<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Import Vue Single File
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">req</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">res</span> 
 */</span>
<span class="token keyword">function</span> <span class="token function">readVueComponent</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> url<span class="token punctuation">,</span> query <span class="token punctuation">}</span><span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/javascript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token function">resolveRoot</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">fileExists</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">watchFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">// compile for different version of Vue</span>
  <span class="token keyword">let</span> code<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkVueVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    code <span class="token operator">=</span> <span class="token function">compileVue2</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data<span class="token punctuation">,</span> query<span class="token punctuation">,</span> url <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkVueVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    code <span class="token operator">=</span> <span class="token function">compileVue3</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data<span class="token punctuation">,</span> query<span class="token punctuation">,</span> url <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> code<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Compile for Vue-next
 */</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">compileVue3</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> query<span class="token punctuation">,</span> url <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> filePath <span class="token operator">=</span> <span class="token function">getVueFilePath</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// parseSFC =&gt; get descriptor</span>
  <span class="token keyword">const</span> descriptor <span class="token operator">=</span> <span class="token function">parseSFC</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// normal</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>query<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// get main file of .vue</span>
    <span class="token comment">// import render function then inject to scripts</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">compileSFCMain</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> code<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// template</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// get cached</span>
    <span class="token keyword">const</span> cached <span class="token operator">=</span> VueCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// get bindings to compile template</span>
    <span class="token keyword">const</span> bindingMetadata <span class="token operator">=</span> cached <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>script <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>script<span class="token punctuation">.</span>bindings<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">compileSFCTemplate</span><span class="token punctuation">(</span>
      descriptor<span class="token punctuation">.</span>template<span class="token punctuation">,</span>
      filePath<span class="token punctuation">,</span>
      descriptor<span class="token punctuation">.</span>styles<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span>scoped<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// scoped or not</span>
      bindingMetadata<span class="token punctuation">,</span> <span class="token comment">// bindings will indicate the data type</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> code<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// style</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> styleRaw <span class="token operator">=</span> descriptor<span class="token punctuation">.</span>styles<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> styleRaw<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">compileSFCStyle</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> styleRaw<span class="token punctuation">.</span>scoped<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">vueStyle</span><span class="token punctuation">(</span>
      style<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      styleRaw<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>lang<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// parse for descriptor</span>
<span class="token keyword">function</span> <span class="token function">parseSFC</span><span class="token punctuation">(</span><span class="token parameter">filePath<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// get cached</span>
  <span class="token keyword">let</span> cached <span class="token operator">=</span> VueCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cached <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>descriptor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cached<span class="token punctuation">.</span>descriptor<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// no cache, then compile</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Vue3CompilerSfc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Vue3CompilerSfc <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@vue/compiler-sfc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> parse <span class="token punctuation">}</span> <span class="token operator">=</span> Vue3CompilerSfc<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> descriptor <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> filePath<span class="token punctuation">,</span>
    <span class="token literal-property property">sourceMap</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// set cache</span>
  cached <span class="token operator">=</span> cached <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">customs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached<span class="token punctuation">.</span>descriptor <span class="token operator">=</span> descriptor<span class="token punctuation">;</span>
  VueCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> cached<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> descriptor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">compileSFCMain</span><span class="token punctuation">(</span><span class="token parameter">descriptor<span class="token punctuation">,</span> filePath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cached <span class="token operator">=</span> VueCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cached <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>script<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cached<span class="token punctuation">.</span>script<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// hash id</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">hash_sum</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> map<span class="token punctuation">;</span>
  <span class="token keyword">let</span> script <span class="token operator">=</span> descriptor<span class="token punctuation">.</span>script<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span>script <span class="token operator">||</span> descriptor<span class="token punctuation">.</span>scriptSetup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// compile for script</span>
    script <span class="token operator">=</span> Vue3CompilerSfc<span class="token punctuation">.</span><span class="token function">compileScript</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>script<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    content <span class="token operator">=</span> script<span class="token punctuation">.</span>content<span class="token punctuation">;</span>
    map <span class="token operator">=</span> script<span class="token punctuation">.</span>map<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// rewrite import path</span>
  code <span class="token operator">+=</span> <span class="token function">rewriteImport</span><span class="token punctuation">(</span>
    content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;export default &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;const __script = &#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    filePath<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> hasScoped <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token comment">// import styles</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span>styles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    descriptor<span class="token punctuation">.</span>styles<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\nimport &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?type=style&amp;index=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>scoped<span class="token punctuation">)</span> hasScoped <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasScoped<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n__script.__scopeId = &quot;data-v-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// import template</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\nimport { render as __render } from &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?type=template&#39;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\n__script.render = __render;&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  code <span class="token operator">+=</span> <span class="token string">&#39;\\nexport default __script;&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// result</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span>
    code<span class="token punctuation">,</span>
    map<span class="token punctuation">,</span>
    <span class="token literal-property property">bindings</span><span class="token operator">:</span> script <span class="token operator">?</span> script<span class="token punctuation">.</span>bindings <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached <span class="token operator">=</span> cached <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">customs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached<span class="token punctuation">.</span>script <span class="token operator">=</span> result<span class="token punctuation">;</span>
  VueCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> cached<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">compileSFCTemplate</span><span class="token punctuation">(</span><span class="token parameter">template<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> scoped<span class="token punctuation">,</span> bindings</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cached <span class="token operator">=</span> VueCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cached <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cached<span class="token punctuation">.</span>template<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compileTemplate <span class="token punctuation">}</span> <span class="token operator">=</span> Vue3CompilerSfc<span class="token punctuation">;</span>
  <span class="token comment">// hash id</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">hash_sum</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// compile template to render function</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> code<span class="token punctuation">,</span> map <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">compileTemplate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">source</span><span class="token operator">:</span> template<span class="token punctuation">.</span>content<span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> filePath<span class="token punctuation">,</span>
    <span class="token literal-property property">inMap</span><span class="token operator">:</span> template<span class="token punctuation">.</span>map<span class="token punctuation">,</span>
    <span class="token literal-property property">transformAssetUrls</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">base</span><span class="token operator">:</span> path<span class="token punctuation">.</span>posix<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// assetsUrl handling</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">compilerOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">scopeId</span><span class="token operator">:</span> scoped <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">data-v-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// scoped id format</span>
      <span class="token literal-property property">bindingMetadata</span><span class="token operator">:</span> bindings<span class="token punctuation">,</span> <span class="token comment">// bindings for setup data</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// result</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token function">rewriteImport</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">,</span>
    map<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached <span class="token operator">=</span> cached <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">customs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached<span class="token punctuation">.</span>template <span class="token operator">=</span> result<span class="token punctuation">;</span>
  VueCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> cached<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">compileSFCStyle</span><span class="token punctuation">(</span><span class="token parameter">style<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> scoped<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cached <span class="token operator">=</span> VueCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cached <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>styles <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>styles<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cached<span class="token punctuation">.</span>styles<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compileStyleAsync <span class="token punctuation">}</span> <span class="token operator">=</span> Vue3CompilerSfc<span class="token punctuation">;</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">hash_sum</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// compile for style code (with scoped id)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">compileStyleAsync</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">source</span><span class="token operator">:</span> style<span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">data-v-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    scoped<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> code<span class="token punctuation">;</span>
  cached <span class="token operator">=</span> cached <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">customs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached<span class="token punctuation">.</span>styles<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">;</span>
  VueCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> cached<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// check Vue&#39;s version from node_modules</span>
<span class="token keyword">function</span> <span class="token function">checkVueVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> prefix <span class="token operator">=</span> <span class="token function">resolveModules</span><span class="token punctuation">(</span><span class="token string">&#39;./vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&#39;/package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pkg<span class="token punctuation">.</span>version<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;2.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pkg<span class="token punctuation">.</span>version<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;3.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getVueFilePath</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">vueStyle</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> preprocess</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>preprocess <span class="token operator">===</span> <span class="token string">&#39;scss&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    content <span class="token operator">=</span> sass<span class="token punctuation">.</span><span class="token function">renderSync</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> content <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>css<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s{2,}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">const css = &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\nconst __style = document.createElement(&quot;style&quot;);&#39;</span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\n__style.setAttribute(&quot;type&quot;, &quot;text/css&quot;);&#39;</span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n__style.innerHTML = &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    code <span class="token operator">+=</span> <span class="token string">&#39;\\ndocument.head.appendChild(__style);&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  code <span class="token operator">+=</span> <span class="token string">&#39;\\nexport default css;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> code<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u597D\u7684\uFF0C\u770B\u5230\u9019\u88E1\u7684\u4F60\u771F d \u5F88\u68D2\uFF38\uFF24\uFF0C\u4EE5\u4E0A\u53EA\u662F\u5F9E\u6E90\u78BC\u4E2D\u62BD\u53D6\u5FC5\u8981\u7684\u904E\u7A0B\u800C\u5DF2\uFF0C\u5BE6\u969B\u6E90\u78BC\u9084\u6709\u8655\u7406\u5F88\u591A features\uFF0C\u9019\u88E1\u50C5\u5C07\u4E3B\u8981\u7684\u6D41\u7A0B\u5448\u73FE\u51FA\u4F86\u3002</p><p>\u4F60\u4EE5\u70BA\u9019\u6A23\u5C31\u7D50\u675F\u4E86\u55CE\uFF1F\u6211\u5011\u9084\u6709 Vue2 \u9700\u8981\u8655\u7406...\uFF0C\u9019\u90E8\u5206\u56E0\u70BA\u76EE\u524D Vite \u672C\u8EAB\u6C92\u6709\u7279\u5225\u5411\u4E0B\u76F8\u5BB9\u8655\u7406\u4ED6\uFF0C\u4EE5\u4E0B\u90E8\u5206\u50C5\u5C6C\u65BC\u672C\u4EBA\u8166\u6D1E\u7248\u672C\uFF0C\u4E5F\u5C31\u662F\u4EE5\u76EE\u524D Vite \u7684\u8655\u7406\u65B9\u5F0F\uFF0C\u7D50\u5408 Vue-Loader \u7684\u6E90\u78BC\u62FC\u6E4A\u800C\u6210\u3002</p><p>\u5982\u679C\u4F60\u5C0D Vue2 \u7684\u5BE6\u73FE\u4E5F\u6709\u8208\u8DA3\u7684\u8A71\uFF0C\u4E5F\u6B61\u8FCE\u8B93\u6211\u5011\u7E7C\u7E8C\u770B\u4E0B\u53BB...</p><h4 id="vue2-compile" tabindex="-1"><a class="header-anchor" href="#vue2-compile" aria-hidden="true">#</a> Vue2 Compile</h4><p>\u5176\u5BE6\u4E3B\u8981\u69CB\u5EFA\u6D41\u7A0B\u662F\u975E\u5E38\u76F8\u4F3C\u7684\uFF0C\u53EA\u662F\u90E8\u5206\u5730\u65B9\u6709\u9EDE\u4E0D\u540C\uFF0C\u9019\u90E8\u5206\u9700\u8981\u518D\u5B89\u88DD\u5169\u500B\u4E3B\u8981\u5DE5\u5177 <code>vue-template-compiler</code>, <code>@vue/component-compiler-utils</code> \u9019\u5169\u6A23\uFF0C\u5176\u4E2D\u4E3B\u8981\u4EE5\u5F8C\u8005\u9032\u884C\u4F7F\u7528\uFF0C\u800C\u524D\u8005\u50C5\u4F5C\u70BA\u5F8C\u8005\u7684\u7DE8\u8B6F\u5668\u90E8\u5206\u4F7F\u7528\uFF0C\u9019\u90E8\u5206\u662F\u56E0\u70BA Vue2 \u7684 Compiler \u662F\u53EF\u4EE5\u81EA\u5B9A\u7FA9\u8655\u7406\u7684\uFF0C\u4E5F\u56E0\u6B64\u5C07\u5176\u4F5C\u70BA\u7368\u7ACB\u7684\u6A21\u7D44\u4F86\u5F15\u5165\u3002</p><p>\u4EE3\u78BC\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9019\u90E8\u5206\u57FA\u672C\u8DDF Vue3 \u7684\u4E00\u6A23</span>
<span class="token keyword">function</span> <span class="token function">compileVue2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> query<span class="token punctuation">,</span> url <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> filePath <span class="token operator">=</span> <span class="token function">getVueFilePath</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// parse for descriptor</span>
  <span class="token keyword">const</span> descriptor <span class="token operator">=</span> <span class="token function">parseVue2SFC</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// normal</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>query<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">compileVue2SFCMain</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> code<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">compileVue2Template</span><span class="token punctuation">(</span>
      descriptor<span class="token punctuation">.</span>template<span class="token punctuation">,</span>
      filePath<span class="token punctuation">,</span>
      descriptor<span class="token punctuation">.</span>styles<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span>scoped<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> code<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// style</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> styleRaw <span class="token operator">=</span> descriptor<span class="token punctuation">.</span>styles<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> styleRaw<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token function">compileVue2Style</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> styleRaw<span class="token punctuation">.</span>scoped<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">vueStyle</span><span class="token punctuation">(</span>
      style<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      styleRaw<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>lang<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">parseVue2SFC</span><span class="token punctuation">(</span><span class="token parameter">filePath<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cached <span class="token operator">=</span> VueCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cached <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>descriptor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cached<span class="token punctuation">.</span>descriptor<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Vue2Compiler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Vue2Compiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Vue2CompilerUtils <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@vue/component-compiler-utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> parse <span class="token punctuation">}</span> <span class="token operator">=</span> Vue2CompilerUtils<span class="token punctuation">;</span>
  <span class="token keyword">const</span> descriptor <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">source</span><span class="token operator">:</span> data<span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> filePath<span class="token punctuation">,</span>
    <span class="token literal-property property">compiler</span><span class="token operator">:</span> Vue2Compiler<span class="token punctuation">,</span> <span class="token comment">// \u9019\u88E1\u9700\u8981\u5C07 vueCompiler \u50B3\u5165</span>
    <span class="token literal-property property">needMap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cached <span class="token operator">=</span> cached <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached<span class="token punctuation">.</span>descriptor <span class="token operator">=</span> descriptor<span class="token punctuation">;</span>
  VueCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> cached<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> descriptor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">compileVue2SFCMain</span><span class="token punctuation">(</span><span class="token parameter">descriptor<span class="token punctuation">,</span> filePath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cached <span class="token operator">=</span> VueCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cached <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>script<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cached<span class="token punctuation">.</span>script<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// get hash id</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">hash_sum</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> code<span class="token punctuation">;</span>
  <span class="token keyword">let</span> script <span class="token operator">=</span> descriptor<span class="token punctuation">.</span>script<span class="token punctuation">.</span>content<span class="token punctuation">;</span>
  <span class="token comment">// code</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>script<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    code <span class="token operator">=</span> <span class="token function">rewriteImport</span><span class="token punctuation">(</span>
      script<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;export default &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;const __script = &#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      filePath<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> hasScoped <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token comment">// styles</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span>styles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    descriptor<span class="token punctuation">.</span>styles<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\nimport &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?type=style&amp;index=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>scoped<span class="token punctuation">)</span> hasScoped <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasScoped<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// here define the scopeId for script</span>
      code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n__script._scopeId = &quot;data-v-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\nimport { __render as render } from &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?type=template&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  code <span class="token operator">+=</span> <span class="token string">&#39;\\n__script.render = render;&#39;</span><span class="token punctuation">;</span>
  code <span class="token operator">+=</span> <span class="token string">&#39;\\nexport default __script;&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// result</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span>
    code<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached <span class="token operator">=</span> cached <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached<span class="token punctuation">.</span>script <span class="token operator">=</span> result<span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">compileVue2Template</span><span class="token punctuation">(</span><span class="token parameter">template<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> scoped</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cached <span class="token operator">=</span> VueCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cached <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cached<span class="token punctuation">.</span>template<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compileTemplate <span class="token punctuation">}</span> <span class="token operator">=</span> Vue2CompilerUtils<span class="token punctuation">;</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">hash_sum</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> compiled <span class="token operator">=</span> <span class="token function">compileTemplate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">source</span><span class="token operator">:</span> template<span class="token punctuation">.</span>content<span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> filePath<span class="token punctuation">,</span>
    <span class="token literal-property property">compiler</span><span class="token operator">:</span> Vue2Compiler<span class="token punctuation">,</span> <span class="token comment">// compiler \u50B3\u5165</span>
    <span class="token literal-property property">compilerOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">scopeId</span><span class="token operator">:</span> scoped <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">data-v-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// set scopeId</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">transformAssetUrls</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// \u9019\u88E1\u9700\u8981\u8A2D\u70BA false\uFF0C\u82E5\u70BA true\uFF0C\u6703\u5C07 asset \u7DE8\u8B6F\u70BA require \u7684\u6A21\u7D44\u5F15\u5165\uFF0C\u4E5F\u5C31\u7121\u6CD5\u76F4\u63A5\u88AB\u700F\u89BD\u5668\u89E3\u6790\uFF0CassetsUrl \u4E0B\u9762\u53E6\u5916\u8655\u7406</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// result</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>compiled<span class="token punctuation">,</span>
    <span class="token comment">// \u8655\u7406 assetsUrl</span>
    <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token function">rewriteVueAssets</span><span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>code<span class="token punctuation">,</span> filePath<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\nexport const __render = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
      compiled<span class="token punctuation">.</span>ast<span class="token punctuation">.</span>static <span class="token operator">?</span> <span class="token string">&#39;staticRenderFns[0]&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;render&#39;</span>
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached <span class="token operator">=</span> cached <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached<span class="token punctuation">.</span>template <span class="token operator">=</span> result<span class="token punctuation">;</span>
  VueCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> cached<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">rewriteVueAssets</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9019\u88E1\u50C5\u7C21\u55AE\u4EE5 src: &quot;&quot; \u4F86\u9032\u884C\u6BD4\u5C0D</span>
  <span class="token keyword">const</span> <span class="token function-variable function">rewrite</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s0<span class="token punctuation">,</span> s1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// . ../ /</span>
    <span class="token keyword">const</span> base <span class="token operator">=</span> path<span class="token punctuation">.</span>posix<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> p <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span> s1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u82E5\u70BA\u7D55\u5C0D\u6216 http \u958B\u982D\u5247\u4E0D\u8655\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">||</span> s1<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> s0<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;src&quot;:&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>p<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[&#39;&quot;]?src[&#39;&quot;]?\\:{1}\\s?[&#39;&quot;]([^&#39;&quot;]+)[&#39;&quot;]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> rewrite<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">compileVue2Style</span><span class="token punctuation">(</span><span class="token parameter">style<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> scoped<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cached <span class="token operator">=</span> VueCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cached <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>styles <span class="token operator">&amp;&amp;</span> cached<span class="token punctuation">.</span>styles<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cached<span class="token punctuation">.</span>styles<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> compileStyle <span class="token punctuation">}</span> <span class="token operator">=</span> Vue2CompilerUtils<span class="token punctuation">;</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">hash_sum</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">compileStyle</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">source</span><span class="token operator">:</span> style<span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">data-v-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token comment">// scope id</span>
    scoped<span class="token punctuation">,</span> <span class="token comment">// use scoped or not</span>
    <span class="token literal-property property">trim</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// trim code</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> code<span class="token punctuation">;</span>
  cached <span class="token operator">=</span> cached <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  cached<span class="token punctuation">.</span>styles<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">;</span>
  VueCache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> cached<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u5C31\u5B8C\u6210\u4E86 Vue2 \u7684\u7DE8\u8B6F\u8655\u7406\u645F\uFF0C\u4F46\u6211\u5011\u8981\u8A18\u5F97\u8655\u7406\u4E0B vue2 \u7684\u8DEF\u5F91\u8655\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//-- /server/import/path/vue.js</span>

<span class="token keyword">const</span> __VUE <span class="token operator">=</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> __VUE_ROUTER <span class="token operator">=</span> <span class="token string">&#39;vue-router&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">isVue2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pkg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> pkg<span class="token punctuation">.</span>name <span class="token operator">===</span> __VUE <span class="token operator">&amp;&amp;</span> pkg<span class="token punctuation">.</span>version<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;2.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">isVue2Router</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pkg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> pkg<span class="token punctuation">.</span>name <span class="token operator">===</span> __VUE_ROUTER <span class="token operator">&amp;&amp;</span>
  pkg<span class="token punctuation">.</span>version<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;3.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">checkVuePath</span><span class="token punctuation">(</span><span class="token parameter">pkg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isVue2</span><span class="token punctuation">(</span>pkg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;dist/vue.esm.browser.min.js&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isVue2Router</span><span class="token punctuation">(</span>pkg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;dist/vue-router.esm.browser.min.js&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// give default path</span>
  <span class="token comment">// first get .module, then .main</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> checkVuePath<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u5C31\u662F\u9019\u6B21\u5B78\u7FD2 Vite \u7684\u4E00\u9EDE\u7D00\u9304\u8DDF\u5BE6\u4F5C\u7DF4\u7FD2\uFF0C\u904E\u7A0B\u4E2D\u4E00\u5EA6\u5F88\u60F3\u653E\u68C4\uFF31\uFF31\uFF0C\u770B\u6E90\u78BC\u7576\u4E0B\u5BE6\u5728\u662F\u4E00\u4EF6\u975E\u5E38\u75DB\u82E6\u7684\u4E8B\u60C5\uFF0C\u4F46\u770B\u5B8C\u7684\u611F\u609F\u9817\u6DF1\uFF0C\u4E5F\u624D\u66F4\u80FD\u9AD4\u6703\u539F\u4F86\u9019\u4E9B\u5DE5\u5177\u7528\u8D77\u4F86\u7C21\u55AE\uFF0C\u5BE6\u969B\u4E0A\u662F\u9019\u9EBC\u591A\u4EBA\u7684\u8840\u548C\u6DDA\u5806\u758A\u51FA\u4F86\u7684\uFF0C\u771F\u5FC3\u611F\u8B1D\u6240\u6709 Vue \u5718\u968A\u8DDF\u793E\u7FA4\u5927\u4F6C\u5011\u7684\u4ED8\u51FA\uFF0C\u771F\u7684\u662F\u592A\u9999\u5566\uFF5E\uFF5E\uFF5E</p>`,17),L=s("\u672C\u7BC7\u7DF4\u7FD2\u7684\u6E90\u78BC\u5728\u6B64 "),D={href:"https://github.com/johnnywang1994/esm-server",target:"_blank",rel:"noopener noreferrer"},G=s("@johnnywang1994/esm-server"),A=s("\uFF0C\u4E5F\u6B61\u8FCE\u6709\u8208\u8DA3\u7684\u670B\u53CB\u5011\u524D\u5F80\u770B\u770B\u5594\uFF5E"),B=n("p",null,"\u5E0C\u671B\u672C\u7BC7\u80FD\u5920\u5E6B\u52A9\u5C0D\u65BC Vue \u7684\u57FA\u790E\u7DE8\u8B6F\u904E\u7A0B\u80FD\u6709\u66F4\u6DF1\u7684\u4E86\u89E3\uFF0C\u518D\u6B21\u8B1D\u8B1D\u5404\u4F4D\u8010\u5FC3\u7684\u89C0\u770B\uFF1A\uFF09\uFF09\uFF0C\u6211\u5011\u4E0B\u6B21\u898B\uFF5E",-1),H=n("p",null,"\u672C\u6587\u53C3\u8003\uFF1A",-1),W={href:"https://juejin.im/post/6844904176988897293",target:"_blank",rel:"noopener noreferrer"},X=s("\u8778\u725B\u8001\u6FD5-\u5927\u8056--\u524D\u7AEF\u65B0\u5DE5\u5177--vite\u4ECE\u5165\u95E8\u5230\u5B9E\u6218"),K={href:"https://blog.techbridge.cc/2020/08/07/vite-and-esmodules-snowpack/",target:"_blank",rel:"noopener noreferrer"},z=s("Vite \u600E\u9EBC\u80FD\u90A3\u9EBC\u5FEB\uFF1F\u5F9E ES modules \u958B\u59CB\u8AC7\u8D77"),J={href:"https://github.com/vitejs/vite",target:"_blank",rel:"noopener noreferrer"},Q=s("Vuejs/Vitejs"),Y={href:"https://github.com/vuejs/vue-loader",target:"_blank",rel:"noopener noreferrer"},Z=s("Vuejs/Vue-Loader");function nn(sn,an){const e=o("SocialBlock"),t=o("ExternalLinkIcon");return l(),i("div",null,[r,a(e,{hashtags:"vuejs,vite,sourcecode"}),k,d,v,m,b,g,f,n("p",null,[y,n("a",h,[w,a(t)]),x]),_,n("p",null,[q,j,V,n("a",P,[S,a(t)])]),C,n("p",null,[M,n("a",R,[F,a(t)]),E,n("a",I,[O,a(t)]),T,n("a",N,[U,a(t)])]),$,n("p",null,[L,n("a",D,[G,a(t)]),A]),B,H,n("ol",null,[n("li",null,[n("a",W,[X,a(t)])]),n("li",null,[n("a",K,[z,a(t)])]),n("li",null,[n("a",J,[Q,a(t)])]),n("li",null,[n("a",Y,[Z,a(t)])])]),a(e,{hashtags:"vuejs,vite,sourcecode"})])}var pn=c(u,[["render",nn],["__file","esm-server.html.vue"]]);export{pn as default};
