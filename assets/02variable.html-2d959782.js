import{_ as l,r as t,o as p,c as o,d as a,e as n,a as e,f as c}from"./app-fc6c1b2a.js";const i={},r=c(`<h1 id="variable-變數" tabindex="-1"><a class="header-anchor" href="#variable-變數" aria-hidden="true">#</a> Variable 變數</h1><p>普通變數無需聲明，使用時直接赋值即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token assign-left variable">variable</span><span class="token operator">=</span>value <span class="token comment"># = 左右無空格</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>命令替换</code>語法能把命令的輸出附给變數</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ls</span><span class="token variable">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用變數</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">echo</span> <span class="token variable">$files</span>
$ <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${files}</span>_end&quot;</span> <span class="token comment"># 這裡大括弧是必須的</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>作用域分為三種</p><ul><li>環境變數<br> 能在當前 shell 及其子 shell 中使用，使用 <code>declare -x</code> 或 <code>export</code> 導出</li><li>全局變數<br> 只能在當前 shell 進程内使用，預設。</li><li>局部變數<br> 只能在函數内使用，使用命令 <code>local</code> 聲明</li></ul><h2 id="declare" tabindex="-1"><a class="header-anchor" href="#declare" aria-hidden="true">#</a> declare</h2><p>變數除了保存值以外，還可能綁定某些屬性，比如只讀、數值、作用域等等</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">declare</span> <span class="token parameter variable">-r</span> <span class="token assign-left variable">CONST_INT</span><span class="token operator">=</span><span class="token number">2</span> <span class="token comment"># 只讀變數，同 readonly 命令聲明的變數</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-i</span> <span class="token assign-left variable">a_int</span><span class="token operator">=</span><span class="token number">3</span> <span class="token comment"># 數字類型變數</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">ENV_VAR</span><span class="token operator">=</span>value <span class="token comment"># 環境變數</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-a</span> <span class="token assign-left variable">arr</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 一般數組</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-A</span> <span class="token assign-left variable">map_arr</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 下標為字符串的數組</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="set-unset" tabindex="-1"><a class="header-anchor" href="#set-unset" aria-hidden="true">#</a> set/unset</h2><p>當一個變數被賦值時，就稱為 set，而 set 不接參數會輸出所有參數</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token assign-left variable">temp_var</span><span class="token operator">=</span>test
$ <span class="token builtin class-name">set</span><span class="token operator">|</span><span class="token function">grep</span> temp <span class="token comment"># temp_var=test</span>
$ <span class="token builtin class-name">unset</span> temp_var
$ <span class="token builtin class-name">set</span><span class="token operator">|</span><span class="token function">grep</span> temp <span class="token comment"># undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="位置變數、特殊變數" tabindex="-1"><a class="header-anchor" href="#位置變數、特殊變數" aria-hidden="true">#</a> 位置變數、特殊變數</h2><ul><li><code>$0</code>: 表示用戶當前的 shell，或是當前執行腳本名稱</li><li><code>$N</code>(N&gt;0): 表示執行腳本或函數時的第 N 個參數</li><li><code>$#</code>: 執行腳本或函數時的參數個數</li><li><code>$@</code>: 執行腳本時的參數，等效於 <code>&quot;$1&quot; &quot;$2&quot; ... &quot;$N&quot;</code></li><li><code>$*</code>: 執行腳本時的參數，等效於 <code>$1 $2 ... $N</code>，是一個整體</li><li><code>$?</code>: 上一指令的退出狀態碼</li></ul><h2 id="printenv-env-name" tabindex="-1"><a class="header-anchor" href="#printenv-env-name" aria-hidden="true">#</a> printenv [env-name]</h2><p>查看環境變數</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">printenv</span> <span class="token environment constant">PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="變數展開" tabindex="-1"><a class="header-anchor" href="#變數展開" aria-hidden="true">#</a> 變數展開</h2><p>除了基本的 <code>\${variable}</code>，多用在腳本撰寫中，還有以下三種</p><ul><li><code>\${#variable}</code>：展開變數內容長度、數組長度</li><li><code>\${variable:-default}</code>：為變數定義預設值，若該變數為空則展開為預設值</li><li><code>\${variable:offset:length}</code>：字符串or數組切片</li></ul><h2 id="子shell" tabindex="-1"><a class="header-anchor" href="#子shell" aria-hidden="true">#</a> 子shell</h2><p>執行腳本或 bash 命令時，會創建一個子shell，子shell 會繼承父shell 的環境變數（不包括普通變數），子shell 中設置的環境變數不會影響到父shell。</p><h2 id="array-陣列" tabindex="-1"><a class="header-anchor" href="#array-陣列" aria-hidden="true">#</a> Array 陣列</h2><h3 id="創建陣列" tabindex="-1"><a class="header-anchor" href="#創建陣列" aria-hidden="true">#</a> 創建陣列</h3><ul><li>直接聲明</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">arr</span><span class="token operator">=</span><span class="token punctuation">(</span>element1 element2 element3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>下標指定聲明</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">arr</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>element1 element2 <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span>element<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>直接指定(自動創建)</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>element1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>單純初始化</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">declare</span> <span class="token parameter variable">-a</span> arr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="獲取元素" tabindex="-1"><a class="header-anchor" href="#獲取元素" aria-hidden="true">#</a> 獲取元素</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>value
<span class="token builtin class-name">echo</span> <span class="token variable">\${arr<span class="token punctuation">[</span>0<span class="token punctuation">]</span>}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="數組長度" tabindex="-1"><a class="header-anchor" href="#數組長度" aria-hidden="true">#</a> 數組長度</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token variable">\${<span class="token operator">#</span>arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>
<span class="token comment"># or</span>
<span class="token builtin class-name">echo</span> <span class="token variable">\${<span class="token operator">#</span>arr<span class="token punctuation">[</span>*<span class="token punctuation">]</span>}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但要注意，bash 數組更像是 map，沒有要求下標連續，如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">arr</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token number">2</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token builtin class-name">echo</span> <span class="token variable">\${<span class="token operator">#</span>arr2<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>
<span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="數組遍歷" tabindex="-1"><a class="header-anchor" href="#數組遍歷" aria-hidden="true">#</a> 數組遍歷</h3><p><code>\${arr[@]}</code> 展開數組全部元素，注意是否加引號</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">pets</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&quot;a cat&quot;</span> <span class="token string">&quot;a dog&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">pet</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">\${pets<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$pet</span><span class="token punctuation">;</span>
<span class="token keyword">done</span>
<span class="token comment"># a cat</span>
<span class="token comment"># a dog</span>

<span class="token comment"># 不加引號，會以空格分割</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">pet</span> <span class="token keyword">in</span> <span class="token variable">\${pets<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$pet</span><span class="token punctuation">;</span>
<span class="token keyword">done</span>
<span class="token comment"># a</span>
<span class="token comment"># cat</span>
<span class="token comment"># a</span>
<span class="token comment"># dog</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>遍歷 indices</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">\${<span class="token operator">!</span>arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;arr[<span class="token variable">\${i}</span>]=<span class="token variable">\${arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="數組切片" tabindex="-1"><a class="header-anchor" href="#數組切片" aria-hidden="true">#</a> 數組切片</h3><p>數組切片與字符串子串語法類似。</p><p><code>\${arr[@]:offset:len}</code>，表示從 arr[offset] 開始，長度為 len 的數組，其中 offset 可以是負數，len 省略則表示到數組結尾</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">arr</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> a b c d<span class="token punctuation">)</span>

<span class="token builtin class-name">echo</span> <span class="token variable">\${arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span><span class="token operator">:</span>4}</span>
<span class="token comment"># 4 a b c d</span>

<span class="token builtin class-name">echo</span> <span class="token variable">\${arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span><span class="token operator">:</span>4<span class="token operator">:</span>2}</span>
<span class="token comment"># 4 a</span>

<span class="token comment"># offset 為負時，注意前面需要加空格</span>
<span class="token builtin class-name">echo</span> <span class="token variable">\${arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span><span class="token operator">:</span> -4<span class="token operator">:</span> 2}</span>
<span class="token comment"># a b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="數組增刪" tabindex="-1"><a class="header-anchor" href="#數組增刪" aria-hidden="true">#</a> 數組增刪</h3><p>往後新增元素</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">arr</span><span class="token operator">+=</span><span class="token punctuation">(</span>new1 new2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>結合切片使用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># push</span>
<span class="token assign-left variable">arr</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&quot;<span class="token variable">\${arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span> value1 value2<span class="token punctuation">)</span>
<span class="token comment"># unshift</span>
<span class="token assign-left variable">arr</span><span class="token operator">=</span><span class="token punctuation">(</span>value1 value2 <span class="token string">&quot;<span class="token variable">\${arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># insert（在下標從0開始且連續的前提下）</span>
<span class="token assign-left variable">arr</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&quot;<span class="token variable">\${arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span><span class="token operator">:</span>0<span class="token operator">:</span>2}</span>&quot;</span> value1 value2 <span class="token string">&quot;<span class="token variable">\${arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span><span class="token operator">:</span>2}</span>&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># remove（在下標從0開始且連續的前提下）</span>
<span class="token assign-left variable">arr</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&quot;<span class="token variable">\${arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span><span class="token operator">:</span>0<span class="token operator">:</span>2}</span>&quot;</span> <span class="token string">&quot;<span class="token variable">\${arr<span class="token punctuation">[</span>@<span class="token punctuation">]</span><span class="token operator">:</span>3}</span>&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># delete array</span>
<span class="token builtin class-name">unset</span> arr
<span class="token comment"># delete item</span>
<span class="token builtin class-name">unset</span> arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="關聯數組" tabindex="-1"><a class="header-anchor" href="#關聯數組" aria-hidden="true">#</a> 關聯數組</h3><p>使用字符串作為下標，普通數組是<code>數字: 字符</code>，關聯數組是<code>字符: 字符</code>映射，更通用的 map 結構</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">declare</span> <span class="token parameter variable">-A</span> <span class="token assign-left variable">ass_arr</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;white&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;#fff&quot;</span> <span class="token punctuation">[</span><span class="token string">&quot;green&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;#0f0&quot;</span><span class="token punctuation">)</span>
<span class="token builtin class-name">echo</span> <span class="token variable">\${ass_arr<span class="token punctuation">[</span>&quot;white&quot;<span class="token punctuation">]</span>}</span> <span class="token comment"># #fff</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>如果執行時報錯 <code>declare -A: invalid option</code>，請透過 <code>bash --version</code> 檢查一下 bash 版本，可能需要更新環境的 bash 版本才支援此功能（似乎 4.x 以上才支援）</p></blockquote><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2>`,60),d={href:"https://juejin.cn/post/7130982053528469511",target:"_blank",rel:"noopener noreferrer"},u={href:"https://juejin.cn/post/7120225811050790919",target:"_blank",rel:"noopener noreferrer"};function k(v,b){const s=t("ExternalLinkIcon");return p(),o("div",null,[r,a("ul",null,[a("li",null,[a("a",d,[n("Bash 基礎知識"),e(s)])]),a("li",null,[a("a",u,[n("Bash 數組介紹"),e(s)])])])])}const h=l(i,[["render",k],["__file","02variable.html.vue"]]);export{h as default};
