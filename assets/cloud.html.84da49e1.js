import{_ as p,r as o,o as c,c as i,d as n,e as s,a as t,f as e}from"./app.b10215be.js";const l={},u=n("h1",{id:"parse-cloud-code-\u7AE0\u7BC0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parse-cloud-code-\u7AE0\u7BC0","aria-hidden":"true"},"#"),s(" Parse Cloud Code \u7AE0\u7BC0")],-1),r={href:"https://docs.parseplatform.org/cloudcode/guide/",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,[s("\u9810\u8A2D\u4F86\u8AAA\uFF0CParse Cloud \u74B0\u5883\u5165\u53E3\u70BA "),n("code",null,"./cloud/main.js"),s("\uFF0C\u8DEF\u5F91\u53EF\u4EE5\u900F\u904E parse server options \u8A2D\u5B9A")],-1),k=n("h2",{id:"cloud-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cloud-functions","aria-hidden":"true"},"#"),s(" Cloud Functions")],-1),v={href:"https://docs.parseplatform.org/cloudcode/guide/#cloud-functions",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"Parse.Cloud.define",-1),b=e(`<h3 id="\u5275\u5EFA-cloud-code-function" tabindex="-1"><a class="header-anchor" href="#\u5275\u5EFA-cloud-code-function" aria-hidden="true">#</a> \u5275\u5EFA Cloud Code Function</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;averageStars&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Query</span><span class="token punctuation">(</span><span class="token string">&#39;Review&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  query<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;movie&#39;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>params<span class="token punctuation">.</span>movie<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> query<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> results<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">+=</span> results<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;stars&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> sum <span class="token operator">/</span> results<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u57F7\u884C-cloud-code-function" tabindex="-1"><a class="header-anchor" href="#\u57F7\u884C-cloud-code-function" aria-hidden="true">#</a> \u57F7\u884C Cloud Code Function</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> params <span class="token operator">=</span>  <span class="token punctuation">{</span> <span class="token literal-property property">movie</span><span class="token operator">:</span> <span class="token string">&quot;The Matrix&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ratings <span class="token operator">=</span> <span class="token keyword">await</span> Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token string">&quot;averageStars&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="request-\u7269\u4EF6" tabindex="-1"><a class="header-anchor" href="#request-\u7269\u4EF6" aria-hidden="true">#</a> Request \u7269\u4EF6</h3><ul><li>params: \u50B3\u9032 function \u7684\u53C3\u6578</li><li>user: \u7576\u524D\u8ABF\u7528\u7684 User</li><li>master: \u662F\u5426\u900F\u904E <code>masterKey</code> \u8ABF\u7528</li></ul><h3 id="\u9650\u5236\u689D\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u9650\u5236\u689D\u4EF6" aria-hidden="true">#</a> \u9650\u5236\u689D\u4EF6</h3><p>\u9650\u5236\u50B3\u5165\u53C3\u6578\u5FC5\u9808\u6709 movie\uFF0C\u4E26\u4E14\u53EA\u6709\u767B\u5165\u7528\u6236\u80FD\u8ABF\u7528\u6B64 function</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&quot;averageStars&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...same above</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
  <span class="token literal-property property">fields</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;movie&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">requireUser</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&quot;averageStars&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Query</span><span class="token punctuation">(</span><span class="token string">&quot;Review&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  query<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&quot;movie&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>params<span class="token punctuation">.</span>movie<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> query<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> sum <span class="token operator">/</span> results<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
  <span class="token literal-property property">fields</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">movie</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
      <span class="token function-variable function">options</span><span class="token operator">:</span> <span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> val<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&quot;Movie must be less than 20 characters&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">requireUserKeys</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">accType</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token string">&#39;reviewer&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;Only reviewers can get average stars&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5E38\u898B-options" tabindex="-1"><a class="header-anchor" href="#\u5E38\u898B-options" aria-hidden="true">#</a> \u5E38\u898B options</h4>`,10),h={href:"https://docs.parseplatform.org/cloudcode/guide/#implementing-cloud-function-validation",target:"_blank",rel:"noopener noreferrer"},g=n("li",null,"requireMaster",-1),f=n("li",null,"requireUser",-1),y=n("li",null,"validateMasterKey",-1),q=n("li",null,"fields",-1),w=n("li",null,"requireAnyUserRoles",-1),_=n("li",null,"requireAllUserRoles",-1),j=n("li",null,"requireUserKeys",-1),x={href:"https://docs.parseplatform.org/cloudcode/guide/#more-advanced-validation",target:"_blank",rel:"noopener noreferrer"},C=e(`<h4 id="validation-\u51FD\u6578\u6AA2\u9A57" tabindex="-1"><a class="header-anchor" href="#validation-\u51FD\u6578\u6AA2\u9A57" aria-hidden="true">#</a> Validation \u51FD\u6578\u6AA2\u9A57</h4><p>\u7576\u4E00\u822C options \u7121\u6CD5\u6EFF\u8DB3\u4F60\u7684\u6AA2\u9A57\u9700\u6C42\u6642\uFF0C\u4F60\u53EF\u4EE5\u50B3\u5165\u4E00\u500B function \u5C0D\u5176\u9032\u884C\u66F4\u8A73\u7D30\u7684\u6AA2\u9A57\uFF0C\u4E5F\u63D0\u5347\u6AA2\u9A57\u908F\u8F2F\u7684\u8907\u7528\u80FD\u529B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">validationRules</span> <span class="token operator">=</span> <span class="token parameter">request</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>master<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>request<span class="token punctuation">.</span>user <span class="token operator">||</span> request<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id <span class="token operator">!==</span> <span class="token string">&#39;masterUser&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token string">&#39;Unauthorized&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;adminFunction&#39;</span><span class="token punctuation">,</span> <span class="token parameter">request</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// do admin code here, confident that request.user.id is masterUser, or masterKey is provided</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> validationRules<span class="token punctuation">)</span>

Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;adminFunctionTwo&#39;</span><span class="token punctuation">,</span> <span class="token parameter">request</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// do admin code here, confident that request.user.id is masterUser, or masterKey is provided</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> validationRules<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>validation \u51FD\u6578\u6703\u5728 Cloud Code Function \u524D\u57F7\u884C\uFF0C\u53EF\u4EE5\u4F7F\u7528 async \u6216 promise \u578B\u614B\u7684\u6AA2\u9A57\u51FD\u6578\uFF0C\u4F46\u76E1\u91CF\u78BA\u4FDD\u6AA2\u9A57\u904E\u7A0B\u7684\u7C21\u77ED\uFF0C\u8B93 Cloud Code Function \u80FD\u66F4\u5FEB\u88AB\u57F7\u884C</li></ul><h2 id="cloud-jobs" tabindex="-1"><a class="header-anchor" href="#cloud-jobs" aria-hidden="true">#</a> Cloud Jobs</h2>`,5),P={href:"https://docs.parseplatform.org/cloudcode/guide/#cloud-jobs",target:"_blank",rel:"noopener noreferrer"},S=e(`<p>\u6709\u6642\u60A8\u60F3\u57F7\u884C\u9577\u6642\u9593\u904B\u884C\u7684\u51FD\u6578\uFF0C\u4E26\u4E14\u4E0D\u60F3\u7B49\u5F85\u56DE\u61C9\u3002Cloud Jobs \u5C31\u662F\u70BA\u6B64\u800C\u751F\u7684\u3002</p><h3 id="\u5275\u5EFA-job" tabindex="-1"><a class="header-anchor" href="#\u5275\u5EFA-job" aria-hidden="true">#</a> \u5275\u5EFA Job</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">job</span><span class="token punctuation">(</span><span class="token string">&quot;myJob&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span>
  <span class="token comment">// params: \u50B3\u5165\u53C3\u6578</span>
  <span class="token comment">// headers: \u89F8\u767C job \u7684\u8ACB\u6C42 headers</span>
  <span class="token comment">// log: \u50B3\u5165 request \u7684 logger</span>
  <span class="token comment">// message: \u66F4\u65B0 job \u72C0\u614B\u7684\u51FD\u6578</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> params<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> log<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token operator">=</span> request<span class="token punctuation">;</span>
  <span class="token function">message</span><span class="token punctuation">(</span><span class="token string">&quot;I just started&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">doSomethingVeryLong</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u57F7\u884C-job" tabindex="-1"><a class="header-anchor" href="#\u57F7\u884C-job" aria-hidden="true">#</a> \u57F7\u884C Job</h3><p>\u57F7\u884C Job \u5FC5\u9808\u4EE5 <code>master</code> \u6B0A\u9650\u9032\u884C\uFF0C\u6CE8\u610F url \u7D50\u69CB\u662F\u4EE5\u7D81\u5B9A\u7684 parse server \u4F4D\u7F6E\u4E2D\u7684</p><ul><li><code>/[parse-mount-path]/jobs/[job-name]</code></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token parameter variable">-H</span> <span class="token string">&#39;X-Parse-Application-Id: appId&#39;</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;X-Parse-Master-Key: masterKey&#39;</span> https://my-parse-server.com/parse/jobs/myJob
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u67E5\u770B-job" tabindex="-1"><a class="header-anchor" href="#\u67E5\u770B-job" aria-hidden="true">#</a> \u67E5\u770B Job</h3><p>\u5728 Parse Dashboard \u4E2D\u80FD\u5920\u67E5\u770B\uFF0C\u6216\u662F\u4F7F\u7528 <code>masterKey</code> \u5C0D <code>_JobStatus</code> class \u9032\u884C query</p><h2 id="save-triggers" tabindex="-1"><a class="header-anchor" href="#save-triggers" aria-hidden="true">#</a> Save Triggers</h2>`,10),F={href:"https://docs.parseplatform.org/cloudcode/guide/#save-triggers",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"save triggers",-1),T=e(`<h3 id="validation" tabindex="-1"><a class="header-anchor" href="#validation" aria-hidden="true">#</a> validation</h3><p>\u4EE5\u4E0B\u7BC4\u4F8B\u5728\u5BEB\u5165\u8A55\u50F9\u524D\u6AA2\u67E5 <code>stars</code> \u6578\u91CF\u662F\u5426 valid</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">beforeSave</span><span class="token punctuation">(</span><span class="token string">&#39;Review&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">fields</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">stars</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token function-variable function">options</span><span class="token operator">:</span> <span class="token parameter">stars</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> stars <span class="token operator">&gt;=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> stars <span class="token operator">=</span><span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;Your review must be between one and five stars&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u51FD\u6578\u62CB\u51FA\u7570\u5E38\uFF0CReview \u5C0D\u8C61\u5C07\u4E0D\u6703\u88AB\u4FDD\u5B58\uFF0C\u5BA2\u6236\u7AEF\u6703\u5831\u932F\u3002\u5982\u679C\u6C92\u6709\u62CB\u51FA\u4EFB\u4F55\u6771\u897F\uFF0C\u5C0D\u8C61\u5C07\u88AB\u6B63\u5E38\u4FDD\u5B58\u3002</p><h3 id="modifying" tabindex="-1"><a class="header-anchor" href="#modifying" aria-hidden="true">#</a> modifying</h3><p>\u6216\u662F\u5728\u8CC7\u6599\u5132\u5B58\u5BEB\u5165\u524D\u9032\u884C\u4FEE\u6539\uFF0C\u4EE5\u4E0B\u7BC4\u4F8B\u78BA\u4FDD\u5B58\u5165\u7684 <code>comment</code> \u6B04\u4F4D\u9577\u5EA6\u5728 140 \u5B57\u5143\u5167</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">beforeSave</span><span class="token punctuation">(</span><span class="token string">&quot;Review&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// original: \u4FDD\u5B58\u7269\u4EF6\u539F\u672C\u7684\u503C\uFF0C\u82E5\u70BA\u65B0\u7269\u4EF6\u5247\u70BA\u4E0D\u5B58\u5728</span>
  <span class="token comment">// object: \u5373\u5C07\u4FDD\u5B58\u7684\u7269\u4EF6</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> object<span class="token punctuation">,</span> original <span class="token punctuation">}</span> <span class="token operator">=</span> request
  <span class="token keyword">const</span> comment <span class="token operator">=</span> object<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;comment&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>comment<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">140</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Truncate and add a ...</span>
    object<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;comment&quot;</span><span class="token punctuation">,</span> comment<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="predefined-class" tabindex="-1"><a class="header-anchor" href="#predefined-class" aria-hidden="true">#</a> predefined class</h3><p>\u5C0D\u65BC Parse \u9810\u5B9A\u7FA9\u7684\u5167\u5EFA class\uFF0C\u8ACB\u76F4\u63A5\u50B3\u5165 <code>Parse.User</code> \u9019\u7A2E\u65B9\u5F0F\uFF0C\u800C\u4E0D\u662F\u5B57\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">beforeSave</span><span class="token punctuation">(</span>Parse<span class="token punctuation">.</span>User<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// code here</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// Validation Object or Validation Function</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="aftersave" tabindex="-1"><a class="header-anchor" href="#aftersave" aria-hidden="true">#</a> afterSave</h3><p>\u524D\u9762\u90FD\u662F\u5728\u5132\u5B58\u524D\u505A\u4E8B\u60C5\uFF0C\u6211\u5011\u4E5F\u53EF\u4EE5\u4F7F\u7528 <code>afterSave</code> \u5728\u7269\u4EF6\u5B58\u5165\u5F8C\u9032\u884C\u64CD\u4F5C\uFF0C\u901A\u5E38\u7528\u65BC\u8F03\u70BA<code>\u5197\u9577\u7684\u64CD\u4F5C</code>\uFF0C\u4E0D\u5E0C\u671B\u6B64\u64CD\u4F5C\u5F71\u97FF\u5230\u7269\u4EF6\u5132\u5B58\u7684\u60C5\u6CC1\u4E0B\u53EF\u4EE5\u8003\u616E\u4F7F\u7528\uFF0C\u4F8B\u5982\u4E0B\u9762\u7BC4\u4F8B\u5728 <code>Comment</code> \u7269\u4EF6\u5B58\u5165\u5F8C\uFF0C\u5C0D\u6240\u5C6C\u7684 <code>Post</code> \u7269\u4EF6 comment \u6B04\u4F4D\u52A0\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">afterSave</span><span class="token punctuation">(</span><span class="token string">&quot;Comment&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Query</span><span class="token punctuation">(</span><span class="token string">&quot;Post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  query<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>object<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      post<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token string">&quot;comments&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> post<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Got an error &quot;</span> <span class="token operator">+</span> error<span class="token punctuation">.</span>code <span class="token operator">+</span> <span class="token string">&quot; : &quot;</span> <span class="token operator">+</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4E0A\u9762\u7684\u52D5\u4F5C\u5BE6\u969B\u4E0A\u5728\u5B8C\u6210\u524D\u5C31\u6703\u5148\u8FD4\u56DE\u4F7F\u7528\u8005\uFF0C\u5373\u4F7F\u5728 <code>post.save()</code> \u6642\u767C\u751F\u932F\u8AA4\uFF0C\u7528\u6236\u4E5F\u4E0D\u6703\u88AB\u901A\u77E5\uFF0C\u932F\u8AA4\u53EF\u4EE5\u5728 Cloud Code Log \u4E2D\u770B\u5230\uFF0C\u70BA\u4E86\u5728 afterSave \u8655\u7406\u7A0B\u5E8F\u5B8C\u6210\u4E4B\u524D\u56DE\u61C9\u5BA2\u6236\u7AEF\uFF0C\u60A8\u7684\u8655\u7406\u7A0B\u5E8F\u53EF\u80FD\u4E0D\u53EF\u8FD4\u56DE promise\uFF0C\u4E26\u4E14\u4E0D\u8981\u4F7F\u7528 async/await\u3002</p></blockquote><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context" aria-hidden="true">#</a> Context</h3><p>context \u662F\u4E00\u500B\u8B93\u958B\u767C\u8005\u80FD\u5728\u4E0D\u540C\u6642\u6A5F\u4F7F\u7528\u7684\u7269\u4EF6\u7A7A\u9593\uFF0Ccontext \u6703\u5F9E <code>beforeSave</code> \u8655\u7406\u7A0B\u5E8F\u50B3\u905E\u5230 <code>afterSave</code> \u8655\u7406\u7A0B\u5E8F\u3002</p><h2 id="delete-triggers" tabindex="-1"><a class="header-anchor" href="#delete-triggers" aria-hidden="true">#</a> Delete Triggers</h2>`,17),M={href:"https://docs.parseplatform.org/cloudcode/guide/#delete-triggers",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"beforeDelete",-1),R=e(`<h3 id="beforedelete" tabindex="-1"><a class="header-anchor" href="#beforedelete" aria-hidden="true">#</a> beforeDelete</h3><p>\u4EE5\u4E0B\u7BC4\u4F8B\u5728\u522A\u9664 <code>Album</code> \u7269\u4EF6\u4E4B\u524D\uFF0C\u6AA2\u67E5\u5176\u4E2D\u662F\u5426\u9084\u6709 photos \u5B58\u5728\uFF0C\u7576\u932F\u8AA4\u62CB\u51FA\u6642\uFF0Calbum \u5C07\u4E0D\u6703\u88AB\u8AA4\u522A\u9664</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">beforeDelete</span><span class="token punctuation">(</span><span class="token string">&quot;Album&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> object <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Query</span><span class="token punctuation">(</span><span class="token string">&quot;Photo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  query<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&quot;album&quot;</span><span class="token punctuation">,</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token keyword">await</span> query<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">useMasterKey</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token string">&quot;Can&#39;t delete album if it still has photos.&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="afterdelete" tabindex="-1"><a class="header-anchor" href="#afterdelete" aria-hidden="true">#</a> afterDelete</h3><p>\u4EE5\u4E0B\u7BC4\u4F8B\u5728\u522A\u9664 <code>Post</code> \u5F8C\uFF0C\u9700\u8981\u4E00\u6B21\u5C07 post \u7684 <code>Comment</code> \u5168\u90E8\u522A\u9664</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">afterDelete</span><span class="token punctuation">(</span><span class="token string">&quot;Post&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> object <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Query</span><span class="token punctuation">(</span><span class="token string">&quot;Comment&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  query<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u9019\u908A\u4E0D\u4F7F\u7528 async/await \u53EF\u4EE5\u52A0\u5FEB\u56DE\u61C9\u4F7F\u7528\u8005\u7684\u6642\u9593\uFF0C\u6B64\u64CD\u4F5C\u4E0D\u5F71\u97FF\u4F7F\u7528\u8005\u5F8C\u7E8C\u52D5\u4F5C</span>
  query<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>Parse<span class="token punctuation">.</span>Object<span class="token punctuation">.</span>destroyAll<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error finding related comments &quot;</span> <span class="token operator">+</span> error<span class="token punctuation">.</span>code <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="find-triggers" tabindex="-1"><a class="header-anchor" href="#find-triggers" aria-hidden="true">#</a> Find Triggers</h2>`,7),L={href:"https://docs.parseplatform.org/cloudcode/guide/#find-triggers",target:"_blank",rel:"noopener noreferrer"},Q=e(`<h3 id="beforefind-or-afterfind" tabindex="-1"><a class="header-anchor" href="#beforefind-or-afterfind" aria-hidden="true">#</a> beforeFind or afterFind</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Properties available</span>
Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">beforeFind</span><span class="token punctuation">(</span><span class="token string">&#39;MyObject&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> query <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">;</span> <span class="token comment">// the Parse.Query</span>
  <span class="token keyword">let</span> user <span class="token operator">=</span> req<span class="token punctuation">.</span>user<span class="token punctuation">;</span> <span class="token comment">// the user</span>
  <span class="token keyword">let</span> triggerName <span class="token operator">=</span> req<span class="token punctuation">.</span>triggerName<span class="token punctuation">;</span> <span class="token comment">// beforeFind</span>
  <span class="token keyword">let</span> isMaster <span class="token operator">=</span> req<span class="token punctuation">.</span>master<span class="token punctuation">;</span> <span class="token comment">// if the query is run with masterKey</span>
  <span class="token keyword">let</span> isCount <span class="token operator">=</span> req<span class="token punctuation">.</span>count<span class="token punctuation">;</span> <span class="token comment">// if the query is a count operation</span>
  <span class="token keyword">let</span> logger <span class="token operator">=</span> req<span class="token punctuation">.</span>log<span class="token punctuation">;</span> <span class="token comment">// the logger</span>
  <span class="token keyword">let</span> installationId <span class="token operator">=</span> req<span class="token punctuation">.</span>installationId<span class="token punctuation">;</span> <span class="token comment">// The installationId</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Returning a different query</span>
Parse<span class="token punctuation">.</span>Cloud<span class="token punctuation">.</span><span class="token function">beforeFind</span><span class="token punctuation">(</span><span class="token string">&#39;MyObject&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> query <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">;</span>
  <span class="token keyword">let</span> otherQuery <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parse<span class="token punctuation">.</span>Query</span><span class="token punctuation">(</span><span class="token string">&#39;MyObject&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  otherQuery<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Parse<span class="token punctuation">.</span>Query<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> otherQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="security" tabindex="-1"><a class="header-anchor" href="#security" aria-hidden="true">#</a> Security</h2><p>\u8981\u8986\u84CB\u5C0D\u8C61\u548C\u985E\u8A2A\u554F\u6B0A\u9650\uFF0C\u60A8\u53EF\u4EE5\u8A2D\u7F6E <code>useMasterKey: true</code> \u5982\u679C\u8ACB\u6C42\u63A5\u53D7\u4E3B\u5BC6\u9470\u9078\u9805\uFF0C\u4F46\u9700\u8981\u6CE8\u610F\uFF0C\u4F7F\u7528 master \u6B0A\u9650\u5349\u8FD4\u56DE\u7269\u4EF6\u6240\u6709\u8CC7\u6E90\uFF0C\u5728\u5C07\u5176\u767C\u9001\u5230\u5BA2\u6236\u7AEF\u4E4B\u524D\uFF0C\u60A8\u53EF\u80FD\u5E0C\u671B\u522A\u9664\u5BA2\u6236\u7AEF\u4E0D\u61C9\u8A2A\u554F\u7684\u7269\u4EF6\u5C6C\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>query<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">useMasterKey</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h2><p>\u9ED8\u8A8D\u60C5\u6CC1\u4E0B\uFF0CParse Config \u53C3\u6578\u53EF\u4EE5\u516C\u958B\u8B80\u53D6\uFF0C\u5982\u679C\u53C3\u6578\u5305\u542B\u4E0D\u61C9\u5411\u5BA2\u6236\u7AEF\u516C\u958B\u7684\u654F\u611F\u4FE1\u606F\uFF0C\u5247\u53EF\u80FD\u4E0D\u5E0C\u671B\u9019\u6A23\u505A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u85C9\u7531\u6DFB\u52A0 requireMasterKey \u5728 Config \u6B04\u4F4D\uFF0C\u53EF\u4EE5\u6DFB\u52A0 master \u6B0A\u9650\u7684 config \u8A2D\u5B9A</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token keyword">await</span> Parse<span class="token punctuation">.</span>Config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">useMasterKey</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> privateParam <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;privateParam&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function J(I,V){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[s("Link"),t(a)])])]),d,k,n("ul",null,[n("li",null,[n("a",v,[s("Link"),t(a)]),s(" Cloud Function \u5B9A\u7FA9\u7531 "),m,s(" \u8655\u7406\uFF0C\u56E0\u70BA\u662F\u5728 Parse \u74B0\u5883\u4E0B\uFF0C\u6240\u4EE5\u53EF\u4EE5\u76F4\u63A5\u8ABF\u7528 Parse \u76F8\u95DC\u529F\u80FD\uFF0C\u6BD4\u5982\u4E0B\u9762\u7BC4\u4F8B")])]),b,n("ul",null,[n("li",null,[n("a",h,[s("Link"),t(a)])]),g,f,y,q,w,_,j]),n("p",null,[s("\u66F4\u591A\u9650\u5236\u65B9\u5F0F\u53EF"),n("a",x,[s("\u53C3\u8003\u9019\u908A"),t(a)])]),C,n("ul",null,[n("li",null,[n("a",P,[s("Link"),t(a)])])]),S,n("ul",null,[n("li",null,[n("a",F,[s("Link"),t(a)]),s(" \u7576\u6211\u5011\u60F3\u5C0D\u8CC7\u6599\u683C\u5F0F\u505A\u4E9B\u7279\u6B8A\u8655\u7406\u6642\uFF0C\u5982\u679C\u6BCF\u4E00\u6B21\u90FD\u8981\u55AE\u7368\u5BEB\u4E00\u904D\u975E\u5E38\u7121\u610F\u7FA9\uFF0C\u6B64\u6642\u53EF\u4EE5\u4F7F\u7528 "),K,s(" \u5C0D\u8CC7\u6599\u7684\u5BEB\u5165\u524D\u3001\u5BEB\u5165\u5F8C\u505A\u7279\u5B9A\u7684\u8655\u7406")])]),T,n("ul",null,[n("li",null,[n("a",M,[s("Link"),t(a)]),s(" \u5728\u522A\u9664\u7269\u4EF6\u4E4B\u524D\u904B\u884C\u81EA\u5B9A\u7FA9 Cloud Code\u3002\u60A8\u53EF\u4EE5\u4F7F\u7528 "),U,s(" \u65B9\u6CD5\u57F7\u884C\u6B64\u64CD\u4F5C\u3002")])]),R,n("ul",null,[n("li",null,[n("a",L,[s("Link"),t(a)]),s(" \u5728\u67D0\u4E9B\u60C5\u6CC1\u4E0B\uFF0C\u53EF\u80FD\u5E0C\u671B\u8F49\u63DB\u50B3\u5165\u67E5\u8A62\u3001\u6DFB\u52A0\u984D\u5916\u6216\u589E\u52A0\u9ED8\u8A8D\u9650\u5236")])]),Q])}const O=p(l,[["render",J],["__file","cloud.html.vue"]]);export{O as default};
