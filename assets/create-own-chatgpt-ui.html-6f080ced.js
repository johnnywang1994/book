import{_ as r,r as h,o as s,c as o,d as e,e as a,a as n,f as i}from"./app-b03d09bb.js";const p={},c=i('<h1 id="動手自己做一個-chatgpt-ui-工具吧" tabindex="-1"><a class="header-anchor" href="#動手自己做一個-chatgpt-ui-工具吧" aria-hidden="true">#</a> 動手自己做一個 ChatGPT UI 工具吧</h1><h2 id="介紹" tabindex="-1"><a class="header-anchor" href="#介紹" aria-hidden="true">#</a> 介紹</h2><p>Hi 大家好，我是 Johnny。好久不見，最近工作上專案十分繁忙，一直沒空玩玩新的東西，今天這篇是我在學習使用 ChatGPT 的 API 後，開發了一個簡單的 UI 介面紀錄</p><h2 id="openai-api-使用感想" tabindex="-1"><a class="header-anchor" href="#openai-api-使用感想" aria-hidden="true">#</a> OpenAI Api 使用感想</h2><p>這次使用的是 ChatGPT 的 API，使用上非常方便，可以客製化你要的 AI 回答方式、使用的 model 等，而這次的目標就是把大部分比較有意義的參數設定，搬到我的 UI 介面中，讓使用者可以根據需要隨時調整 AI，並添加了 system prompt 的能力，幫助提出更精準的問題，得到更好的回答內容</p><h2 id="api-串接細節" tabindex="-1"><a class="header-anchor" href="#api-串接細節" aria-hidden="true">#</a> API 串接細節</h2><p>這次學習過程中，發現 ChatGPT 的 API 其實已經改版過，而網路上很多資源的內容還是關於舊版的（未來某天我的這篇也會變成舊版...，我會盡量保持更新哈哈）</p><h3 id="messages-紀錄" tabindex="-1"><a class="header-anchor" href="#messages-紀錄" aria-hidden="true">#</a> messages 紀錄</h3><p>ChatGPT 目前不會自動儲存你跟 AI 的對話，每次發送 api 時，必須手動把需要的對話內容一起送進 <code>messages</code> 參數，提供給 AI 作為回答的材料，不然每次提問如果都只給他當前的問題，他都會像失智老人一樣忘記你跟他前面到底討論了什麼</p><h3 id="frequency-penalty-vs-presence-penalty" tabindex="-1"><a class="header-anchor" href="#frequency-penalty-vs-presence-penalty" aria-hidden="true">#</a> frequency_penalty vs presence_penalty</h3><ul><li><p>frequency_penalty: 頻率懲罰 數值介於 -2 ~ 2，正的數值會讓 chatgpt 在每次使用同一個 token 時，進行懲罰，假設數值是 1，那原本 token 分數是 100，前面回答過2次 apple，那在後續回答時，再次出現 apple 的分數會是 100 - 2*1，也就是 98</p></li><li><p>presence_penalty: 存在懲罰 數值介於 -2 ~ 2，正的數值會讓 chatgpt 在使用一個 token 時後進行懲罰，但只懲罰一次，假設數值是 1，apple 出現過 1次，那後續這個詞的分數都會是 100 - 1，也就是 99，不管 apple 出現幾次都是一樣</p></li></ul><h3 id="max-tokens-最大回覆-token" tabindex="-1"><a class="header-anchor" href="#max-tokens-最大回覆-token" aria-hidden="true">#</a> max_tokens 最大回覆 token</h3><p>這個參數只設定回覆的長度，並不包含用戶提出的問題內容長度，所以最終 api 呈現的使用 total_tokens 可能會大於這數字，並不是 ChatGPT 偷吃 token 喔！（所以如果你不限制傳送的 messages 歷史紀錄長度，總是把所有垃圾都一起送給 GPT，那你的 token 就會超級快速消失，除非你就是要 AI 記得你們之間的所有對話點點滴滴）</p><h2 id="作品呈現" tabindex="-1"><a class="header-anchor" href="#作品呈現" aria-hidden="true">#</a> 作品呈現</h2>',14),d={href:"https://public-gpt.maju-web.club/",target:"_blank",rel:"noopener noreferrer"},l={href:"https://github.com/johnnywang1994/maju-gpt-ui",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"這次製作除了加入了深色模式，也同時加入了兩種 deploy 方式，可以自己 host 一個 server，也可以像我的 Demo 一樣透過 serve static bundle 的方式，讓用戶自己輸入 API Key 使用",-1),_=e("h2",{id:"結論",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#結論","aria-hidden":"true"},"#"),a(" 結論")],-1),f=e("p",null,"以前都覺得 AI 離自己很遙遠，但實際使用了 ChatGPT 的 API 後覺得，AI 這東西實際可能比大家想像的要更快融入大家的生活中，更多的開發者加入壯大整個社群，雖然我也只是搞了一個複製品ＸＤ，但實際用起來覺得真是太酷了～今天就分享到這拉，掰掰～",-1);function m(I,g){const t=h("ExternalLinkIcon");return s(),o("div",null,[c,e("p",null,[a("這次做的最終產品在這邊"),e("a",d,[a("Maju GPT UI"),n(t)]),a("，歡迎有興趣的讀者可以去玩玩看喔，原始碼也開給大家參考 "),e("a",l,[a("johnnywang1994/maju-gpt-ui"),n(t)])]),u,_,f])}const x=r(p,[["render",m],["__file","create-own-chatgpt-ui.html.vue"]]);export{x as default};
