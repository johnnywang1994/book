import{_ as s,c as a,e,o as t}from"./app-Ba7lTalA.js";const p={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="react-testing-library" tabindex="-1"><a class="header-anchor" href="#react-testing-library"><span>React Testing Library</span></a></h1><p>這篇記錄 <code>@testing-library/react</code> 的一些學習筆記，主要來源於<a href="https://testing-library.com/docs/react-testing-library/api" target="_blank" rel="noopener noreferrer">官網</a></p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>Install</span></a></h2><p>其他必須安裝的東西在另一篇中已紀錄，這邊不再多寫一次~</p><ul><li><a href="https://testing-library.com/docs/react-testing-library/intro" target="_blank" rel="noopener noreferrer">@testing-library/react</a></li><li><a href="https://github.com/testing-library/jest-dom" target="_blank" rel="noopener noreferrer">@testing-library/jest-dom</a>: 可以使用一些特殊 matcher <code>toBeVisible</code>, <code>toBeInTheDocument</code></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev @testing-library/react @testing-library/jest-dom</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="query" tabindex="-1"><a class="header-anchor" href="#query"><span>Query</span></a></h2><p>查找元素</p><h3 id="三種方式" tabindex="-1"><a class="header-anchor" href="#三種方式"><span>三種方式</span></a></h3><ul><li>getBy: 尋找目標，不存在時噴錯</li><li>queryBy: 尋找目標，不存在時為 null</li><li>findBy: 等到目標到超時為止</li></ul><h3 id="推薦使用順序" tabindex="-1"><a class="header-anchor" href="#推薦使用順序"><span>推薦使用順序</span></a></h3><ul><li>getByLabelText</li><li>getByText</li><li>getByDisplayValue</li><li>getByTitle</li><li>getByTestId</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>screen<span class="token punctuation">,</span> getByLabelText<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/dom&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// With screen:</span></span>
<span class="line"><span class="token keyword">const</span> inputNode1 <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getByLabelText</span><span class="token punctuation">(</span><span class="token string">&#39;Username&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Without screen, you need to provide a container:</span></span>
<span class="line"><span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> inputNode2 <span class="token operator">=</span> <span class="token function">getByLabelText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> <span class="token string">&#39;Username&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="match" tabindex="-1"><a class="header-anchor" href="#match"><span>Match</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span> <span class="token comment">// full string match</span></span>
<span class="line">screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;llo Worl&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">exact</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// substring match</span></span>
<span class="line">screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">exact</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// ignore case</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>Debug</span></a></h3><p>打印出像是 console.log(prettyDOM(element)) 的效果</p><blockquote><p><code>prettyDOM</code> 是一個內建的<a href="https://testing-library.com/docs/dom-testing-library/api-debugging" target="_blank" rel="noopener noreferrer">打印元素工具函數</a></p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// debug document</span></span>
<span class="line">screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// debug single element</span></span>
<span class="line">screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// debug multiple elements</span></span>
<span class="line">screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getAllByText</span><span class="token punctuation">(</span><span class="token string">&#39;multi-test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manual" tabindex="-1"><a class="header-anchor" href="#manual"><span>Manual</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span>container<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> foo <span class="token operator">=</span> container<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;[data-foo=&quot;bar&quot;]&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="user-actions" tabindex="-1"><a class="header-anchor" href="#user-actions"><span>User Actions</span></a></h2><h3 id="fireevent" tabindex="-1"><a class="header-anchor" href="#fireevent"><span>fireEvent</span></a></h3><p>透過 <code>fireEvent</code> 對指定元素進行事件觸發</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> fireEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">Button</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>onClick<span class="token punctuation">,</span> children<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>onClick<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;calls onClick prop when clicked&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> handleClick <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span><span class="token operator">&gt;</span>Click Me<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line">  fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">click me</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">expect</span><span class="token punctuation">(</span>handleClick<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或是推薦透過 <code>@testing-library/user-event</code> 套件來觸發 DOM 事件</p><blockquote><p>使用時需注意，若 event 當中有 <code>setTimeout</code> 動作，必須在 setup 時加上 <code>delay: null</code> option，避免造成 timeout 問題，詳細<a href="https://github.com/testing-library/user-event/issues/833" target="_blank" rel="noopener noreferrer">討論可見這邊</a></p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> userEvent <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/user-event&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Dummy <span class="token keyword">from</span> <span class="token string">&#39;./Dummy&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  jest<span class="token punctuation">.</span><span class="token function">useFakeTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> user <span class="token operator">=</span> userEvent<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;test event&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> onClick <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> getByRole <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Dummy onClick<span class="token operator">=</span><span class="token punctuation">{</span>onClick<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 觸發事件</span></span>
<span class="line">    <span class="token keyword">await</span> user<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    jest<span class="token punctuation">.</span><span class="token function">runOnlyPendingTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">expect</span><span class="token punctuation">(</span>onClick<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="async-methods" tabindex="-1"><a class="header-anchor" href="#async-methods"><span>Async methods</span></a></h3><ul><li><a href="https://testing-library.com/docs/dom-testing-library/api-async" target="_blank" rel="noopener noreferrer">說明</a></li></ul><h4 id="findby" tabindex="-1"><a class="header-anchor" href="#findby"><span>findBy</span></a></h4><p>實際上就是 getBy 查詢和 waitFor 的組合，當您期望一個元素出現但對 DOM 的更改可能不會立即發生時，請使用 findBy 查詢</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> button <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Click Me&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">await</span> screen<span class="token punctuation">.</span><span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked once&#39;</span><span class="token punctuation">)</span></span>
<span class="line">fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">await</span> screen<span class="token punctuation">.</span><span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked twice&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="waitfor" tabindex="-1"><a class="header-anchor" href="#waitfor"><span>waitFor</span></a></h4><p>任何時候需要等待一段時間時，使用 <code>waitFor</code></p><blockquote><p>注意，<code>waitFor</code> 可能會多次運行回調，直到達到超時</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 等到 mockAPI 被執行一次後</span></span>
<span class="line"><span class="token keyword">await</span> <span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">expect</span><span class="token punctuation">(</span>mockAPI<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="waitforelementtoberemoved" tabindex="-1"><a class="header-anchor" href="#waitforelementtoberemoved"><span>waitForElementToBeRemoved</span></a></h4><p><code>waitForElementToBeRemoved</code> 是以 <code>waitFor</code> 為基礎製作，用來等待從 DOM 中移除元素</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;div.getOuttaHere&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">waitForElementToBeRemoved</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;div.getOuttaHere&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Element no longer in DOM&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line">el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-neat&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// other mutations are ignored...</span></span>
<span class="line">el<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// logs &#39;Element no longer in DOM&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="appearance-disappearance" tabindex="-1"><a class="header-anchor" href="#appearance-disappearance"><span>Appearance &amp; Disappearance</span></a></h3><ul><li><a href="https://testing-library.com/docs/guide-disappearance" target="_blank" rel="noopener noreferrer">說明</a></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev @testing-library/jest-dom</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;movie title appears&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// element is initially not present...</span></span>
<span class="line">  <span class="token comment">// wait for appearance and return the element</span></span>
<span class="line">  <span class="token keyword">const</span> movie <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;the lion king&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;movie title appears&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// element is initially not present...</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// wait for appearance inside an assertion</span></span>
<span class="line">  <span class="token keyword">await</span> <span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;the lion king&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> submitButton <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">queryByText</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">expect</span><span class="token punctuation">(</span>submitButton<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// it doesn&#39;t exist</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> submitButtons <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">queryAllByText</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">expect</span><span class="token punctuation">(</span>submitButtons<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// expect no elements</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fake-timer" tabindex="-1"><a class="header-anchor" href="#fake-timer"><span>Fake Timer</span></a></h3><ul><li><a href="https://testing-library.com/docs/using-fake-timers" target="_blank" rel="noopener noreferrer">說明</a></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// Fake timers using Jest</span></span>
<span class="line"><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  jest<span class="token punctuation">.</span><span class="token function">useFakeTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Running all pending timers and switching to real timers using Jest</span></span>
<span class="line"><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  jest<span class="token punctuation">.</span><span class="token function">runOnlyPendingTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  jest<span class="token punctuation">.</span><span class="token function">useRealTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="querying-within-elements" tabindex="-1"><a class="header-anchor" href="#querying-within-elements"><span>Querying Within Elements</span></a></h3><p>使用 <code>within</code> 函數包裹元素，可直接在其內進行 querying，不用給予 container</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>render<span class="token punctuation">,</span> within<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span>getByText<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> messages <span class="token operator">=</span> <span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;messages&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> helloMessage <span class="token operator">=</span> <span class="token function">within</span><span class="token punctuation">(</span>messages<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><ul><li><a href="https://testing-library.com/docs/dom-testing-library/api-configuration" target="_blank" rel="noopener noreferrer">說明</a><code>configure</code> 設定會自動合併到預設的設定中</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> configure <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">testIdAttribute</span><span class="token operator">:</span> <span class="token string">&#39;data-my-test-id&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redux-testing" tabindex="-1"><a class="header-anchor" href="#redux-testing"><span>Redux Testing</span></a></h2><ul><li><a href="https://redux.js.org/usage/writing-tests" target="_blank" rel="noopener noreferrer">說明</a></li></ul><h3 id="reducers" tabindex="-1"><a class="header-anchor" href="#reducers"><span>Reducers</span></a></h3><p>透過呼叫 <code>reducer</code> 我們可以給予相應的 <code>state</code>, <code>action</code> 對 store 進行測試操作</p><ul><li><a href="https://redux.js.org/usage/writing-tests#reducers" target="_blank" rel="noopener noreferrer">範例</a></li></ul><h3 id="redux-in-components" tabindex="-1"><a class="header-anchor" href="#redux-in-components"><span>Redux in Components</span></a></h3><p>撰寫一個客製化 <code>render</code> 函數如下</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token keyword">as</span> StoreProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> store <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">AllTheProviders</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token operator">&lt;</span>StoreProvider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">&gt;</span></span>
<span class="line">      <span class="token punctuation">{</span>children<span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>StoreProvider<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">customRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token parameter">ui<span class="token punctuation">,</span></span>
<span class="line">  options</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">render</span><span class="token punctuation">(</span>ui<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">wrapper</span><span class="token operator">:</span> AllTheProviders<span class="token punctuation">,</span> <span class="token operator">...</span>options<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token punctuation">{</span>customRender <span class="token keyword">as</span> render<span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,62)]))}const i=s(p,[["render",l],["__file","react-testing-library.html.vue"]]),r=JSON.parse('{"path":"/articles/memo/react/react-testing-library.html","title":"React Testing Library","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"Install","slug":"install","link":"#install","children":[]},{"level":2,"title":"Query","slug":"query","link":"#query","children":[{"level":3,"title":"三種方式","slug":"三種方式","link":"#三種方式","children":[]},{"level":3,"title":"推薦使用順序","slug":"推薦使用順序","link":"#推薦使用順序","children":[]},{"level":3,"title":"Match","slug":"match","link":"#match","children":[]},{"level":3,"title":"Debug","slug":"debug","link":"#debug","children":[]},{"level":3,"title":"Manual","slug":"manual","link":"#manual","children":[]}]},{"level":2,"title":"User Actions","slug":"user-actions","link":"#user-actions","children":[{"level":3,"title":"fireEvent","slug":"fireevent","link":"#fireevent","children":[]},{"level":3,"title":"Async methods","slug":"async-methods","link":"#async-methods","children":[]},{"level":3,"title":"Appearance & Disappearance","slug":"appearance-disappearance","link":"#appearance-disappearance","children":[]},{"level":3,"title":"Fake Timer","slug":"fake-timer","link":"#fake-timer","children":[]},{"level":3,"title":"Querying Within Elements","slug":"querying-within-elements","link":"#querying-within-elements","children":[]}]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":2,"title":"Redux Testing","slug":"redux-testing","link":"#redux-testing","children":[{"level":3,"title":"Reducers","slug":"reducers","link":"#reducers","children":[]},{"level":3,"title":"Redux in Components","slug":"redux-in-components","link":"#redux-in-components","children":[]}]}],"git":{"updatedTime":1668144217000,"contributors":[{"name":"johnnywang","username":"johnnywang","email":"johnny29621189@kimo.com","commits":1,"url":"https://github.com/johnnywang"},{"name":"johnnywang","username":"johnnywang","email":"johnnywang@test.com","commits":1,"url":"https://github.com/johnnywang"}]},"filePathRelative":"articles/memo/react/react-testing-library.md"}');export{i as comp,r as data};
