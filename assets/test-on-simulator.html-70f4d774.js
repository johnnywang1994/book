import{_ as e,o as a,c as s,f as i}from"./app-6eac6164.js";const l={},d=i(`<h1 id="在-simulator-上開發測試" tabindex="-1"><a class="header-anchor" href="#在-simulator-上開發測試" aria-hidden="true">#</a> 在 Simulator 上開發測試</h1><p>這篇筆記主要為紀錄如何在 Mac 環境裡測試 IOS, Android 畫面版面</p><h2 id="simulator-本地-https-開發" tabindex="-1"><a class="header-anchor" href="#simulator-本地-https-開發" aria-hidden="true">#</a> simulator 本地 https 開發</h2><ul><li>安裝 xcode 並打開</li><li>點擊畫面左上 <code>Xcode</code> =&gt; <code>Open Developer Tool</code> =&gt; <code>Simulator</code></li><li>把 Simulator 加入到 Dock 中方便下次開啟，或是透過指令 <code>open -a Simulator</code> 開啟最近一次開啟的模擬器</li><li>透過 mkcert 在本地建立 root 憑證後，印出 CA 憑證</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ mkcert <span class="token parameter variable">-install</span>
$ mkcert <span class="token parameter variable">-CAROOT</span> <span class="token comment"># /User/xxxx/Library/Application Support/mkcert</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>打開憑證資料夾，把 rootCA.pem 拖拉進模擬器畫面中，即可讓模擬器跳過 https 警告</li></ul><h2 id="android-studio-本地-https-開發" tabindex="-1"><a class="header-anchor" href="#android-studio-本地-https-開發" aria-hidden="true">#</a> Android Studio 本地 https 開發</h2><ul><li>安裝 Android Studio 並打開</li><li>點擊上方分頁 <code>Tools</code> =&gt; <code>Device Manager</code></li><li>接著可以新增自定義的作業環境版本、手機平板型號等等，建立完成後按下指定模擬器右邊的執行按鈕啟動</li><li>點擊 Project 分頁右上設定 <code>SDK Manager</code></li><li>進入 <code>Android SDK</code> 分頁，點擊 <code>SDK Tools</code> 安裝 <code>Android SDK Platform-Tools</code></li><li>複製上方 <code>Android SDK Location</code> 並添加到你的 PATH 路徑</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>執行 adb reverse 指令即可將 emulator 中的指定 port forward 到 host 本機的 port</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ adb reverse tcp:3000 tcp:3000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>若結束開發希望復原</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ adb reverse <span class="token parameter variable">--remove</span> tcp:3000 <span class="token comment"># remove port</span>
$ adb reverse --remove-all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看所有 forward list</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ adb reverse <span class="token parameter variable">--list</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如果要 forward 443 可能會出現 <code>Permission Deny</code> error，可用下方指令重新啟動 adb daemon</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ adb root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安裝 apk(比如安裝三星瀏覽器)</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ adb <span class="token function">install</span> my-app.apk
$ adb <span class="token function">install</span> <span class="token parameter variable">-r</span> my-app.apk <span class="token comment"># 重新安裝</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,19),n=[d];function r(o,t){return a(),s("div",null,n)}const u=e(l,[["render",r],["__file","test-on-simulator.html.vue"]]);export{u as default};
